{"generatedAt":"2025-08-29T03:35:47Z","data":{"otelcol":{"v0.107.0":{"client":["Mark module as stable. (#10775)"],"component":["Allow component names of up to 1024 characters in length. (#10816)","Removes the deprecated `Host.GetFactory` method. (#10771)"],"componentstatus":["Adds new componentstatus module that will soon replace status content in component. (#10730)"],"configauth":["üêû Fix unmarshaling of authentication in HTTP servers. (#10750)"],"confighttp":["Add `NewDefaultCORSConfig` function to initialize the default `confighttp.CORSConfig` (#9655)"],"configtelemetry":["Add 10s read header timeout on the configtelemetry Prometheus HTTP server. (#5699)"],"confmap":["Set the `confmap.unifyEnvVarExpansion` feature gate to Stable. Expansion of `$FOO` env vars is no longer supported.  Use `${FOO}` or `${env:FOO}` instead. (#10508)","Allow using any YAML structure as a string when loading configuration. (#10800)","Previous to this change, slices could not be used as strings in configuration.","If loading an invalid YAML string through a provider, use it verbatim instead of erroring out. (#10759)","This makes the ${env:ENV} syntax closer to how ${ENV} worked before unifying syntaxes.","Remove original string representation if invalid. (#10787)","Check that providers have a correct scheme when building a confmap.Resolver. (#10786)"],"connector/connectorprofiles":["Allow handling profiles in connector. (#10703)"],"expandconverter":["Deprecate `expandconverter`. (#10510)"],"exporter/exporterprofiles":["Allow handling profiles in exporter. (#10702)"],"exporterhelper":["Delete deprecated `exporterhelper.ObsReport` and `exporterhelper.NewObsReport` (#10779, #10592)"],"mdatagen":["export ScopeName in internal/metadata package (#10845)","This can be used by components that need to set their scope name manually. Will save component owners from having to store a variable, which may diverge from the scope name used by the component for emitting its own telemetry.","Expose a setting on tests::host to set up your own host initialization code (#10765)","Some receivers require a host that has additional capabilities such as exposing exporters.","For those, we can expose a setting that allows them to place a different host in the generated code."],"ocb":["migrate build and release of ocb binaries to opentelemetry-collector-releases repository (#10710)","ocb binaries will now be released under open-telemetry/opentelemetry-collector-releases tagged as \"cmd/builder/vX.XXX.X\"","Collectors built with OCB will no longer include the `expandconverter` (#10510)"],"otelcol":["Delete deprecated NewCommandMustSetProvider (#10778)"],"otelcoltest":["The `otelcol.LoadConfig` method no longer sets the `expandconverter`. (#10510)"],"processor/processorprofiles":["Allow handling profiles in processor. (#10691)"],"processorhelper":["üêû Fix processor metrics not being reported initially with 0 values. (#10855)"],"receiver/receiverprofiles":["Allow handling profiles in receiver. (#10690)"],"semconv":["Add v1.26.0 semantic conventions package (#10249, #10829)","Add semantic conventions version v1.27.0 (#10837)"],"service":["Remove OpenCensus bridge completely, mark feature gate as stable. (#10414)","üêû Remove `otelcol` from Prometheus configuration. This means that any metric that isn't explicitly prefixed with `otelcol_` no longer have that prefix. (#9759)","Allow users to disable the tracer provider via the feature gate `service.noopTracerProvider` (#10858)","The service is returning an instance of a SDK tracer provider regardless of whether there were any processors configured causing resources to be consumed unnecessarily.","Implement the `temporality_preference` setting for internal telemetry exported via OTLP (#10745)"]},"v0.108.0":{"all":["Added support for go1.23, bumped the minimum version to 1.22 (#10869)"],"batchprocessor":["Update units for internal telemetry (#10652)"],"builder":["Add a --skip-new-go-module flag to skip creating a module in the output directory. (#9252)"],"component":["Add `TelemetrySettings.LeveledMeterProvider` func to replace MetricsLevel in the near future (#10931)","Removed Status related types and functions.  Use `componentstatus` instead. (#10777)","Remove `ReportStatus` from `TelemetrySettings`. Use `componentstatus.ReportStatus` instead. (#10777)"],"componentstatus":["Add new Reporter interface to define how to report a status via a `component.Host` implementation (#10852)","Make componentstatus.InstanceID immutable. (#10494)"],"confmap":["Mark `confmap.strictlyTypedInput` as stable (#10552)","Mark module as stable (#9379)","üêû Fix bug where an unset env var used with a non-string field resulted in a panic (#10950)","Use string representation for field types where all primitive types are strings. (#10937)"],"connector":["Deprecate connector.Builder, and move it into an internal package of the service module (#10784)"],"exporter":["Deprecate exporter.Builder, and move it into an internal package of the service module (#10783)"],"exporter/otlp":["Add batching option to otlp exporter (#8122)"],"extension":["Add ModuleInfo to extension.Settings to allow extensions to access component go module information. (#10876)","Deprecate extension.Builder, and move it into an internal package of the service module (#10785)"],"extensions":["Remove `StatusWatcher` interface.  Use `componentstatus.Watcher` instead. (#10777)"],"mdatagen":["Add `LeveledMeter` method to mdatagen (#10933)","support using a different github project in mdatagen README issues list (#10484)","Updates mdatagen's usage to output a complete command line example, including the metadata.yaml file. (#10886)","Update generated telemetry template to only include context import when there are async metrics. (#10883)","üêû Fixed bug in which setting `SkipLifecycle` \u0026 `SkipShutdown` to true would result in a generated file with an unused import `confmaptest` (#10866)","Deprecating generated `Meter` func in favour of `LeveledMeter` (#10939)"],"otelcol":["Remove deprecated `ConfmapProvider` interface. (#10934)","Preserve internal representation when unmarshaling component configs (#10552)"],"processor":["Deprecate processor.Builder, and move it into an internal package of the service module (#10782)"],"receiver":["Deprecate receiver.Builder, and move it into an internal package of the service module (#10781)"],"scraperhelper":["deprecate NewObsReport, ObsReport, ObsReportSettings, scrapers should use NewScraperControllerReceiver (#10959)"],"service":["Adds `level` configuration option to `service::telemetry::trace` to allow users to disable the default TracerProvider (#10892)","This replaces the feature gate `service.noopTracerProvider` introduced in v0.107.0","üêû Fix memory leaks during service package shutdown (#9165)"]},"v0.108.1":{"mdatagen":["üêû Fix a missing import in the generated test file (#10969)"]},"v0.109.0":{"(general)":["üêû The `ocb` binary has an identified bug caused by the fact that some of the providers have been marked stable and the default providers in the `ocb` binary still use the unstable version. In order to fix this explicitly add the default providers in your otel builder config, if not already configured:","gomod: go.opentelemetry.io/collector/confmap/provider/envprovider v1.15.0","gomod: go.opentelemetry.io/collector/confmap/provider/fileprovider v1.15.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpprovider v0.109.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpsprovider v0.109.0","gomod: go.opentelemetry.io/collector/confmap/provider/yamlprovider v0.109.0"],"Remove ":["extensiontest` StatusWatcher helpers`: They were unused. They may be added back on a different module or after `componentstatus` is marked 1.0","(#11044)"],"ballastextension":["Removes the deprecated ballastextension (#10671)"],"configgrpc":["Change the value of max_recv_msg_size_mib from uint64 to int to avoid a case where misconfiguration caused an integer overflow. (#10948)"],"configtelemetry":["Add guidelines for each level of component telemetry (#10286)","Deprecating `TelemetrySettings.MeterProvider` in favour of `TelemetrySettings.LeveledMeterProvider` (#10912)"],"confmap":["Remove stable `confmap.strictlyTypedInput` gate (#11008)","Removes stable `confmap.unifyEnvVarExpansion` feature gate. (#11007)"],"connector":["Remove deprecated connector builder (#11019)"],"connectorprofiles":["Add ProfilesRouterAndConsumer interface, and NewProfilesRouter method. (#11023)"],"envprovider":["Mark module as stable (#10982)"],"exporter":["Remove deprecated exporter builder (#11019)"],"exporterqueue":["üêû Fix a bug in persistent queue that Offer can becomes deadlocked when queue is almost full (#11015)"],"extension":["Remove deprecated extension builder (#11019)","Deprecate `extension.ConfigWatcher`, `extension.PipelineWatcher` and `extension.Dependent` in favor of equivalents in the `extensioncapabilities` module. (#11000)"],"extension/experimental/storage":["Move `extension/experimental/storage` into a separate module (#11022)"],"extensioncapabilities":["Create a new module for optional extension capabilities. (#11000)"],"fileprovider":["Mark module as stable (#10983)"],"pprofile":["Change Profile ID field from a byte array to a custom data type (#11048)","Introduce marshalling and unmarshalling of pprofile data (#11048)"],"pprofileotlp":["Introduce grpc service implementation of pprofileotlp (#11048)"],"processor":["Add incoming and outgoing counts for processors using processorhelper. (#10910)","Any processor using the processorhelper package (this is most processors) will automatically report","incoming and outgoing item counts. The new metrics are:","- otelcol_processor_incoming_spans","- otelcol_processor_outgoing_spans","- otelcol_processor_incoming_metric_points","- otelcol_processor_outgoing_metric_points","- otelcol_processor_incoming_log_records","- otelcol_processor_outgoing_log_records","Remove deprecated processor builder (#11019)"],"processorhelper":["These funcs are not used anywhere, marking them deprecated. (#11083)"],"receiver":["Remove deprecated receiver builder (#11019)"],"scraperhelper":["Remove deprecated `ObsReport`, `ObsReportSettings`, `NewObsReport` types/funcs (#11086)","deprecate NewScraper, should use NewScraperWithComponentType (#11082)"],"service":["Removes stable `service.disableOpenCensusBridge` feature gate (#11009)","move `useOtelWithSDKConfigurationForInternalTelemetry` gate to beta (#11091)","implement a no-op tracer provider that doesn't propagate the context (#11026)","The no-op tracer provider supported by the SDK incurs a memory cost of propagating the context no matter","what. This is not needed if tracing is not enabled in the Collector. This implementation of the no-op tracer","provider removes the need to allocate memory when tracing is disabled.","Support profiles in the service package (#11024)"]},"v0.110.0":{"builder":["Honor build_tags in config (#11156)","üêû Fix version for providers in the default config (#11123)"],"cmd/builder":["Temporarily disable strict versioning checks (#11129, #11152)","The strict versioning check may be enabled by default in a future version once all configuration providers are stabilized."],"component":["Deprecates `DataType`, `DataTypeTraces`, `DataTypeMetrics`, and `DataTypeLogs`. Use `pipeline.Signal`, `SignalTraces`, `SignalMetrics`, and `SignalLogs` instead. (#11204)"],"componentprofiles":["Deprecates `DataTypeProfiles`. Use `SignalProfiles` instead. (#11204)"],"componentstatus":["Deprecates `NewInstanceID`, `AllPipelineIDs`, and `WithPipelines`. Use `NewInstanceIDWithPipelineIDs`, `AllPipelineIDsWithPipelineIDs`, and `WithPipelineIDs` instead. (#11204)"],"config":["Mark UseLocalHostAsDefaultHostfeatureGate as stable (#11235)"],"configgrpc":["Deprecate `ClientConfig.ToClientConn`/`ServerConfig.ToServer` in favor of `ToClientConnWithOptions`/`ToServerWithOptions` (#9480)","Users providing a grpc.DialOption/grpc.ServerOption should now wrap them into","a generic option with `WithGrpcDialOption`/`WithGrpcServerOption`."],"confignet":["Mark module as Stable. (#9801)"],"confmap":["üêû Fix loading config of a component from a different source. (#11154)","This issue only affected loading the whole component config, loading parts of a component config from a different source was working correctly."],"confmap/provider/envprovider":["Support default values when env var is empty (#5228)"],"connector":["Change `TracesRouterAndConsumer`, `NewTracesRouter`, `MetricsRouterAndConsumer`, `NewMetricsRouter`, `LogsRouterAndConsumer`, and `NewLogsRouter` to use `pipeline.ID` instead of `component.ID`. (#11204)"],"consumertest":["Introduce SampleCount method in ProfilesSink struct. (#11225)"],"exporterhelper":["Deprecate TimeoutSettings/QueueSettings in favor of TimeoutConfig/QueueConfig. (#6767)"],"exporterqueue":["Deprecates `Settings.DataType`. Use `Settings.Signal` instead. (#11204)"],"extension":["Remove deprecated extension interfaces. (#11043)","They are now available in the `extensioncapabilities` module."],"mdatagen":["Add stability field to telemetry metrics, allowing the generated description to include a stability string. (#11160)","mdatagen `validateMetrics()` support validate metrics in `telemetry.metric` (#10925)","Use cobra for the command, add version flag (#11196)","üêû Fix incorrect generation of metric tests with boolean attributes. (#11169)","Avoid using private types in public APIs and also protect options to be implemented outside this module. (#11040)"],"options":["Avoid using private types in public APIs and also protect options to be implemented outside this module. (#11054)"],"otelcol":["üêû Fix the Windows Event Log configuration when running the Collector as a Windows service. (#5297, #11051)"],"otlpexporter":["The `TimeoutSettings` field in `otlpexporter.Config` was renamed to `TimeoutConfig`. (#11132)"],"otlpreceiver":["Support profiles in the OTLP receiver (#11071)"],"pdata":["Add support to MoveTo for Map, allow avoiding copies (#11175)","Add support to MoveTo for Map, allow avoiding copies (#11175)"],"pipeline":["Adds new `pipeline` module to house the concept of pipeline ID and Signal. (#11209)"],"processorhelper":["Update incoming/outgoing metrics to a single metric with a `otel.signal` attributes. (#11144)","The following metrics were added in the previous version","- otelcol_processor_incoming_spans","- otelcol_processor_outgoing_spans","- otelcol_processor_incoming_metric_points","- otelcol_processor_outgoing_metric_points","- otelcol_processor_incoming_log_records","- otelcol_processor_outgoing_log_records","They are being replaced with the following to more closely align with OTEP 259:","- otelcol_processor_incoming_items","- otelcol_processor_outgoing_items","Remove deprecated `[Traces|Metrics|Logs]`Inserted funcs (#11151)","deprecate accepted/refused/dropped metrics (#11201)","The following metrics are being deprecated as they were only used in a single","processor:"],"scraperhelper":["Deprecate NewScraperWithComponentType, should use NewScraper (#11159)"],"service":["Ensure process telemetry is registered when internal telemetry is configured with readers instead of an address. (#11093)","Deprecates `pipelines.Config`. Use `pipelines.ConfigWithPipelineID` instead. (#11204)","Deprecates service's implementation of `GetExporters` interface.  Use `GetExportersWithSignal` instead. (#11249)"],"service/telemetry":["Mark useOtelWithSDKConfigurationForInternalTelemetry as stable (#7532)"]},"v0.111.0":{"(general)":["üêû The `ocb` binary has an identified bug caused by the fact that some of the providers have been marked stable and the default providers in the `ocb` binary still use the unstable version. In order to fix this explicitly add the default providers in your otel builder config, if not already configured:","gomod: go.opentelemetry.io/collector/confmap/provider/envprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/fileprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpsprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/yamlprovider v1.17.0"],"cmd/builder":["re-adds function to properly set and view version number of OpenTelemetry Collector Builder (ocb) binaries (#11208)"],"component":["Removed deprecated `ErrDataTypeIsNotSupported`, `DataType`, `DataTypeTraces`, `DataTypeMetrics`, and `DataTypeLogs`.  Use `pipeline.ErrSignalNotSupported`, `pipeline.Signal`, `pipeline.SignalTraces`, `pipeline.SignalMetrics`, and `pipeline.SignalLogs` instead. (#11253)"],"componentprofiles":["Removed deprecated `DataTypeProfiles`.  Use `SignalProfiles` instead. (#11312)"],"componentstatus":["Deprecated `NewInstanceIDWithPipelineIDs`, `AllPipelineIDsWithPipelineIDs`, and `WithPipelineIDs`. Use `NewInstanceID`, `AllPipelineIDs`, and `WithPipelines` instead. (#11313)"],"configgrpc":["Replace ToClientConn and ToServer with ToClientConnWithOptions and ToServerWithOptions. (#11271, #9480)","`ClientConfig.ToClientConn` and `ServerConfig.ToServer` were deprecated in v0.110.0 in favor of","`ClientConfig.ToClientConnWithOptions` and `ServerConfig.ToServerWithOptions` which use a more","flexible option type. The original functions are now removed, and the new ones are renamed to the","old names. The `WithOptions` names are kept as deprecated aliases for now."],"confighttp":["Snappy compression to lazy read for memory efficiency (#11177)"],"confmap":["Allow using any YAML structure as a string when loading configuration including time.Time formats (#10659)","Previously, fields with time.Time formats could not be used as strings in configurations"],"exporterhelper":["Removed deprecated `QueueTimeout`/`TimeoutSettings` aliases in favor of `QueueConfig`/`TimeoutConfig`. (#11264, #6767)","`NewDefaultQueueSettings` and `NewDefaultTimeoutSettings` have been similarly renamed."],"exporterqueue":["Remove deprecated `Settings.DataType`. Use `Settings.Signal` instead. (#11305)"],"exportertest":["Remove deprecated `CheckConsumeContractParams.DataType`. Use `CheckConsumeContractParams.Signal` instead. (#11305)"],"httpprovider":["Mark the httpprovider as stable. (#11191)"],"httpsprovider":["Mark the httpsprovider as stable. (#11191)"],"loggingexporter":["üêû Removed the deprecated `logging` exporter.  Use the `debug` exporter instead. (#11037).","You can read issue #11337 for migration instructions."],"ocb":["create docker images for OCB, per https://github.com/open-telemetry/opentelemetry-collector-releases/pull/671 (#5712)","Adds standard Docker images for OCB to Dockerhub and GitHub, see hub.docker.com/r/otel/opentelemetry-collector-builder"],"pdata":["Unmarshal Span and SpanLink flags from JSON (#11267)"],"pdata/pprofile":["Replace slices of values to slices of pointers for the `Mapping`, `Location`, `Line`, `Function`, `AttributeUnit`, `Link`, `Value`, `Sample` and `Labels` attributes. (#11339)"],"processor":["Deprecate funcs that repeat \"processor\" in name (#11310)","Factory.Create[Traces|Metrics|Logs|Profiles]Processor -\u003e Factory.Create[Traces|Metrics|Logs|Profiles]","Factory.[Traces|Metrics|Logs|Profiles]ProcessorStability -\u003e Factory.[Traces|Metrics|Logs|Profiles]Stability"],"processorhelper":["Deprecate BuildProcessorMetricName as it's no longer needed since introduction of mdatagen (#11302)","üêû Fix data race condition, concurrent writes to the err variable, causes UB (Undefined Behavior) (#11350)","Remove deprecated funcs form processorhelper.ObsReport (#11289)","The \"otelcol_processor_dropped_log_records\", \"otelcol_processor_dropped_log_records\" | and \"otelcol_processor_dropped_spans\" metrics are complete removed, before they were always record with 0 values.","Deprecate unused and empty struct processorhelper.ObsReport (#11293)"],"receiver":["Deprecate funcs that repeat \"receiver\" in name (#11287)","Factory.Create[Traces|Metrics|Logs|Profiles]Receiver -\u003e Factory.Create[Traces|Metrics|Logs|Profiles]","Factory.[Traces|Metrics|Logs|Profiles]ReceiverStability -\u003e Factory.[Traces|Metrics|Logs|Profiles]Stability"],"receivertest":["Remove deprecated `CheckConsumeContractParams.DataType`. Use `CheckConsumeContractParams.Signal` instead. (#11304)","Deprecated `NewNopFactoryForTypeWithSignal`. Use `NewNopFactoryForType` instead. (#11304)"],"scraperhelper":["Remove deprecated function `NewScraperWithComponentType`. (#11294)"],"service":["Deprecates `Config.PipelinesWithPipelineID`, `pipelines.ConfigWithPipelineID` and `GetExportersWithSignal` interface implementation. Use `Config.Pipelines`, `pipelines.Config`, and `GetExporters` interface implementation instead. (#11303)"],"service/telemetry":["Change default metrics address to \"localhost:8888\" instead of \":8888\" (#11251)","This behavior can be disabled by disabling the feature gate `telemetry.UseLocalHostAsDefaultMetricsAddress`.","Deprecate service::telemetry::metrics::address in favor of service::telemetry::metrics::readers. (#11205)","Change default metrics address to \"localhost:8888\" instead of \":8888\" (#11251)","This behavior can be disabled by disabling the feature gate 'telemetry.UseLocalHostAsDefaultMetricsAddress'."],"yamlprovider":["Mark the yamlprovider as stable. (#11192)"]},"v0.112.0":{"cmd/builder":["üêû Fix default configuration for builder for httpprovider, httpsprovider, and yamlprovider. (#11357)"],"componentprofiles":["Move componentprofiles to pipelineprofiles (#11421)"],"componentstatus":["Remove deprecated `NewInstanceIDWithPipelineIDs`, `AllPipelineIDsWithPipelineIDs`, and `WithPipelineIDs`. Use `NewInstanceID`, `AllPipelineIDs` and `WithPipelines` instead. (#11363)"],"configcompression":["Add support for lz4 compression (#9128)"],"configgrpc":["Removed deprecated `ClientConfig.ToClientConnWithOptions`/`ServerConfig.ToServerWithOptions`. (#11359, #9480)","These methods were renamed to `ClientConfig.ToClientConn`/`ServerConfig.ToServer` in v0.111.0."],"confighttp":["Adding support for lz4 compression into the project (#9128)"],"connector":["Put connectortest in its own module (#11216)"],"consumer/consumererror":["Extract consumer/consumererror as a separate go module (#11440)"],"consumererrorprofiles":["Add new module consumereerrorprofiles for consumer error profiles. (#11131)"],"exporter":["Disables setting batch option to batch sender directly. (#10368)","Removed WithRequestBatchFuncs(BatcherOption) in favor of WithBatchFuncs(Option), where | BatcherOption is a function that operates on batch sender and Option is one that operates | on BaseExporter","Made mergeFunc and mergeSplitFunc required method of exporter.Request (#10368)","mergeFunc and mergeSplitFunc used to be part of the configuration pass to the exporter. Now it is changed | to be a method function of request.","Deprecate funcs that repeate exporter in name (#11370)","Factory.Create[Traces|Metrics|Logs|Profiles]Exporter -\u003e Factory.Create[Traces|Metrics|Logs|Profiles] |","Factory.[Traces|Metrics|Logs|Profiles]ExporterStability -\u003e Factory.[Traces|Metrics|Logs|Profiles]Stability"],"exporter/exportertest":["Put expotertest into its own module (#11461)"],"exporterhelper":["Retry sender will fail fast when the context timeout is shorter than the next retry interval. (#11183)"],"extension":["Deprecate funcs that repeat extension in name (#11413)","Factory.CreateExtension -\u003e Factory.Create |","Factory.ExtensionStability -\u003e Factory.Stability"],"mdatagen":["Added generated_package_name config field to support custom generated package name. (#11231)","Generate documentation for components with resource attributes only (#10705)"],"otlpexporter":["Add profiles support to OTLP exporter (#11435)"],"otlphttpexporter":["Add profiles support to OTLP HTTP exporter (#11450)"],"processor":["Put processortest in its own module (#11218)","Remove deprecated funcs from processor package (#11368)"],"processorhelper":["üêû Fix issue where in/out parameters were not recorded when error was returned from consumer. (#11351)","Remove deprecated funcs/types from processorhelper \u0026 componenttest (#11302)"],"processortest":["Deprecated 'NewUnhealthyProcessorCreateSettings'. Use NewNopSettings instead. (#11307)"],"receiver":["Remove deprecated funcs from receiver package (#11367)"],"receivertest":["Removed deprecated `NewNopFactoryForTypeWithSignal`. Use `NewNopFactoryForType` instead. (#11362)"],"service":["Remove stable gate component.UseLocalHostAsDefaultHost (#11412)","Hide profiles support behind a feature gate while it remains alpha. (#11477)","Change Host to not implement GetExportersWithSignal (#11444)","Use Host.GetExporters if still needed.","Remove deprecated `pipelines.ConfigWithPipelineID` and `Config.PipelinesWithPipelineID`. Use `pipelines.Config` and `Config.Pipelines` instead. (#11361)"]},"v0.113.0":{"batchprocessor":["Move single shard batcher creation to the constructor (#11594)"],"builder":["Remove builder support to build old version, and the otelcol_version config (#11405)","User should remove this property from their config, to build older versions use older builders.","Remove deprecated flags from Builder (#11576)","Here is the list of flags | --name, --description, --version, --otelcol-version, --go, --module","Update builder default providers to lastest stable releases (#11566)","Remove deprecated flags from Builder (#11576)","Here is the list of flags | --name, --description, --version, --otelcol-version, --go, --module"],"component":["Add UnmarshalText for StabilityLevel (#11520)"],"config/configgrpc":["üêû Patch for bug in the grpc-go NewClient that makes the way the hostname is resolved incompatible with the way proxy setting are applied. (#11537)"],"debugexporter":["üêû Add profiles support to debug exporter (#11155)"],"internal/fanoutconsumer":["Extract internal/fanoutconsumer as a separate go module (#11441)"],"internal/sharedcomponent":["Extract internal/sharedcomponent as a separate go module (#11442)"],"mdatagen":["Add otlp as supported distribution (#11527)","Add newTelemetrySettings to be generated all the time even for pkg class (#11535)"],"processorhelperprofiles":["Add processorhelperprofiles to support profiles signal (#11556)"],"receiver":["Make receivertest into its own module (#11462)"],"service":["add support for using the otelzap bridge and emit logs using the OTel Go SDK (#10544)","ensure traces and logs emitted by the otel go SDK use the same resource information (#11578)"]},"v0.114.0":{"all":["shorten time period before removing an unmaintained component from 6 months to 3 months (#11664)","Updates dialer timeout section documentation in confignet README (#11685)"],"cmd/builder":["Allow for replacing of local Providers and Converters when building custom collector with ocb. (#11649)","Use the property `path` under `gomod` to replace an go module with a local folder in","builder-config.yaml. Ex:","```","providers:","- gomod: module.url/my/custom/provider v1.2.3","path: /path/to/local/provider","```","Allow configuring `confmap.Converter` components in ocb. (#11582)","If no converters are specified, there will be no converters added.","Currently, the only published converter is `expandconverter` which is","deprecated as of v0.107.0, but can still be added for testing purposes.","To configure a custom converter, make sure your converter implements the converter","interface and is published as a go module (or replaced locally if not published).","You may then use the `converters` key in your OCB build manifest with a list of","Go modules (and replaces as necessary) to include your converter.","Please note that converters are order-dependent. The confmap will apply converters","in order of which they are listed in your manifest if there is more than one."],"component":["Make componenttest into its own module (#11464)","Deprecate `TelemetrySettings.LeveledMeterProvider` and undo deprecation of `TelemetrySettings.MeterProvider` (#11061)"],"expandconverter":["Remove deprecated expandvar converter (#11672)"],"exporter":["Remove deprecated funcs Create[*]Exporter and [*]ExporterStability (#11662)"],"exporterhelper":["Remove derprecated NewLogs[Request]Exporter funcs (#11661)"],"extension":["Remove deprecated funcs CreateExtension and ExtensionStability (#11663)"],"extensiontest":["Make extensiontest into its own module (#11463)"],"processortest":["Remove deprecated func NewUnhealthyProcessorCreateSettings (#11665)"],"scraperhelper":["If the scraper shuts down, do not scrape first. (#11632)","When the scraper is shutting down, it currently will scrape at least once.","With this change, upon receiving a shutdown order, the receiver's scraperhelper will exit immediately.","Deprecate Scraper.ID func, pass type when register Scraper (#11238)"]},"v0.115.0":{"component":["Mark `TelemetrySettings.LeveledMeterProvider` as deprecated (#11697)"],"consumer":["Mark consumer as stable. (#9046)"],"exporterqueue":["Introduce a feature gate exporter.UsePullingBasedExporterQueueBatcher to use the new pulling model in exporter queue batching. (#8122, #10368)","If both queuing and batching is enabled for exporter, we now use a pulling model instead of a","pushing model. num_consumer in queue configuration is now used to specify the maximum number of","concurrent workers that are sending out the request."],"extension/auth/authtest":["`authtest` is now its own module (#11465, #11705)"],"featuregate":["üêû Fix an unfriendly display message `runtime error` when featuregate is used to display command line usage. (#11651)"],"mdatagen":["Remove deprecated LeveledMeter from the generated code (#11696)"],"otelcol":["Change all logged timestamps to ISO8601. (#10543)","This makes log timestamps human-readable (as opposed to epoch seconds in","scientific notation), but may break users trying to parse logged lines in the","old format."],"pdata/pprofile":["Upgrade pdata to opentelemetry-proto v1.4.0 (#11722)","AttributeTable is now a slice rather than a map (#11706)"],"profiles":["üêû Fix iteration over scope profiles while counting the samples. (#11688)"],"receiver/scraper":["Move receiver/scrapererror package to scraper/scrapererror and deprecate original receiver/scrapererror package. (#11003)"],"scraperhelper":["Deprecate all Scraper helpers in scraperhelper (#11732)","Deprecate ScrapeFunc, ScraperOption, WithStart, WithShutdown in favor of equivalent funcs in scraper package.","Remove deprecated scraperhelper funcs Scraper.ID, NewScraper, AddScraper. (#11710)","Make Scraper compatible with the new scraper.Metrics (#11682)","Deprecate scraperhelper.Scraper in favor of scraper.Metrics"],"service":["label metrics as alpha to communicate their stability (#11729)","Add support for ca certificates in telemetry metrics otlp grpc exporter (#11633)","Before this change the Certificate value in config was silently ignored.","ensure OTLP emitted logs respect severity (#11718)"]},"v0.116.0":{"component":["Remove deprecated TelemetrySettings.LeveledMeterProvider (#11811)"],"connector":["Deprecate connectorprofiles module in favor of xconnector to allow adding more experimental data types. (#11778)"],"consumer":["Deprecate consumerprofiles module in favor of xconsumer to allow adding more experimental data types. (#11778)"],"consumererror":["Deprecate consumererrorprofiles module in favor of xconsumererror to allow adding more experimental data types. (#11778)"],"exporter":["Deprecate exporterprofiles module in favor of xexporter to allow adding more experimental data types. (#11778)"],"exporterhelper":["üêû Fix memory leak at exporter shutdown (#11401)","Deprecate exporterhelperprofiles module in favor of xexporterhelper to allow adding more experimental data types. (#11778)"],"pdata/pprofile":["Remove deprecated `Profile.EndTime` and `Profile.SetEndTime` methods. (#11796)"],"pipeline":["Deprecate pipelineprofiles module in favor of xpipeline to allow adding more experimental data types. (#11778)"],"processor":["Deprecate processorprofiles module in favor of xprocessor to allow adding more experimental data types. (#11778)"],"processorhelper":["Deprecate processorhelperprofiles module in favor of xprocessorhelper to allow adding more experimental data types. (#11778)"],"receiver":["Deprecate receiverprofiles module in favor of xreceiver to allow adding more experimental data types. (#11778)"],"receiver/scrapererror":["Remove the receiver/scrapererror alias. (#11003)"],"receiver/scraperhelper":["Add scraper for logs (#11238)"],"scraperhelper":["Remove deprecated scraperhelper.Scraper and helpers (#11803)"],"sharedcomponent":["Remove race-condition and cleanup locking (#11819)"],"xconfighttp":["Add WithOtelHTTPOptions to experimental module xconfighttp (#11770)"]},"v0.117.0":{"connector":["Remove deprecated connectorprofiles module, use xconnector instead. (#11778)"],"consumer":["Remove deprecated consumerprofiles module, use xconsumer instead. (#11778)"],"consumererror":["Remove deprecated consumererrorprofiles module, use xconsumererror instead. (#11778)"],"exporter":["Remove deprecated exporterprofiles module, use xexporter instead. (#11778)"],"exporterhelper":["Remove deprecated exporterhelperprofiles module, use xexporterhelper instead. (#11778)","Remove Merge function from experimental Request interface (#12012)"],"extension/experimental":["Deprecate extension/experimental in favor of extension/xextension (#12010)"],"internal/sharedcomponent":["üêû Fixed bug where sharedcomponent would use too much memory remembering all the previously reported statuses (#11826)"],"mdatagen":["Deprecate component_test in favor of metadatatest (#11812)"],"otelcol":["Remove warnings when 0.0.0.0 is used (#11713, #8510)"],"pdata":["Upgrade pdata to opentelemetry-proto v1.5.0 (#11932)"],"pdata/pprofile":["Remove duplicate Attributes field from profile (#11932)"],"pipeline":["Remove deprecated pipelineprofiles module, use xpipeline instead. (#11778)"],"processor":["Remove deprecated processorprofiles module, use xprocessor instead. (#11778)"],"processorhelper":["Remove deprecated processorhelperprofiles module, use xprocessorhelper instead. (#11778)"],"receiver":["Remove deprecated receiverprofiles module, use xreceiver instead. (#11778)"],"receivertest":["Deprecate receivertest.NewNopFactoryForType (#11993)"],"scraperhelper":["Move scraperhelper under scraper and in a separate module. (#11003)"],"scrapertest":["Add scrapertest package in a separate module (#11988)"]},"v0.118.0":{"componenttest":["Deprecate CheckScraperMetrics in componenenttest (#12105)","Use `metadatatest.AssertMetrics` instead of `obsreporttest.CheckScraperMetrics`"],"confighttp":["Added support for configuring compression levels. (#10467)","A new configuration option called CompressionParams has been added to confighttp. | This allows users to configure the compression levels for the confighttp client.","Added support for configuring compression levels. (#10467)","A new configuration option called CompressionParams has been added to confighttp. | This allows users to configure the compression levels for the confighttp client."],"debugexporter":["üêû Add EventName to debug exporter for Logs. EventName was added as top-level field in the LogRecord from 1.5.0 of proto definition. (#11966)"],"experimental/storage":["Remove deprecated package/module experimental/storage (#12109)"],"exporterhelper":["Add blocking option to control queue behavior when full (#12090)","Change the memory queue implementation to not pre-allocate capacity objects. (#12070)","This change improves memory usage of the collector under low utilization and is a prerequisite for supporting different other size limitations (number of items, bytes).","Add capability for memory and persistent queue to block when add items (#12074)","Change persistent queue to not use sized channel, improve memory usage and simplify sized_channel. (#12060)"],"exporterqueue":["Change Queue Size and Capacity to return explicit int64. (#12076)"],"mdatagen":["apply fieldalignment to generated code (#12121)","Remove deprecated generated_component_telemetry_test file from being generated and delete it. (#12068)","Add scraper component type support to mdatagen (#12092)","Add tracing support in metadatatest (#12106)"],"otelcoltest":["Set `DefaultScheme` to `env` in the test `ConfigProvider` to replicate the default provider used by the Collector. (#12066)"],"processorteset":["Revert the nop_processor.NewNopSettings change, as it is no longer needed (#11433)"],"receiver/scraperhelper":["Removing the deprecated receiver/scraperhelper package (#12054)"],"receivertest":["Remove deprecated receivertest.NewNopFactoryForType (#12110)"],"scraper/scraperhelper":["Add obs_logs for scraper/scraperhelper (#12036)","This change adds obs for logs in scraper/scraperhelper, also introduced new metrics for scraping logs."],"scraperhelper":["Deprecate `scraperhelper.NewScraperControllerReceiver` and `scraperhelper.ScraperControllerOption`. (#12103)","Use `scraperhelper.NewMetricsController` instead of `scraperhelper.NewScraperControllerReceiver` | Use `scraperhelper.ScraperControllerOption` instead of `scraperhelper.ControllerOption`"]},"v0.119.0":{"cmd/mdatagen":["Remove dead field `telemetry::level` (#12144)","Remove `level` field from metrics definition (#12145)","This mechanism will be added back once a new views mechanism is implemented.","Allow passing OTel Metric SDK options to the generated `SetupTelemetry` function. (#12166)"],"component":["Change underlying type for `component.Kind` to be a struct. (#12214)","Deprecate `component.TelemetrySettings.MetricsLevel` in favor of using views and 'Enabled' method. (#12159)","- Components will temporarily need the service to support using views.","Allow `component.ValidateConfig` to recurse through all fields in a config object (#11524)","Show path to invalid config in errors returned from `component.ValidateConfig` (#12108)"],"component/componenttest":["Remove deprecated `CheckScraperMetrics` functions (#12183)","Deprecate `CheckExporterEnqueue*` functions in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckExporterEnqueue*` functions.","Deprecate CheckExporterLogs in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckExporterLogs`","Deprecate CheckExporterMetricGauge in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckReceiverMetricGauge`","Deprecate CheckExporterMetrics in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckExporterMetrics`","Deprecate CheckExporterTraces in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckExporterTraces`","Deprecate CheckReceiverLogs in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckReceiverLogs`"],"componenttest":["Add helper to get a metric for componentest.Telemetry (#12215)","Extract componenttest.Telemetry as generic struct for telemetry testing (#12151)"],"confighttp":["confighttp.ToServer now sets ErrorLog with a default logger backed by Zap (#11820)","This change ensures that the http.Server's ErrorLog is correctly set using Zap's logger at the error level, addressing the issue of error logs being printed using a different logger."],"configtls":["Allow users to mention their preferred curve types for ECDHE handshake (#12174)"],"exporterhelper":["Rename exporter span signal specific attributes (e.g. \"sent_spans\" / \"send_failed_span\") to \"items.sent\" / \"items.failed\". (#12165)","Change exporter ID to be a Span level attribute instead on each event. (#12164)","This does not have an impact on the level of information emitted, but on the structure of the Span.","üêû Fix bug that the exporter with new batcher may have been marked as non mutation. (#12239)","Only affects users that manually turned on `exporter.UsePullingBasedExporterQueueBatcher` featuregate.","üêû Fix context propagation for DisabledBatcher (#12231)","üêû Fix MergeSplit issue that ignores the initial message size. (#12257)","Change queue to embed the async consumers. (#12242)","Rename exporter span signal specific attributes (e.g. \"sent_spans\" / \"send_failed_span\") to \"items.sent\" / \"items.failed\". (#12165)"],"exporterqueue":["Change Queue interface to return a callback instead of an index (#8122)"],"extension":["Change `extension.Extension` to be an interface that embeds `component.Component` instead of an alias (#11443)"],"general":["Reduce memory allocations when loading configuration and parsing component names (#11964)"],"mdatagen":["apply fieldalignment to generated code (#12125)","üêû Fix bug where Histograms were marked as not supporting temporaly aggregation (#12168)","Make registration of callback for async metric always optional. (#12204)","Deprecate `metadata.TelemetryBuilder.Init*` and `metadata.With*Callback` in favor of `metadata.TelemetryBuilder.Register*Callback`","Generate assert function for each metric in mdatagen (#12179)","All register callbacks to async instruments can now be unregistered by calling `metadata.TelemetryBuilder.Shutdown()` (#12204)","üêû Fix bug where Histograms were marked as not supporting temporaly aggregation (#12168)"],"metadatatest":["Deprecate metadatatest.Telemetry in favor of componenttest.Telemetry (#12218)","metadatatest.Telemetry -\u003e componenttest.Telemetry |","metadatatest.SetupTelemetry -\u003e componenttest.NewTelemetry |","metadatatest.Telemetry.NewSettings -\u003e metadatatest.NewSettings |","metadatatest.Telemetry.AssertMetrics -\u003e metadatatest.AssertEqual* |","Generate NewSettings that accepts componenttest.Telemetry (#12216)"],"otelcol":["Adds support for listing config providers in components command's output (#11570)"],"pdata/pprofile":["Add new helper method `FromAttributeIndices` to build a `pcommon.Map` out of `AttributeIndices`. (#12176)"],"scraper":["Support logs scraper (#12116)"],"scraperhelper":["Remove deprecated ScrapperControllerOption and NewScraperControllerMetrics from scraperhelper. (#12147)"],"service":["remove custom code and instead use config package to instantiate meter provider. (#11611)","Preserve URL normalization logic that was present before. (#12254)","Include validation errors from telemetry.Config when validating the service config (#12100)","Previously validation errors were only printed to the console"],"service-telemetry":["pass the missing async error channel into service telemetry settings (#11417)"]},"v0.120.0":{"all":["Added support for go1.24, bumped minimum version to 1.23 (#12370)"],"cmd/builder":["üêû Ensure unique aliases for modules with same suffix (#12201)"],"component":["Remove deprecated field `component.TelemetrySettings.MetricsLevel`. (#11061)","Deprecate `ConfigValidator` and `ValidateConfig` (#11524)","Please use `Validator` and `Validate` respectively from `xconfmap`."],"component/componenttest":["Deprecate CheckReceiverMetrics in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckReceiverMetrics`","Deprecate CheckReceiverTraces in componenenttest (#12185)","Use the `metadatatest.AssertEqualMetric` series of functions instead of `obsreporttest.CheckReceiverTraces`"],"configauth":["Remove NewDefaultAuthentication (#12223)","The value returned by this function will always cause an error on startup.","In `configgrpc.Client/ServerConfig.Auth`, `nil` should be used instead to disable authentication."],"configgrpc":["Add the `omitempty` mapstructure tag to struct fields (#12191)","This results in unset fields not being rendered when marshaling.","Apply configured Headers automatically (#12307)","configgrpc now calls metadata.AppendToOutgoingContext automatically in an interceptor.","Components that were manually using metadata.NewOutgoingContext as a workaround no longer need to","do so, unless they are overwriting or adding header keys.","Set Auth to nil in NewDefaultClientConfig/NewDefaultServerConfig (#12223)","The value that was used previously would always cause an error on startup."],"confighttp":["Add `ToClientOption` type and add it to signature of `ToClient` method. (#12353)","- This has no use for now, it may be used in the future."],"confignet":["Add the `omitempty` mapstructure tag to struct fields (#12191)","This results in unset fields not being rendered when marshaling."],"configtls":["Add the `omitempty` mapstructure tag to struct fields (#12191)","This results in unset fields not being rendered when marshaling."],"consumer":["Clarify that data cannot be accessed after Consume* func is called. (#12284)"],"exporterhelper":["Implement sync disabled queue used when batching is enabled. (#12245)","Enable the new pull-based batcher in exporterhelper (#12291)","Update queue size after the element is done exported (#12399)","After this change the active queue size will include elements in the process of being exported.","üêû Fix undefined behavior access to request after send to next component. This causes random memory access. (#12281)","üêû Fix default batcher to correctly call all done callbacks exactly once (#12247)"],"exporterqueue":["üêû Fix async queue to propagate cancellation all they way to the queue (#12282)"],"extension":["Remove `extension.Settings.ModuleInfo` (#12296)","- The functionality is now available as an optional, hidden interface on `service`'s implementation of the `Host`","Explicitly error out at extension creation time if there is a type mismatch. (#12305)"],"extension, connector, processor, receiver, exporter, scraper":["Deprecate `Create*` methods from `Create*Func` types. (#12305)"],"extensiontest, connectortest, processortest, receivertest, exportertest, scrapertest":["Deprecate `*test.NewNopSettings` in favor of `*test.NewNopSettingsWithType` (#12305)"],"mdatagen":["Removing deprecated generated funcs and a few test funcs as well. (#12304)","Remove unused not_component config for mdatagen (#12237)"],"memorylimiter":["Logger no longer attributes to single signal, pipeline, or component. (#12217)"],"otelcol":["Add featuregate command to display information about available features (#11998)","The featuregate command allows users to view detailed information about feature gates","including their status, stage, and description.","Make the `ConfigProvider` interface a struct (#12297)","Calls to `NewConfigProvider` will now return `*ConfigProvider`,","but will otherwise work the same as before."],"otlphttpexporter":["üêû Fix parsing logic for Retry-After in OTLP http protocol. (#12366)","The value of Retry-After field can be either an HTTP-date or delay-seconds and the current logic only parsed delay-seconds."],"otlpreceiver":["Update stability for logs (#12335)","Logger no longer attributes to random signal when receiving multiple signals. (#12217)","üêû Fix OTLP http receiver to correctly set Retry-After (#12367)","üêû Fix OTLP http receiver to correctly set Retry-After (#12367)"],"pdata/pprofile":["Introduce aggregation temporality constants (#12253)"],"receiver, scraper, processor, exporter, extension":["Deprecate existing MakeFactoryMap functions in favor of generic implementation (#12222)"],"service":["Align component logger attributes with those defined in RFC (#12217)","See [Pipeline Component Telemetry RFC](https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/rfcs/component-universal-telemetry.md#attributes)"],"xconfmap":["Create the xconfmap module and add the `Validator` interface and `Validate` function to facilitate config validation (#11524)"]},"v0.121.0":{"component":["Mark module as stable (#9376)","Remove deprecated function and interface `ConfigValidator` and `ValidateConfig`. (#11524)","- Use `xconfmap.Validator` and `xconfmap.Validate` instead."],"component/componenttest":["Removing the deprecated `CheckReceiverMetrics` and `CheckReceiverTraces` functions. (#12185)"],"componenttest":["Deprecated componenttest.TestTelemetry in favor of componenttest.Telemetry (#12419)"],"configauth":["Add the `omitempty` mapstructure tag to struct fields (#12191)","This results in unset fields not being rendered when marshaling."],"confighttp":["Make the client config options `max_idle_conns`, `max_idle_conns_per_host`, `max_conns_per_host`, and `idle_conn_timeout` integers (#9478)","All four options can be set to `0` where they were previously set to `null`","Add the `omitempty` mapstructure tag to struct fields (#12191)","This results in unset fields not being rendered when marshaling."],"confmap":["Surface YAML parsing errors when they happen at the top-level. (#12180)","This adds context to some instances of the error \"retrieved value (type=string) cannot be used as a Conf\", which typically happens because of invalid YAML documents"],"connector, exporter, extension, processor, receiver, scraper":["Add type parameter to `NewNopSettings` and deprecate `NewNopSettingsWithType` (#12305)"],"exporterhelper":["Deprecate `min_size_items` and `max_size_items` in favor of `min_size` and `max_size`. (#12486)","Stabilize exporter.UsePullingBasedExporterQueueBatcher and remove old batch sender (#12425)","üêû Fix bug where the error logged when conversion of data fails is always nil (#12510)","Update MergeSplit function signature to use the new SizeConfig (#12486)","Change the signature of the exporterhelper.WithQueueRequest to accept Encoding instead of the Factory. (#12509)","Deprecate MinSizeConfig and MaxSizeItems. (#12486)","Adds the config API to support serialized bytes based batching (#3262)","Stabilize exporter.UsePullingBasedExporterQueueBatcher and remove old batch sender (#12425)"],"exporterqueue":["Remove exporterqueue.Factory in favor of the NewQueue function, and merge configs for memory and persistent. (#12509)","As a side effect of this change, no alternative implementation of the queue are supported and the Queue interface will be hidden."],"extension":["Mark module as stable (#11005)"],"extension, connector, processor, receiver, exporter, scraper":["Remove deprecated `Create*` methods from `Create*Func` types. (#12305)","The `xconnector.CreateMetricsToProfilesFunc.CreateMetricsToProfiles` method has been removed without a deprecation."],"extension/auth, extension/auth/authtest":["Deprecate extension/auth and the related test module in favor of extension/extensionauth (#12478)"],"extension/extensionauth":["Deprecate methods on `*Func` types. (#12480)"],"mdatagen":["Add `converter` and `provider` module classes (#12467)","Update metadata schema with new fields without enforcing them (#12359)","Adds back missing import for filter when emitting resource attributes (#12455)","üêû Fix broken imports in the generated files. (#12298)"],"memorylimiter":["Add support to configure min GC intervals for soft and hard limits. (#12450)"],"memorylimiterprocessor":["Add support for profiles. (#12453)"],"otelcol":["Converters are now available in the `components` command. (#11900, #12385)","Converters are now available in the `components` command. (#11900, #12385)"],"otlpexporter":["Update the stability level for logs, it has been as stable as traces and metrics for some time. (#12423)"],"pcommon.Map":["preallocate go map in Map.AsRaw() (#12406)"],"pipeline":["output pipeline name with signal as signal[/name] format in logs. (#12410)"],"pprofile":["Add LinkIndex attribute to the generated Sample type (#12485)"],"processor, connector, exporter, receiver":["Explicitly error out at component creation time if there is a type mismatch. (#12305)"],"receiver, scraper, processor, exporter, extension":["Remove deprecated MakeFactoryMap functions in favor of generic implementation (#12222)"],"service":["Create a new subcommand to dump the initial configuration after resolving/merging. (#11479)","To use the `print-initial-config` subcommand, invoke the Collector with the subcommand and corresponding feature gate: `otelcol print-initial-config --feature-gates=otelcol.printInitialConfig --config=config.yaml`.","Note that the feature gate enabling this flag is currently in alpha stability, and the subcommand may","be changed in the future.","üêû Fix crash at startup when converting from v0.2.0 to v0.3.0 (#12438)","üêû fix bug in parsing service::telemetry configuration (#12437)","Add the `omitempty` mapstructure tag to struct fields (#12191)","This results in unset fields not being rendered when marshaling."],"service/hostcapabilities":["create `service/hostcapabilities` module (#12296, #12375)","Removes getExporters interface in service/internal/graph.","Removes getModuleInfos interface in service/internal/graph.","Creates interface ExposeExporters in service/hostcapabilities to expose GetExporters function.","Creates interface ModuleInfo in service/hostcapabilities to expose GetModuleInfos function."]},"v0.122.0":{"auth, authtest":["Remove deprecated modules extension/auth and extension/auth/authtest (#12543)","Use extension/extensionauth and extension/extensionauth/extensionauthtest instead."],"cmd/mdatagen":["Add `supportsSignal` func for `Metadata` type in `mdatagen`. (#12640)"],"component/componenttest":["Remove the deprecated componenttest.TestTelemetry in favor of componenttest.Telemetry (#12419)"],"componenttest":["Improve config struct mapstructure field tag checks (#12590)","`remain` tags and `omitempty` tags without a custom field name will now pass validation."],"configauth":["Deprecate `configauth.Authenticator.GetClientAuthenticator`. (#12574)","- Use the per-protocol methods instead."],"confmap":["Introduce a new feature flag to allow for merging lists instead of discarding the existing ones. (#8394, #8754, #10370)","You can enable this option via the command line by running following command:","otelcol --config=main.yaml --config=extra_config.yaml --feature-gates=-confmap.enableMergeAppendOption","Maintain nil values when marshaling or unmarshaling nil slices (#11882)","Previously, nil slices were converted to empty lists, which are semantically different","than a nil slice. This change makes this conversion more consistent when encoding","or decoding config, and these values are now maintained."],"exporterhelper":["Remove the Request.Export function in favor of an equivalent request consume func in the New[Traces|Metrics|Logs|Profiles]Request (#12637)","Deprecate per signal converter in favor of generic version (#12631)"],"extensionauth":["Remove deprecated methods from the `Func` types. (#12547)","Deprecate `extensionauth.NewClient` and `extensionauth.NewServer`. (#12574)","- Manually implement the interfaces instead."],"extensionauthtest":["Remove the `extensionauthtest.MockClient` struct. (#12567)","- Use `extensionauthtest.NewNopClient` to create a client with a noop implementation.","- Use `extensionauthtest.NewErrorClient` to create a client that always returns an error.","- Implement the `extensionauth` interfaces for custom mock client implementations."],"extensiontest, connectortest, processortest, receivertest, scrapertest, exportertest":["Remove deprecated `NewNopSettingsWithType` functions, use `NewNopSettings` instead. (#12221)"],"mdatagen":["Delete generated_status.go if the component type doesn't require it. (#12346)","Add deprecation date and migration guide fields as part of component metadata (#12359)"],"pdata":["Add iterator All method to pdata slices and map types. (#11982)"],"pdata/pcommon":["Introduce `Equal()` method for comparison equality to `Value`, `ByteSlice`, `Float64Slice`, `Int32Slice`, `Int64Slice`, `StringSlice`, `Uint64Slice`, `Map` and `Slice` (#12594)"],"pdata/pprofile":["Introduce AddAttribute helper method to modify the content of attributable records (#12206)"],"receiver":["Mark module as stable (#12513)"],"receiverhelper":["Split `receiverhelper` into a separate module (#28328)"],"service":["Batch processor telemetry is no longer emitted at \"basic\" verbosity level (#7890)","According to the guidelines, basic-level telemetry should be reserved for core Collector APIs.","Components such as the batch processor should emit telemetry starting from the \"normal\" level","(which is also the default level).","Migration: If your Collector telemetry was set to `level: basic` and you want to keep seeing","batch processor-related metrics, consider switching to `level: normal` instead.","Add `service.AllowNoPipelines` feature gate to allow starting the Collector without pipelines. (#12613)","This can be used to start with only extensions.","include component id/type in start error (#10426)","do not attempt to register process metrics if they are disabled (#12098)"],"zpagesextension":["Add expvar handler to zpages extension. (#11081)"]},"v0.122.1":{"confmap":["Ensure slices with defaults containing struct values are correctly set. (#12661)","This reverts the changes made in https://github.com/open-telemetry/opentelemetry-collector/pull/11882."]},"v0.123.0":{"(general)":["This version increases memory usage by ~0.5 MB per component in the pipelines because a separate Zap Core logger is"],"configauth.Authenticator.GetClientAuthenticator":["."],"exporterbatch":["Remove deprecated fields `min_size_items` and `max_size_items` from batch config. (#12684)","Remove deprecated fields `min_size_items` and `max_size_items` from batch config. (#12684)"],"exporterbatcher":["Deprecated Config, SizeConfig, SizerType, SizerType[Requests|Items|Bytes], NewDefaultConfig. Use alias from exporterhelper. (#12707)"],"exporterhelper":["Deprecate `blocking` in favor of `block_on_overflow`. (#12710)","Deprecate configuring exporter batching separately. Use `sending_queue::batch` instead. (#12772)","Moving the batching configuration to `sending_queue::batch` requires setting `sending_queue::sizer` to `items`","which means that `sending_queue::queue_size` needs to be also increased by the average batch size number (roughly","x5000 for the default batching configuration).","See https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/exporterhelper#configuration","Add support to configure batching in the sending queue. (#12746)","Add support for wait_for_result, remove disabled_queue (#12742)","This has a side effect for users of the experimental BatchConfig with the queue disabled, since not this is | uses only NumCPU() consumers.","Allow exporter memory queue to use different type of sizers. (#12708)","Enable support to do batching using `bytes` sizer (#12751)","üêû Fix order of starting between queue and batch. (#12705)","Remove deprecated converter types from exporterhelper (#12686)","Deprecate BatcherConfig, SizeConfig and WithBatcher in favor of the new QueueBatchConfig. (#12748)","Deprecate exporterhelper WithRequestQueue in favor of WithQueueBatch (#12679)","Deprecate `QueueConfig` in favor of `QueueBatchConfig`. (#12746)"],"exporterqueue":["Move Queue interface to internal, disallow alternative implementations (#12680)","Deprecated Config, NewDefaultConfig, Encoding, ErrQueueFull. Use alias from exporterhelper. (#12706)"],"extensionauth":["Mark module as stable (#11006)"],"extensionauth, configauth":["Remove deprecated types and functions from `extensionauth` and `configauth` packages. (#12672)","This includes:"],"extensionauth.ClientOption":["and all its implementations,"],"extensionauth.NewClient":[","],"extensionauth.NewServer":[","],"extensionauth.ServerOption":["and all its implementations and"],"otelcol.signal.output":["These attributes are defined in the [Pipeline Component Telemetry RFC](https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/rfcs/component-universal-telemetry.md#attributes),","and identify the component instance from which the telemetry originates.","They are added automatically without changes to component code.","These attributes were already included in internal logs as regular log attributes, starting from","v0.120.0. For consistency with other signals, they have been switched to scope attributes (with","the exception of logs emitted to standard output), and are now enabled by the feature gate.","Please make sure that the exporter / backend endpoint you use has support for instrumentation","scope attributes before using this feature. If the internal telemetry is exported to another","Collector, a transform processor could be used to turn them into other kinds of attributes if","necessary."],"otlpexporter":["Mark BatcherConfig as deprecated, use `sending_queue::batch` instead (#12726)"],"otlpreceiver/otlpexporter/otlphttpexporter":["Avoid using go embedded messages in Config (#12718)"],"processor":["Mark module as stable. (#12677)"],"processorhelper":["Split processorhelper into a separate module. (#12678)"],"service":["Add \"telemetry.newPipelineTelemetry\" feature gate to inject component-identifying attributes in internal telemetry (#12217)","With the feature gate enabled, all internal telemetry (metrics/traces/logs) will include some of","the following instrumentation scope attributes:","Add config key to set metric views used for internal telemetry (#10769)","The `service::telemetry::metrics::views` config key can now be used to explicitly set the list of","metric views used for internal telemetry, mirroring `meter_provider::views` in the SDK config.","This can be used to disable specific internal metrics, among other uses.","This key will cause an error if used alongside other features which would normally implicitly create views, such as:","- not setting `service::telemetry::metrics::level` to `detailed`;","- enabling the `telemetry.disableHighCardinalityMetrics` feature flag."],"service/telemetry":["Missing attributes in internal Collector logs (#12870).","- See issue description for workarounds.","Mark `telemetry.disableAddressFieldForInternalTelemetry` as beta, usage of deprecated service::telemetry::address are ignored (#12756)","To restore the previous behavior disable `telemetry.disableAddressFieldForInternalTelemetry` feature gate."]},"v0.124.0":{"client":["Add support for iterating over client metadata keys (#12804)"],"cmd/mdatagen":["Add the foundational changes necessary for supporting logs data in `mdatagen` (#12571)"],"confighttp":["Ensure http authentication server failures are handled by the provided error handler (#12666)"],"exporterbatcher":["Remove deprecated package exporterbatcher (#12780)"],"exporterhelper":["Add support for bytes-based batching for profiles in the exporterhelper package. (#3262)","Link batcher context to all batched request's span contexts. (#12212, #8122)"],"exporterqueue":["Remove deprecated package exporterqueue (#12779)"],"mdatagen":["Add variable for metric name in mdatagen (#12459)","Access metric name via `metadata.MetricsInfo.\u003cmetric-variable\u003e.Name`"],"otelcol":["Enhance config validation using \u003cvalidate\u003e command to capture all validation errors that prevents the collector from starting. (#8721)"],"service":["Adds the GetFactory interface to the hostcapabilities package (#12789)"],"service/telemetry":["Missing attributes in internal Collector logs (#12870).","- See issue description for workarounds."]},"v0.125.0":{"configgrpc":["Add gRPC middleware support. (#12603, #9591)"],"confighttp":["Add HTTP middleware support. (#12603, #9591, #7441)"],"configmiddleware":["Add extensionmiddleware interface. (#12603, #9591)","Add configmiddleware struct. (#12603, #9591)"],"confmap":["Maintain nil values when marshaling or unmarshaling nil slices (#11882)","Previously, nil slices were converted to empty lists, which are semantically different","than a nil slice. This change makes this conversion more consistent when encoding","or decoding config, and these values are now maintained."],"exporterhelper":["Do not ignore the `num_consumers` setting when batching is enabled. (#12244)","Reject elements larger than the queue capacity (#12847)"],"extensionauthtest":["Deprecate NewErrorClient in favor of NewErrClient. (#12874)"],"mdatagen":["Add support for attributes for telemetry configuration in metadata. (#12919)","Add time and plog package imports (#12907)"],"pdata":["Add MoveTo to pcommon.Value, only type missing this (#12877)","üêû Fix MoveTo when moving to the same destination (#12887)"],"service":["Lowercase values for 'otelcol.component.kind' attributes. (#12865)","Restrict the `telemetry.newPipelineTelemetry` feature gate to metrics. (#12856, #12933)","üêû The \"off\" state of this feature gate introduced a regression, where the Collector's internal logs were missing component attributes. See issue #12870 for more details on this bug.","On the other hand, the \"on\" state introduced an issue with the Collector's default internal metrics, because the Prometheus exporter does not currently support instrumentation scope attributes.","To solve both of these issues, this change turns on the new scope attributes for logs and traces by default regardless of the feature gate.","However, the new scope attributes for metrics stay locked behind the feature gate, and will remain off by default until the Prometheus exporter is updated to support scope attributes.","Please understand that enabling the `telemetry.newPipelineTelemetry` feature gate may break the export of Collector metrics through, depending on your configuration.","Having a `batch` processor in multiple pipelines is a known trigger for this.","üö®‚ö†Ô∏è This comes with a breaking change, where internal logs exported through OTLP will now use instrumentation scope attributes to identify the source component instead of log attributes.","This does not affect the Collector's stderr output. See the changelog for v0.123.0 for a more detailed description of the gate's effects."],"xextension/storage":["ErrStorageFull error added to xextension/storage contract (#12925)"]},"v0.126.0":{"cmd/mdatagen":["Add type definition for events in mdatagen (#12571)","Add functions for processing structured events in mdatagen (#12571)"],"configauth":["Removes deprecated `configauth.Authentication` and `extensionauthtest.NewErrorClient` (#12992)","The following have been removed:","Deprecate `configauth.Authentication` in favor of `configauth.Config`. (#12875)"],"configauth.Authentication":["use `configauth.Config` instead"],"confighttp and configcompression":["üêû Fix handling of `snappy` content-encoding in a backwards-compatible way (#10584, #12825)","The collector used the Snappy compression type of \"framed\" to handle the HTTP","content-encoding \"snappy\".  However, this encoding is typically used to indicate","the \"block\" compression variant of \"snappy\".  This change allows the collector to:","- When receiving a request with encoding 'snappy', the server endpoints will peek","at the first bytes of the payload to determine if it is \"framed\" or \"block\" snappy,","and will decompress accordingly.  This is a backwards-compatible change.","If the feature-gate \"confighttp.framedSnappy\" is enabled, you'll see new behavior for both client and server:","- Client compression type \"snappy\" will now compress to the \"block\" variant of snappy","instead of \"framed\". Client compression type \"x-snappy-framed\" will now compress to the \"framed\" variant of snappy.","- Servers will accept both \"snappy\" and \"x-snappy-framed\" as valid content-encodings."],"confmap":["Update the behavior of the confmap.enableMergeAppendOption feature gate to merge only component lists. (#12926)","Use reflect.DeepEqual to avoid panic when confmap.enableMergeAppendOption feature gate is enabled. (#12932)"],"exporterhelper":["Add validation error for batch config if min_size is greater than queue_size. (#12948)"],"extensionauthtest.NewErrorClient":["use `extensionauthtest.NewErr` instead"],"internal telemetry":["Add resource attributes from telemetry.resource to the logger (#12582)","Resource attributes from telemetry.resource were not added to the internal","console logs.","Now, they are added to the logger as part of the \"resource\" field."],"service":["Replace `go.opentelemetry.io/collector/semconv` usage with `go.opentelemetry.io/otel/semconv` (#12991)","Add item count metrics defined in Pipeline Component Telemetry RFC (#12812)","See [Pipeline Component Telemetry RFC](https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/rfcs/component-universal-telemetry.md) for more details:"],"telemetry":["Allocate less memory per component when OTLP exporting of logs is disabled (#13014)"],"tls":["Add trusted platform module (TPM) support to TLS authentication. (#12801)","Now the TLS allows the use of TPM for loading private keys (e.g. in TSS2 format)."],"tlsconfig":["Disable TPM tests on MacOS/Darwin (#12964)"]},"v0.127.0":{"cmd/mdatagen":["Add events in generated documentation (#12571)"],"confmap":["Add a `Conf.Delete` method to remove a path from the configuration map. (#13064)","Support running Unmarshal hooks on nil values. (#12981)"],"consumer/consumertest":["Add context to sinks (#13039)"],"exporter/debug":["Display resource and scope in `normal` verbosity (#10515)"],"mdatagen":["Add context parameter for recording event to set traceID and spanID (#12571)"],"otlpreceiver":["Use wrapper type for URL paths (#13046)"],"pdata/profile":["Replace AddAttribute with the PutAttribute helper method to modify the content of attributable records. (#12798)"],"pipeline":["Deprecate MustNewID and MustNewIDWithName (#12831)"],"semconv":["Deprecating the semconv package in favour of go.opentelemetry.io/otel/semconv (#13012)"],"service":["Add size metrics defined in Pipeline Component Telemetry RFC (#13032)","See [Pipeline Component Telemetry RFC](https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/rfcs/component-universal-telemetry.md) for more details:"]},"v0.128.0":{"confighttp":["Update the HTTP server span naming to use the HTTP method and route pattern instead of the path. (#12468)","The HTTP server span name will now be formatted as `\u003chttp.request.method\u003e \u003chttp.route\u003e`.","If a route pattern is not available, it will fall back to `\u003chttp.request.method\u003e`.","Remove pointer to field `cookies` in confighttp.ClientConfig (#13116)","Make the `NewDefaultServerConfig` function return a nil TLS config by default. (#13129)","- The previous default was a TLS config with no certificates, which would fail at runtime."],"confighttp,configgrpc":["Rename `ClientConfig.TLSSetting` and `ServerConfig.TLSSetting` to `ClientConfig.TLS` and `ServerConfig.TLS`. (#13115)"],"configoptional":["Add a new configoptional module to support optional configuration fields. (#12981)"],"confmap":["Do not panic on assigning nil maps to non-nil maps (#13117)","Correctly distinguish between `nil` and empty map values on the `ToStringMap` method (#13161)","This means that `ToStringMap()` method can now return a nil map if the original value was `nil`.","If you were not doing so already, make sure to check for `nil` before writing to the map to avoid panics."],"exporterhelper":["Remove deprecated NewProfilesRequestExporter function from xexporterhelper package (#13157)"],"mdatagen":["üêû Fix generation when there are no events in the metadata. (#13123)"],"otlpreceiver":["Use `configoptional.Optional` to define optional configuration sections in the OTLP receiver. Remove `Unmarshal` method. (#13119)"],"pdata":["üêû Fix event_name skipped when unmarshalling LogRecord from JSON (#13127)","Introduce `MoveAndAppendTo` methods to the generated primitive slices (#13074)","Upgrade the OTLP protobuf definitions to version 1.7.0 (#13075)"],"pdata/pprofile":["Upgrade the OTLP protobuf definitions to version 1.7.0 (#13075)","Note that the batcher is temporarily a noop."],"pipeline":["Remove deprecated MustNewID[WithName] (#13139)"],"service":["Use configured loggers to log errors as soon as it is available (#13081)","Remove stabilized featuregate useOtelWithSDKConfigurationForInternalTelemetry (#13152)"],"service/telemetry":["Mark \"telemetry.disableAddressFieldForInternalTelemetry\" as stable (#13152)"],"telemetry":["Add generated resource attributes to the printed log messages. (#13110)","If service.name, service.version, or service.instance.id are not specified in the config, they will be generated automatically.","This change ensures that these attributes are also included in the printed log messages."]},"v0.129.0":{"configgrpc,confighttp":["Unify return type of `NewDefault*Config` functions to return a struct instead of a pointer. (#13169)"],"configoptional":["Make unmarshaling into `None[T]` work the same as unmarshaling into `(*T)(nil)`. (#13168)","Add a confmap.Marshaler implementation for configoptional.Optional (#13196)"],"confmap":["Distinguish between empty and nil values when marshaling `confmap.Conf` structs. (#13196)"],"exporterhelper":["Remove deprecated sending_queue::blocking options, use sending_queue::block_on_overflow. (#13211)","Preserve request span context and client information in the persistent queue. (#11740, #13220, #13232)","It allows internal collector spans and client information to propagate through the persistent queue used by","the exporters. The same way as it's done for the in-memory queue.","Currently, it is behind the exporter.PersistRequestContext feature gate, which can be enabled by adding","`--feature-gates=exporter.PersistRequestContext` to the collector command line. An exporter buffer stored by","a previous version of the collector (or by a collector with the feature gate disabled) can be read by a newer","collector with the feature enabled. However, the reverse is not supported: a buffer stored by a newer collector with","the feature enabled cannot be read by an older collector (or by a collector with the feature gate disabled).","QueueBatchEncoding interface is changed to support marshaling and unmarshaling of request context. (#13188)"],"mdatagen":["Taught mdatagen to print the `go list` stderr output on failures, and to run `go list` where the metadata file is. (#13205)"],"pdata":["üêû Fix copying of optional fields when the source is unset. (#13268)"],"pdata/pprofile":["Add new helper methods `FromLocationIndices` and `PutLocation` to read and modify the content of locations. (#13150)","Introduce `Equal` method on the `Mapping` type (#13197)","Introduce `Equal` methods on the `Line` and `Location` types (#13150)","Add new helper method `SetMapping` to set a new mapping on a location. (#13197)"],"semconv":["Removing deprecated semconv package (#13071)"],"service":["Support setting `sampler` and `limits` under `service::telemetry::traces` (#13201)","This allows users to enable sampling and set span limits on internal Collector traces using the","OpenTelemetry SDK declarative configuration.","Only allocate one set of internal log sampling counters (#13014)","üêû The case where logs are only exported to stdout was fixed in v0.126.0;","üêû this new fix also covers the case where logs are exported through OTLP."]},"v0.130.0":{"(general)":["üêû Due to a [bug](https://github.com/open-telemetry/opentelemetry-go/issues/7039) in the internal telemetry Prometheus exporter, if you are configuring an internal telemetry Prometheus exporter, the collector's internal metrics will be emitted with an unexpected suffix in its name. For example, the metric `otelcol_exporter_sent_spans__spans__total` instead of `otelcol_exporter_sent_spans_total`. The workaround is to manually configure `without_units: true` in your internal telemetry Prometheus exporter config","pull:"],"cmd/mdatagen":["Add support for optional attribute (#12571)"],"configgrpc":["Update optional fields to use `configoptional.Optional` field for optional values. (#13250, #13252)","Components using `configgrpc` package may need to update config values."],"confighttp":["Use configoptional.Optional in confighttp (#9478)"],"consumererror":["Add `Error` type (#7047)","This type can contain information about errors that allow components (e.g. exporters)","to communicate error information back up the pipeline."],"exporter/otlp":["Remove deprecated batcher config from OTLP, use queuebatch (#13339)","Remove deprecated batcher config from OTLP, use queuebatch (#13339)"],"exporterhelper":["Enable items and bytes sizers for persistent queue (#12881)","Refactor persistent storage size backup to always record it. (#12890)","Add support to configure a different Sizer for the batcher than the queue (#13313)","üêû Fix exporter.PersistRequestContext feature gate (#13342)","Preserve all metrics metadata when batch splitting. (#13236)","Previously, when large batches of metrics were processed, the splitting logic in `metric_batch.go` could","üêû cause the `name` field of some metrics to disappear. This fix ensures that all metric fields are","properly preserved when `metricRequest` objects are split.","Use configoptional for sending_queue::batch field (#13345)","Remove sizer map in favor of items/bytes sizers. Request based is automatically supported. (#13262)","Remove deprecated old batcher config (#13003)","Deprecate NewRequestsSizer always supported. (#13262)","Add support to configure a different Sizer for the batcher than the queue (#13313)"],"pdata":["Document that changing pcommon.Map (Remove/removeIf/Put*) invalidates Value references obtained via Get. (#13073)","Add support for the new resource-entity reference API as part of the experimental xpdata package. (#13264)"],"pdata/pprofile":["Remove field Profile.StartTime from pdata/pprofile (#13315)","Remove Profile.StartTime from OTel Profiling signal."],"service":["Default internal metrics config now enables `otel_scope_` labels (#12939, #13344)","By default, the Collector exports its internal metrics using a Prometheus","exporter from the opentelemetry-go repository. With this change, the Collector","no longer sets \"without_scope_info\" to true in its configuration.","This means that all exported metrics will have `otel_scope_name`,","`otel_scope_schema_url`, and `otel_scope_version` labels corresponding to the","instrumentation scope metadata for that metric.","This notably prevents an error when multiple metrics are only distinguished","by their instrumentation scopes and end up aliased during export.","If this is not desired behavior, a Prometheus exporter can be explicitly","configured with this option enabled."],"xexporterhelper":["Introduce NewProfiles method and deprecate NewProfilesExporter (#13372)"],"yaml":["Replaced `sigs.k8s.io/yaml` with `go.yaml.in/yaml` for improved support and long-term maintainability. (#13308)"]},"v0.130.1":{"service":["üêû Fixes bug where internal metrics are emitted with an unexpected suffix in their names when users configure `service::telemetry::metrics::readers` with Prometheus. (#13449)","See more details on https://github.com/open-telemetry/opentelemetry-go/issues/7039"]},"v0.131.0":{"KeepaliveServerConfig.EnforcementPolicy":["(`KeepaliveEnforcementPolicy` type)"],"KeepaliveServerConfig.ServerParameters":["(`KeepaliveServerParameters` type)"],"architecture":["New Tier 3 platform riscv64 allowing the collector to be built and distributed for this platform. (#13462)"],"builder":["Remove undocumented handling of `DIST_*` environment variables replacements (#13335)"],"configgrpc":["Update optional fields to use `configoptional.Optional` field for optional values. (#13252, #13364)","Specifically, the following fields have been updated to `configoptional`:"],"confighttp":["Move `confighttp.framedSnappy` feature gate to beta. (#10584)"],"consumererror":["Add new \"Downstream\" error marker (#13234)","This new error wrapper type indicates that the error returned by a component's","`Consume` method is not an internal failure of the component, but instead","was passed through from another component further downstream.","This is used internally by the new pipeline instrumentation feature to","determine the `outcome` of a component call. This wrapper is not intended to","be used by components directly."],"exporter/debug":["Move to alpha stability except profiles (#13487)"],"exporterhelper":["Enable `exporter.PersistRequestContext` feature gate by default. (#13437)","Request context is now preserved by default when using persistent queues.","Note that Auth extensions context is not propagated through the persistent queue.","üêû Fix metrics split logic to consider metrics description into the size. (#13418)","Prevents the exporter for being stuck when telemetry data is bigger than batch.max_size (#12893)"],"mdatagen":["üêû Fix import paths for mdatagen component (#13069)"],"otlpreceiver":["Remove usage of gogo proto which uses reflect.Value.MethodByName. Removes one source of disabling DCE. (#12747)","Error handler correctly fallbacks to content type (#13414)"],"pdata":["Use pdatagen to generate marshalJSON without using gogo proto jsonpb. (#13450)","Remove usage of text/template from pdata, improves DCE. (#12747)"],"pdata/pprofile":["Introduce `Equal` method on the `Function` type (#13222)","Introduce `Equal` method on the `Link` type (#13223)","Add new helper method `SetFunction` to set a new function on a line. (#13222)","Add new helper method `SetLink` to set a new link on a sample. (#13223)","Add new helper method `SetString` to set or retrieve the index of a value in the StringTable. (#13225)"],"pdata/pprofiles":["üêû Fix profiles JSON unmarshal logic for originalPayload. The bytes have to be base64 encoded. (#13483)"],"service":["New pipeline instrumentation now differentiates internal failures from downstream errors (#13234)","With the telemetry.newPipelineTelemetry feature gate enabled, the \"received\" and \"produced\"","metrics related to a component now distinguish between two types of errors:","- \"outcome = failure\" indicates that the component returned an internal error;","- \"outcome = refused\" indicates that the component successfully emitted data, but returned an","error coming from a downstream component processing that data.","Downgrade dependency of prometheus exporter in OTel Go SDK (#13429)","üêû This fixes the bug where collector's internal metrics are emitted with an unexpected suffix in their names when users configure the service::telemetry::metrics::readers with Prometheus","Revert Default internal metrics config now enables `otel_scope_` labels (#12939, #13344)","üêû Reverting change temporarily due to prometheus exporter downgrade. This unfortunately re-introduces the bug that instrumentation scope attributes cause errors in Prometheus exporter. See http://github.com/open-telemetry/opentelemetry-collector/issues/12939 for details."],"xexporterhelper":["Remove deprecated NewProfilesExporter function from xexporterhelper package (#13391)"],"xpdata":["üêû Fix unmarshaling JSON for entities, add e2e tests to avoid this in the future. (#13480)"]},"v0.132.0":{"cmd/mdatagen":["Use a custom host implementation for lifecycle tests (#13589)","Use a custom noop host implementation that implements all non-deprecated, publicly-accessible interfaces implemented by the Collector service."],"componentstatus":["Change the signature of the componentstatus.NewEvent to accept multiple options. (#13210)","Changes the signature of the component.NewEvent to accept multiple EventBuilderOption,","like the new WithAttributes constructor."],"componenttest":["Remove `GetFactory` from the host returned by `NewNopHost` (#13577)","This method is no longer part of the `component.Host` interface."],"confighttp":["Add option to configure ForceAttemptHTTP2 to support HTTP/1 specific transport settings. (#13426)","üêû Fix middleware configuration field name from \"middleware\" to \"middlewares\" for consistency with configgrpc (#13444)","Reuse zstd Reader objects (#11824)"],"exporterhelper":["Provide an interface `queue_batch.Setting.MergeCtx` so users can control how context values are preserved or combined (#13320)","By supplying a custom mergeCtx function, users can control how context values are preserved or combined.","The default behavior is to preserve no context values."],"mdatagen":["Remove the deletion of `generated_component_telemetry_test.go`. (#12067)","This file used to be generated by mdatagen. Starting with 0.122.0, the code deletes that file.","It is no longer necessary to delete the file, as code has had time to upgrade to mdatagen and delete the file."],"memorylimiterextension, memorylimiterprocessor":["Memory limiter extension and processor shutdown don't throw an error if the component was not started first. (#9687)","The components would throw an error if they were shut down before being started.","With this change, they will no longer return an error, conforming to the lifecycle of components expected."],"pdata":["Generate Logs/Traces/Metrics/Profiles and p[log|trace|metric|profile]ExportResponse with pdatagen. (#13597)","This change brings consistency on how these structs are written and remove JSON marshaling/unmarshaling hand written logic.","Avoid unnecessary buffer copy when JSON marshal fails. (#13598)","Improve RemoveIf for slices to not reference anymore the removed memory (#13522)","üêû Fix null pointer access when copying into a slice with larger cap but smaller len. (#13523)","Generate Logs/Traces/Metrics/Profiles and p[log|trace|metric|profile]ExportResponse with pdatagen. (#13597)","This change brings consistency on how these structs are written and remove JSON marshaling/unmarshaling hand written logic.","Avoid unnecessary buffer copy when JSON marshal fails. (#13598)"],"pipeline":["Mark module as stable (#12831)"],"processorhelper":["Add processor internal duration metric. (#13231)"],"service":["move service.noopTraceProvider feature gate to deprecated stage (#13492)","The functionality of the feature gate is available via configuration with the following telemetry settings:","```","service:","telemetry:","traces:","level: none","```","The `telemetry.disableHighCardinalityMetrics` feature gate is deprecated (#13537)","The feature gate is now deprecated since metric views can be configured.","The feature gate will be removed in v0.134.0.","The metric attributes removed by this feature gate are no longer emitted","by the Collector by default, but if needed, you can achieve the same","functionality by configuring the following metric views:","```yaml","service:","telemetry:","metrics:","level: detailed","views:","- selector:","meter_name: \"go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc\"","stream:","attribute_keys:","excluded: [\"net.sock.peer.addr\", \"net.sock.peer.port\", \"net.sock.peer.name\"]","- selector:","meter_name: \"go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp\"","stream:","attribute_keys:","excluded: [\"net.host.name\", \"net.host.port\"]","```","Note that this requires setting `service::telemetry::metrics::level: detailed`.","If you have a strong use case for using views in combination with a different","level, please show your interest in","https://github.com/open-telemetry/opentelemetry-collector/issues/10769."]},"v0.133.0":{"all":["Increase minimum Go version to 1.24 (#13627)"],"batchprocessor":["üêû Fix UB in batch processor when trying to read bytes size after adding request to pipeline (#13698)","üêû This bug only happens id detailed metrics are enabled and also an async (sending queue enabled) exporter that mutates data is configure."],"configgrpc":["Set `tcp` as the default transport type (#13657)","gRPC is generally used with HTTP/2, so this will simplify usage for most components."],"configoptional":["Allow validating nested types (#13579)","`configoptional.Optional` now implements `xconfmap.Validator`","Allow validating nested types (#13579)","`configoptional.Optional` now implements `xconfmap.Validator`"],"configtls":["Enable X25519MLKEM768 as per draft-ietf-tls-ecdhe-mlkem (#13670)"],"debugexporter":["üêû Add support for entity references in debug exporter output (#13324)"],"exporterhelper":["Prevent uncontrolled goroutines in batcher due to a incorrect worker pool behaviour. (#13689)"],"otlphttpexporter":["Add `profiles_endpoint` configuration option to allow custom endpoint for profiles data export (#13504)","The `profiles_endpoint` configuration follows the same pattern as `traces_endpoint`, `metrics_endpoint`, and `logs_endpoint`.","When specified, profiles data will be sent to the custom URL instead of the default `{endpoint}/v1development/profiles`."],"otlpreceiver":["Log the listening addresses of the receiver, rather than the configured endpoints. (#13654)"],"pdata":["Add support for local memory pooling for data objects. (#13678)","This is still an early experimental (alpha) feature. Do not recommended to be used production. To enable use \"--featuregate=+pdata.useProtoPooling\"","Optimize CopyTo messages to avoid any copy when same source and destination (#13680)","üêû Fix unnecessary allocation of a new state when adding new values to pcommon.Map (#13634)","Use the newly added proto marshaler/unmarshaler for the official proto Marshaler/Unmarshaler (#13637)","If any problems observed with this consider to disable the featuregate `--feature-gates=-pdata.useCustomProtoEncoding`","Add support for local memory pooling for data objects. (#13678)","This is still an early experimental (alpha) feature. Do not recommended to be used production. To enable use \"--featuregate=+pdata.useProtoPooling\""],"pdata/pprofile":["Deprecate Profiles.ProfilesDictionary in favor of Profiles.Dictionary. (#13644)"],"receiverhelper":["New feature flag to make receiverhelper distinguish internal vs. downstream errors using new `otelcol_receiver_failed_x` and `otelcol_receiver_requests` metrics (#12207, #12802)","üö®‚ö†Ô∏è This is a breaking change for the semantics of the otelcol_receiver_refused_metric_points,  otelcol_receiver_refused_log_records and otelcol_receiver_refused_spans metrics.","These new metrics and semantics are enabled through the `receiverhelper.newReceiverMetrics` feature gate."],"service":["Implement refcounting for pipeline data owned memory. (#13631)","This feature is protected by `--featuregate=+pdata.useProtoPooling`.","üêû Add a debug-level log message when a consumer returns an error. (#13357)","Ensure the insecure configuration is accounted for when normalizing the endpoint. (#13691)"],"xpdata":["Optimize xpdata/context for persistent queue when only one value for key (#13636)"]}},"otelcol-contrib":{"v0.106.1":{"configauth":["üêû Fix unmarshaling of authentication in HTTP servers. (#34325)","üêû This brings in a bug fix from the core collector. See https://github.com/open-telemetry/opentelemetry-collector/issues/10750."]},"v0.107.0":{"(general)":["Update the scope name for telemetry produce by components. The following table summarizes the changes:"],"awsemfexporter":["üêû AWS EMF Exporter to update ApplicationSignals log group name and namespace, and adjust AWS service name prefix logic in spans (#33798)"],"azureeventhubreceiver":["Added traces support in azureeventhubreceiver (#33583)"],"azuremonitorreceiver":["Add Azure China as a `cloud` option. (#34315)"],"bearertokenauthextension":["üêû use constant time comparison. This fixes CVE-2024-42368 (#34516)"],"clickhouseexporter":["Add `compress` option to ClickHouse exporter, with default value of `lz4` (#34365)","This change adds a new `compress` option to the config field and enables it by default.","Prior to this change, compression was not enabled by default.","The only way to enable compression prior to this change was via the DSN URL.","With this change, `lz4` compression will be enabled by default.","The list of valid options is provided by the underlying `clickhouse-go` driver.","üö®‚ö†Ô∏è While this change is marked as breaking, there should be no effect to existing deployments by enabling compression.","Compression should improve network performance on most deployments that have a remote ClickHouse server.","Updated the default logs table to a more optimized schema (#34203)","Improved partitioning and time range queries.","Use observed timestamp if timestamp is zero (#34150)","Some OpenTelemetry libraries do not send timestamp for logs, but they should always send | the observed timestamp. In these cases the ClickHouse exporter just stored a zero timestamp | to the database. This changes the behavior to look into the observed timestamp if the timestamp | is zero."],"cmd/opampsupervisor":["Start even if the OpAMP server cannot be contacted, and continually retry connecting. (#33408, #33799)","Write the generated effective config and agent log files to the user-defined storage directory. (#34341)"],"configauth":["üêû Fix unmarshaling of authentication in HTTP servers. (#34325)","üêû This brings in a bug fix from the core collector. See https://github.com/open-telemetry/opentelemetry-collector/issues/10750."],"coralogixprocessor":["creating new component for coralogix features (#33090)"],"datadogconnector":["Move feature gate `connector.datadogconnector.NativeIngest` to beta (#34549)","When this feature gate is enabled (default), the datadog connector uses the new API to produce APM stats under the hood. | The new API has better throughput when your spans have many attributes (especially container related attributes). Funtional-wise the new API should have no user-facing change compared to the old API. | However if you observe any unexpected behaviors, you can disable this feature gate to revert to the old stats processing APIs."],"docker_observer":["Change default endpoint for `docker_observer` on Windows to `npipe:////./pipe/docker_engine` (#34358)"],"elasticsearchexporter":["Add opt-in support for the experimental `batcher` config (#32377)","By enabling (or explicitly disabling) the batcher, the Elasticsearch exporter's","existing batching/buffering logic will be disabled, and the batch sender will be used.","Add summary support for metrics (#34560)"],"elasticsearchreceiver":["Enable more index metrics by default (#34396)","This enables the following metrics by default:","`elasticsearch.index.documents`","`elasticsearch.index.operations.merge.current`","`elasticsearch.index.segments.count`","To preserve previous behavior, update your Elasticsearch receiver configuration to disable these metrics.","Add metric for active index merges (#34387)"],"exporter/datadog":["Deprecates `logs::dump_payloads` since it is invalid with the Datadog Agent logs pipeline, which will be enabled by default in the v0.108.0 release. (#34490)"],"exporter/prometheusremotewrite":["Reduce unnecessary memory allocation by removing buffer that was not used by Snappy encoding function. (#34273)","Reduce memory allocations of prometheus remote write exporter \"batchtimeseries\" when large batch sizes are used (#34269)"],"filelogreceiver":["Check for unsupported fractional seconds directive when converting strptime time layout to native format (#34390)"],"googlecloudmonitoringreceiver":["Adding new component - [Google Cloud monitoring](https://cloud.google.com/monitoring/api/metrics_gcp) receiver to fetch GCP Cloud Metrics and transform to OpenTelemetry compatible format. (#33762)","Adding new component - [Google Cloud monitoring](https://cloud.google.com/monitoring/api/metrics_gcp) receiver to fetch GCP Cloud Metrics and transform to OpenTelemetry compatible format. (#33762)"],"hostmetricsreceiver":["add reporting interval to entity event (#34240)"],"internal/grpcutil":["Add internal/grpcutil package with gRPC-specified timeout parsing (#33688)"],"kafkaexporter":["add an ability to partition logs based on resource attributes. (#33229)","add an ability to partition logs based on resource attributes. (#33229)"],"kafkametricsreceiver":["Add option to configure cluster alias name and add new metrics for kafka topic configurations (#34148)"],"logdedup":["Make the name of the log deduplication component consistent (#34571)"],"logdedupeprocessor":["Add new logdedupeprocessor processor that deduplicates log entries. (#34118)"],"logdedupprocessor":["Adds a histogram metric to record the number of aggregated log records. (#34579)","Updates stability level to alpha. (#34575)","Ensures any pending aggregated logs are processed and sent to the next consumer before shutting down. (#34615)","Adds a scope aggregator to the logdedup processor enabling the aggregation of logs per scope. (#34606)","Simplifies the processor shutdown behaviour by removing the unnecessary done channel. (#34478)"],"pkg/ottl":["Add support for map literals in OTTL (#32388)","Introduce ExtractGrokPatterns converter (#32593)","Add the `MD5` function to convert the `value` into a MD5 hash/digest (#33792)","Introduce `sha512` converter to generate SHA-512 hash/digest from given payload. (#34007)"],"pkg/stanza":["Ensure that errors from `Process` and `Write` do not break for loops (#34295)"],"pkg/translator/jaeger":["Change the translation to jaeger spans to match semantic conventions. (#34368)","`otel.library.name` is deprecated and replaced by `otel.scope.name`","`otel.library.version` is deprecated and replaced by `otel.scope.version`"],"pmetrictest":["Add support for histogram comparison options (#34521)"],"postgresqlreceiver":["Support unix socket based replication by handling null values in the client_addr field (#33107)"],"processor/k8sattributes":["Add support for `container.image.repo_digests` metadata (#34029)"],"receiver/splunkhec":["Add a regex to enforce metrics naming for Splunk events fields based on metrics documentation. (#34275)"],"splunkhecexporter":["Copy the bytes to be placed in the request body to avoid corruption on reuse (#34357)","üêû This bug is a manifestation of https://github.com/golang/go/issues/51907.","Under high load, the pool of buffers used to send requests is reused enough","that the same buffer is used concurrently to process data and be sent as request body.","üêû The fix is to copy the payload into a new byte array before sending it."],"syslogexporter":["üêû Fix issue where exporter may hang indefinitely while dialing. (#34393)"],"telemetrygen":["Support boolean values in `--telemetry-attributes` and `--otlp-attributes` flag (#18928)"],"vcenterreceiver":["Enables all of the vSAN metrics by default. (#34409)","The following metrics will be enabled by default now:","- vcenter.cluster.vsan.throughput","- vcenter.cluster.vsan.operations","- vcenter.cluster.vsan.latency.avg","- vcenter.cluster.vsan.congestions","- vcenter.host.vsan.throughput","- vcenter.host.vsan.operations","- vcenter.host.vsan.latency.avg","- vcenter.host.vsan.congestions","- vcenter.host.vsan.cache.hit_rate","- vcenter.vm.vsan.throughput","- vcenter.vm.vsan.operations","- vcenter.vm.vsan.latency.avg"],"webhookeventreceiver":["added a timestamp to the logs generated from incoming events. (#33702)"],"windowseventlogreceiver":["Add remote collection support to Stanza operator windows pkg to support remote log collect for the Windows Event Log receiver. (#33100)"]},"v0.108.0":{"all":["Added support for go1.23, bumped the minimum version to 1.22 (#34658)"],"awsfirehosereceiver":["üêû Fix validation of requests with empty access key (fixes CVE-2024-45043 / GHSA-prf6-xjxh-p698) (#34847)"],"awss3receiver":["üêû Enhance the logging of the AWS S3 Receiver in normal operation to make it easier for user to debug what is happening. (#30750)"],"azuretranslator":["The scope name has been updated from `otelcol/azureresourcelogs` and `otelcol/azureresourcetraces` to `github.com/open-telemetry/opentelemetry-collector-contrib/pkg/translator/azure` (#34712)"],"branch.name":["is now `ref.name`","- Added a `ref.type` attribute"],"cmd/opampsupervisor":["üêû Fix supervisor support for Windows. (#34570)"],"connector/exceptionsconnector":["üêû Fix dimensions configuration did not take effect for resource attributes (#34603)"],"datadogconnector":["Add a config `traces::bucket_interval` (#34554)","`traces::bucket_interval` specifies the time interval size of aggregation buckets that aggregate the Datadog trace metrics. It is also the time interval that Datadog trace metrics payloads are flushed to the pipeline. Default is 10s if unset.","üêû Put back the `otelcol_` prefix for Datadog internal metrics on trace and APM stats exporting (#34807)","üö®‚ö†Ô∏è Recovers these metrics from an upstream breaking change. See https://github.com/open-telemetry/opentelemetry-collector/pull/9759 and https://github.com/open-telemetry/opentelemetry-collector/pull/10940."],"datadogexporter":["üêû Put back the `otelcol_` prefix for Datadog internal metrics on trace and APM stats exporting (#34807)","üö®‚ö†Ô∏è Recovers these metrics from an upstream breaking change. See https://github.com/open-telemetry/opentelemetry-collector/pull/9759 and https://github.com/open-telemetry/opentelemetry-collector/pull/10940."],"datadogreceiver":["The scope name has been updated from `otelcol/datadogreceiver` to `github.com/open-telemetry/opentelemetry-collector-contrib/receiver/datadogreceiver/internal/translator` (#34711)","Implement '/info' endpoint (#34772)","Add sampling.priority attribute for Probabilistic Sampling Processor (#34267)","Implement '/stats' endpoint (#34790)","Include error when logging unmarshaling failures in Datadog receiver. (#34515)","add feature discovery (#34718)"],"deltatocumulative":["Promote to `alpha` stability (#34747)","promotes the deltatocumulative processor to alpha stability, as most features are now implemented and ready for wider testing.","explicit-bounds histograms (#30705)","implements aggregation of explicit-bounds (traditional) histograms."],"elasticsearchexporter":["Update OTel mapping mode for logs and metrics; Remove trace_flags (#34472)","üö®‚ö†Ô∏è Update logs and metrics OTel mapping mode to always emit \"scope\" and zero int, but not emit empty strings for known fields. Breaking change to remove trace_flags from logs.","Change default retry.retry_on_status to [429] (#32584)","To retain the previous behavior, set retry.retry_on_status to `[429, 500, 502, 503, 504]`.","Add OTel mapping mode for metrics (#34248)","Add OTel mapping mode for traces (#34588, #34590)","Add OTel mapping mode support for traces, without span events."],"exporter/datadog":["The `logs::dump_payloads` config option is invalid when the Datadog Agent logs pipeline is enabled (now enabled by default). (#34420)","An error will be raised if `logs::dump_payloads` is set while the Datadog Agent logs pipeline is enabled. To avoid this error, remove the `logs::dump_payloads` config option or temporarily disable the `exporter.datadogexporter.UseLogsAgentExporter` feature gate.","Use Datadog Agent logs pipeline by default for exporting logs to Datadog. Upgrades `exporter.datadogexporter.UseLogsAgentExporter` feature flag to beta. (#34420)"],"exporter/doris":["Add a new component for exporting logs, traces and metrics to Doris (#33479)"],"filelogreceiver":["If acquire_fs_lock is true, attempt to acquire a shared lock before reading a file. (#34801)","Unix only. If a lock cannot be acquired then the file will be ignored until the next poll cycle."],"geoipprocessor":["Add a context configuration option to specify the IP address attribute telemetry location. (#34036)","Move processor's stability to alpha. (#34737)"],"git.repository.branch.commit.aheadby.count":["is now `vcs.repository.ref.revisions_ahead`"],"git.repository.branch.commit.behindby.count":["is now `vcs.repository.ref.revisions_behind"],"git.repository.branch.count":["is now `vcs.repository.ref.count`"],"git.repository.branch.line.addition.count":["is now `vcs.repository.ref.lines_added`"],"git.repository.branch.line.deletion.count":["is now `vcs.repository.ref.lines_deleted`"],"git.repository.branch.time":["is now `vcs.repository.ref.time"],"git.repository.contributor.count":["is now `vcs.repository.contributor.count`"],"git.repository.count":["is now `vcs.repository.count`"],"git.repository.pull_request.count":["is now `vcs.change.count`"],"git.repository.pull_request.time_open":["is now `vcs.change.time_open`"],"git.repository.pull_request.time_to_approval":["is now `vcs.change.time_to_approval`"],"git.repository.pull_request.time_to_merge":["is now `vcs.change.time_to_merge`"],"git.vendor.name":["is now `vcs.vendor.name`","Metric Changes:"],"gitproviderreceiver":["Update metric names and attributes to match the newest Semantic Conventions for VCS. (#34278)","Attribute Changes:"],"googlecloudmonitorreceiver":["The scope name has been updated from `otelcol/googlecloudmonitoringreceiver` to `github.com/open-telemetry/opentelemetry-collector-contrib/receiver/googlecloudmonitoringreceiver` (#34709)"],"k8sclusterreceiver":["üêû Lower the log level of a message indicating a cache miss from WARN to DEBUG. (#34817)"],"lokiexporter":["Update the scope name for telemetry produced by the lokiexporter from `otelcol/loki` to `github.com/open-telemetry/opentelemetry-collector-contrib/exporter/lokiexporter` (#34612)"],"metricstransformprocessor":["Add scaling exponential histogram support (#29803)"],"pkg/ottl":["Introduce `UserAgent` converter to parse UserAgent strings (#32434)"],"pkg/stanza":["üêû fix nil value conversion (#34672)"],"pkg/stanza/operator/input/windows":["Change type name from `EvtRpcLogin` to `EvtRPCLogin`. (#34656)"],"prometheusreceiver":["Ensure Target Allocator's confighttp is used in the receiver's service discovery (#33370)","Group scraped metrics into resources created from `job` and `instance` label pairs (#34237)","The receiver will now create a resource for each distinct job/instance label combination.","In addition to the label/instance pairs detected from the scraped metrics, a resource representing the overall","scrape configuration will be created. This additional resource will contain the scrape metrics, such as the number of scraped metrics, the scrape duration, etc."],"pull_request.state":["is now `change.state`"],"solacereceiver":["Updated the format for generated metrics. Included a `receiver_name` attribute that identifies the Solace receiver that generated the metrics (#34541)"],"splunkhecexporter":["The scope name has been updated from `otelcol/splunkhec` to `github.com/open-telemetry/opentelemetry-collector-contrib/exporter/splunkhecexporter` (#34710)"],"tailsamplingprocessor":["Update the `policy` value in metrics dimension value to be unique across multiple tail sampling components with the same policy name. (#34192)","This change ensures that the `policy` value in the metrics exported by the tail sampling processor is unique across multiple tail sampling processors with the same policy name.","üêû Fix the behavior for numeric tag filters with `inverse_match` set to `true`. (#34296)"],"transformprocessor":["Promote processor.transform.ConvertBetweenSumAndGaugeMetricContext feature flag from alpha to beta (#34567)"],"vcenterreceiver":["Several host performance metrics now return 1 data point per time series instead of 5. (#34708)","The 5 data points previously sent represented consecutive 20s sampling periods. Depending on the collection interval","these could easily overlap. Sending just the latest of these data points is more in line with other performance metrics.","üêû This change also fixes an issue with the googlecloud exporter seeing these datapoints as duplicates.","Following is the list of affected metrics which will now only report a single datapoint per set of unique attribute values.","- vcenter.host.cpu.reserved","- vcenter.host.disk.latency.avg","- vcenter.host.disk.latency.max","- vcenter.host.disk.throughput","- vcenter.host.network.packet.drop.rate","- vcenter.host.network.packet.error.rate","- vcenter.host.network.packet.rate","- vcenter.host.network.throughput","- vcenter.host.network.usage"]},"v0.109.0":{"apachereceiver":["üêû Fix panic on invalid endpoint configuration (#34992)"],"clickhouseexporter":["Upgrade trace SpanKind and StatusCode string values (#34799)","This change updates the output of the trace SpanKind and StatusCode fields to be consistent","with the specification's enum values. While this change will not break any deployments, it may affect","queries dependent on the old enum names.","For more details on old-\u003enew values, see this related PR:","https://github.com/open-telemetry/opentelemetry-collector/pull/6250"],"datadogconnector":["Optimize Datadog connector when there are many peer tags and `connector.datadogconnector.NativeIngest` is enabled (#34945)","`connector.datadogconnector.NativeIngest` is currently enabled by default"],"datadogexporter":["Add support for setting a custom log source from resource attribute `datadog.log.source` (#35051)","Use correct hostname for logs when using Datadog Agent logs pipeline with a gateway deployment. (#35058)"],"datadogreceiver":["add support for sketch metrics in Datadog receiver (#18278)"],"deltatocumulative":["drop bad samples (#34979)","removes bad (rejected) samples from output. previously identified and metric-tracked those as such, but didn't actually drop them."],"elasticsearchexporter":["Add exponential histogram support (#34813)","Add span event support to traces OTel mapping mode (#34831)","Span events are now supported in OTel mapping mode. They will be routed to `logs-${data_stream.dataset}-${data_stream.namespace}` if `traces_dynamic_index::enabled` is `true`.","üêû Fix dynamic mapping for double values storing integers (#34680)","Stringify attribute array values in metrics OTel mode (#35004)","Elasticsearch TSDB does not support array dimensions. Workaround it by stringifying attribute array values in OTel mapping mode for metrics."],"exceptionsconnector,servicegraphconnector,spanmetricsconnector":["Extract the `getDimensionValue` function as a common function. (#34627)"],"exporter/prometheusexporter":["Support for Prometheus Created Timestamps. (#32521)"],"fileconsumer":["üêû Fix bug where max_concurrent_files could not be set to 1. (#35080)"],"filestorage":["Add directory validation for compaction on-rebound (#35114)"],"geoipprocessor":["Avoid using internal empty attribute.Set pointer (#34882)"],"githubreceiver":["Promote GitHub receiver metrics to alpha status. (#34960)"],"gitproviderreceiver":["The Git Provider Receiver has been renamed to GitHub Receiver. (#34731)","This rename was to better match the OpenTelemetry semantic convention changes in v1.27.0","and allows for Traces and Log signals to be added to this component. Traces","as mentioned in issue #27460 will be added in a future release to this component."],"googlecloudmonitoringreceiver":["Enhancing the Google Cloud monitoring receiver to establish a client connection, scrape GCP Cloud Metrics, and transform them into an OpenTelemetry compatible format for pipeline processing. (#33762)","- Implements client connection to Google Cloud Monitoring API.","- Scrapes timeseries data based on configured metrics.","- Converts the data into OpenTelemetry format for use in the pipeline.","Enhancing the Google Cloud monitoring receiver to establish a client connection, scrape GCP Cloud Metrics, and transform them into an OpenTelemetry compatible format for pipeline processing. (#33762)","- Implements client connection to Google Cloud Monitoring API.","- Scrapes timeseries data based on configured metrics.","- Converts the data into OpenTelemetry format for use in the pipeline."],"hostmetricsreceiver":["üêû In filesystem scraper, do not prefix partitions when using the environment variable HOST_PROC_MOUNTINFO (#35043)"],"instanaexporter":["Marking instanaexporter module as deprecated (#34994)"],"kafkareceiver":["Adds tunable fetch sizes to Kafka Receiver (#22741, #34431)","Adds the ability to tune the minumum, default and maximum fetch sizes for the Kafka Receiver","Add support for encoding extensions in the Kafka receiver. (#33888)","This change adds support for encoding extensions in the Kafka receiver. Loading extensions takes precedence over the internally supported encodings."],"mysqlreceiver":["mysql client raise error when the TABLE_ROWS column is NULL, convert NULL to int64 (#34195)"],"opampextension":["Adds the ability to configure the polling interval for the HTTP client. (#34749)"],"opampsupervisor":["Add new config parameter `agent.health_check_port` to allow configuring the port used by the agent healthcheck extension. (#34643)"],"otelarrowexporter":["Add gRPC timeout propagation. (#34733)"],"otlpjsonconnector":["Handle OTLPJSON unmarshal error (#34782)"],"ottl":["Remove tracing from OTTL due to performance concerns (#34910)"],"pkg/ottl":["Added Decode() converter function (#32493)","Add `Sort` function to sort array to ascending order or descending order (#34200)","Change the OTTL grammar to support expressing statements context via path names (#29017)","The `ottl.Path` interface requires a new method: `Context() string`","Add support for localized time parsing into the coreinternal/timeutils (#32977)"],"pkg/stanza":["Synchronize shutdown in stanza adapter (#31074)","Stanza-based receivers should now flush all data before shutting down","An operator configured with silent errors shouldn't log errors while processing log entries. (#35008)"],"processor/interval":["Support for gauge and summary metrics. (#34803)","Only the last value of a gauge or summary metric is reported in the interval processor, instead of all values."],"prometheusreceiver":["Move the TargetAllocator configuration struct to an internal directory (#33146)"],"redactionprocessor":["Add support for logs and metrics (#34479)"],"servicegraphconnector":["üêû Fix histogram metrics miss unit (#34511)","üêû üö®‚ö†Ô∏è All metrics will remove the suffix `_seconds`. It will not introduce breaking change if users use | `prometheusexporter` or `prometheusremotewriteexporter` to exporter metrics in pipeline. | In some cases, like using `clickhouseexporter`(save data in native OTLP format), it will be a breaking change. | Users can use `transformprocessor` to add back this suffix.","üêû Fix incorrectly reversed latency settings for the server and client (#34933)"],"signalfxexporter":["üêû Fix memory leak by re-organizing the exporter's functionality lifecycle (#32781)"],"solarwindsapmsettingsextension":["Added logic for refresh function (#27668)"],"spanmetricsconnector":["Improve consistency between metrics generated by spanmetricsconnector. Added traces.span.metrics as default namespace (#33227, #32818)","Default namespace for the generated metrics is traces.span.metrics now. | The deprecated metrics are: calls, duration and events. | The feature flag connector.spanmetrics.legacyMetricNames was added to revert the behavior."],"splunkhecexporter":["Drop empty log events (#34871)","Log records with no body are dropped by Splunk on reception","as they contain no log message, albeit they may have attributes.","This PR removes those logs from consideration to be exported.","This is in tune with the behavior of splunkhecreceiver, which refuses HEC events with no event (#19769)"],"splunkhecreceiver":["üêû Fix memory leak when the receiver is used for both metrics and logs at the same time (#34886)"],"sqlqueryreceiver":["Support populating log attributes from sql query (#24459)"],"sqlserverreceiver":["üêû Fix bug where metrics were being emitted with the wrong database name resource attribute (#35036)"],"testbed":["Add test case scenarios to handle large files to existing testbed. (#34288)"],"transformprocessor":["Support aggregating metrics based on their attribute values and substituting the values with a new value. (#16224)"],"vcenterreceiver":["Updated units on several metrics to be more in line with documented semantics. (#34946)","The following are the metrics with their respective unit changes:","- vcenter.datacenter.cpu.limit ({MHz} -\u003e MHz)","- vcenter.cluster.cpu.limit ({MHz} -\u003e MHz)","- vcenter.cluster.cpu.effective ({MHz} -\u003e MHz)","- vcenter.cluster.vsan.operations ({operations/sec} -\u003e {operations/s})","- vcenter.cluster.vsan.congestions ({congestions/sec} -\u003e {congestions/s})","- vcenter.host.network.packet.error.rate ({errors/sec} -\u003e {errors/s})","- vcenter.host.network.packet.rate ({packets/sec} -\u003e {packets/s})","- vcenter.host.network.packet.drop.rate ({packets/sec} -\u003e {packets/s})","- vcenter.host.vsan.operations ({operations/sec} -\u003e {operations/s})","- vcenter.host.vsan.congestions ({congestions/sec} -\u003e {congestions/s})","- vcenter.resource_pool.cpu.usage ({MHz} -\u003e MHz)","- vcenter.vm.network.throughput (By/sec -\u003e By/s)","- vcenter.vm.network.packet.rate ({packets/sec} -\u003e {packets/s})","- vcenter.vm.vsan.operations ({operations/sec} -\u003e {operations/s})"],"windowseventlogreceiver":["Avoid rendering the whole event to obtain the provider name (#34755)"]},"v0.110.0":{"all":["TimeoutSettings/QueueSettings fields in various Config structs are no longer embedded (#35158)","Structs in which .TimeoutSettings is no longer embedded:","* carbonexporter.Config","* googlecloudpubsubreceiver.Config","Structs in which .TimeoutSettings and .QueueSettings are no longer embedded:","* alertmanagerexporter.Config","* googlecloudexporter.Config","* googlemanagedprometheusexporter.Config","* otelarrowexporter.Config"],"azurelogs_translater":["Adds a new translater that converts Azure EventHub logs to OpenTelemetry logs used by the Azure Events Hub receiver. (#39704)"],"azuremonitorexporter":["üêû fix issue for property endpoint is ignored when using instrumentation_key (#33971)"],"cmd/opampsupervisor":["Ensure the Supervisor processes all fields in a ServerToAgent message. (#34349)"],"datadogconnector":["Map the new OTel semantic convention `deployment.environment.name` to `env` for OTLP traces in APM stats. (#35147)","The old convention `deployment.environment` still works"],"datadogexporter":["Map the new OTel semantic convention `deployment.environment.name` to `env` for OTLP traces, metrics and logs. (#35147)","The old convention `deployment.environment` still works","Adds exporter.datadogexporter.metricremappingdisabled featuregate which disables renaming OpenTelemetry metrics to match Datadog semantics. This feature gate is only for internal use. (#35025)","Upgrade logs in Datadog Exporter to beta (#35359)","The datadog exporter config has been deprecated in favor of the new `datadog/config` package. The new package is shared between the Datadog exporter and the Datadog Connector.","(#35067)","The new `datadog/config` package is a shared module for Datadog exporter configuration. The module is shared between the Datadog exporter and the Datadog Connector."],"datadogreceiver":["üêû Fix numeric span attributes (#35087)"],"deltatocumulative":["do not drop gauges and summaries (#35284)","Gauges and Summaries are no longer dropped from processor output.","Instead, they are passed through as-is"],"deltatorateprocessor":["Remove unnecessary data copies. (#35165)"],"dorisexporter":["logs implementation (#33479)","traces implementation (#33479)"],"exporter/splunkhec":["üêû Fix incorrect claim that the exporter doesn't mutate data when batching is enabled. (#35306)","üêû The bug lead to runtime panics when the exporter was used with the batcher enabled in a fanout scenario."],"file_storage":["provide a new option to the user to create a directory on start (#34939)"],"groupbytraceprocessor":["Ensure processor_groupbytrace_incomplete_releases metric has a unit. (#35221)"],"headersetterextension":["adding default_value config (#34412)","default_value config item applied in case context value is empty"],"hostmetricsreceiver":["Set the receiver.hostmetrics.normalizeProcessCPUUtilization feature gate to stable. (#34763)"],"kafkaexporter":["Add support for encoding extensions in the Kafka exporter. (#34384)","This change adds support for encoding extensions in the Kafka exporter. Loading extensions takes precedence over the internally supported encodings.","Add option to supply destination topic through context. (#34503, #34432)"],"kafkareceiver":["Add support for `otlp_json` encoding to Kafka receiver. The payload is deserialized into OpenTelemetry traces using JSON format. (#33627)","This encoding allows the Kafka receiver to handle trace data in JSON format,","enabling integration with systems that export traces as JSON-encoded data."],"otelarrowexporter":["Allow separate arrow exporter per unique value of configured metadataKeys. (#34178)","Add BatcherConfig field following similar in OTLP exporter. (#34802)"],"otelarrowreceiver":["Add gRPC timeout propagation. (#34742)"],"pkg/datadog":["Create a new module for Datadog exporter configuration.","(#35067)","This change introduces a new module for Datadog exporter configuration. The module is shared between the Datadog exporter and the Datadog Connector."],"pkg/ottl":["Improved JSON unmarshaling performance by 10-20% by switching dependencies. (#35130)","Added support for locale in the Time converter (#32978)"],"pkg/stanza":["Move `filelog.container.removeOriginalTimeField` feature gate to beta (#33389)","- Disable the `filelog.container.removeOriginalTimeField` feature gate to get the old behavior.","Do not get formatted message for Windows events without an event provider. (#35135)","Attempting to get the formatted message for Windows events without an event provider can result in an error being logged. |","This change ensures that the formatted message is not retrieved for such events."],"processor/transform":["Add custom function to the transform processor to convert exponential histograms to explicit histograms. (#33827)"],"prometheusreceiver":["üêû Fix the retrieval of scrape configurations by also considering scrape config files (#34786)"],"redactionprocessor":["üêû Fix panic when using the redaction processor in a logs pipeline (#35331)"],"remotetapprocessor":["Origin header is no longer required for websocket connections (#34925)"],"resourcedetectionprocessor":["Move `processor.resourcedetection.hostCPUSteppingAsString` feature gate to stable. (#31136)","Remove `processor.resourcedetection.hostCPUModelAndFamilyAsString` feature gate. (#29025)"],"sapmexporter":["Prioritize token in context when accesstokenpassthrough is enabled (#35123)"],"signalfxexporter":["Ensure token is not sent through for event data (#35154)"],"splunkenterprise":["üêû Fix a flaky search related to iops metrics. (#35081)"],"tailsamplingprocessor":["üêû Fix the behavior for numeric tag filters with `inverse_match` set to `true`. (#34296)"],"transformprocessor":["Remove unnecessary data copy when transform sum to/from gauge (#35177)"]},"v0.111.0":{"clickhouseexporter":["Upgrading stability for traces to beta (#35186)","The trace exporter has proven to be stable for production deployments.","Trace configuration is unlikely to receive any significant changes.","Updated the default trace table (#34245)","Reduced data types, improved partitioning and time range queries"],"config":["Move component.UseLocalHostAsDefaultHost feature gate to stable. (#35569)"],"datadogreceiver":["Move receiver's metrics stability to alpha. (#18278)","Add container id from v0.5 request header (#35345)"],"elasticsearchexporter":["Drop cumulative temporality histogram and exponential histogram (#35442)","Cumulative temporality histogram and exponential histogram are not supported by Elasticsearch. Use cumulativetodeltaprocessor to convert cumulative temporality to delta temporality.","Implement receiver-based routing under *_dynamic_index config (#34246)","Implement elasticsearch.mapping.hints attribute handling for data points in OTel mapping mode (#35479)","elasticsearch.mapping.hints takes a slice of strings. `_doc_count` enables emitting `_doc_count` for the document. `aggregate_metric_double` causes histogram or exponential histogram to be emitted as aggregate_metric_double.","Revert TSDB array dimension workaround for metrics OTel mode (#35291)","Remove the workaround to stringify array dimensions as the limitation has been lifted in Elasticsearch v8.16.0."],"geoipprocessor":["No longer return an error when geo metadata is not found by a provider. (#35047)"],"googlecloudmonitoringreceiver":["Move receiver's stability to alpha. (#33762)"],"hostmetricsreceiver":["Add ability to mute all errors (mainly due to access rights) coming from process scraper of the hostmetricsreceiver (#20435)"],"instanaexporter":["Remove deprecated instanaexporter (#35367)","Use the `otlp` exporter instead as explained in IBM's [documentation](https://www.ibm.com/docs/en/instana-observability/current?topic=opentelemetry-sending-data-instana-backend)."],"kubeletstats":["Introduce feature gate for deprecation of container.cpu.utilization, k8s.pod.cpu.utilization and k8s.node.cpu.utilization metrics (#35139)"],"metricsgenerationprocessor":["Generate metrics even when the second metric's value is 0 (#35533)","Allow metric calculations to be done on sum metrics (#35428)"],"opampsupervisor":["Add configurable logging for the supervisor. (#35466)","Skip executing the collector if no config is provided (#33680)","Make supervisor runnable as a Windows Service. (#34774)","Add config option for setting the timeout for the initial bootstrap information retrieval from the agent (#34996)","Only use TLS config when connecting to OpAMP server if using `wss` or `https` protocols. (#35283)","Pass config structure instead of file path when using NewSupervisor function (#34379)"],"otelarrowreceiver":["Add admission control in the otelarrow receiver's standard otlp data path.","(#35021)"],"pkg/ottl":["Add InsertXML Converter (#35436)","Add GetXML Converter (#35462)","Add ToKeyValueString Converter (#35334)","Add RemoveXML Converter (#35301)"],"receiver/prometheusremotewrite":["Add a new receiver for Prometheus Remote Write.","(#33782)"],"receiver/statsd":["Add support for aggregating on Host/IP.","(#23809)"],"receivercreator":["Validate endpoint's configuration before starting receivers (#33145)"],"sapmreceiver":["`access_token_passthrough` is deprecated (#35330)","- \"`access_token_passthrough` is deprecated.\"","- \"Please enable include_metadata in the receiver and add the following config to the batch processor:\"","```yaml","batch:","metadata_keys: [X-Sf-Token]","```"],"signalfxexporter":["Do not exclude the metric `container.memory.working_set` (#35475)"],"sqlqueryreceiver":["Fail if value for log column in result set is missing, collect errors (#35068)","üêû Fix reprocessing of logs when tracking_column type is timestamp (#35194)"],"sqlserverreceiver":["Add computer name resource attribute to relevant metrics (#35040)"],"sumconnector":["adds connector and summing logic along with tests (#32669)"],"webhookeventreceiver":["üêû Fixed a bug where request bodies containing newline characters caused the results to split into multiple log entries (#35028)"],"windowseventlogreceiver":["The 'raw' flag no longer suppresses rendering info. (#34720)","Previously, this flag controlled two behaviors simultaneously:","1. Whether or not the body of the log record was an XML string or structured object.","2. Whether or not rendering info was resolved.","A separate 'suppress_rendering_info' option now controls rendering info resolution.","üö®‚ö†Ô∏è This is considered a breaking change because users setting only the 'raw' flag without also setting the","new 'suppress_rendering_info' flag may see a performance decrease along with more detailed events.","Add 'suppress_rendering_info' option. (#34720)","When this flag is enabled, the receiver will not attempt to resolve rendering info. This can improve performance","but comes at a cost of losing some details in the event log.","Move artificial \"remote_server\" field to 'attributes[\"server.address\"]'. (#34720)","While collecting from a remote windows host, the stanza operator will no longer log \"subscription handle is already open\" constantly during successful collection. (#35520)","If collecting from a remote host, the receiver will stop collecting if the host restarts. This change resubscribes when the host restarts. (#35175)"]},"v0.112.0":{"awsfirehosereceiver":["Add support for CloudWatch logs (#35077)","added OTLP v1 support to Firehose receiver (#34982)"],"awss3receiver":["Add support for monitoring the progress of ingesting data from an S3 bucket via OpAMP custom messages. (#30750)"],"azureblobreceiver":["adds support for using azidentity default auth, enabling the use of Azure Managed Identities, e.g. Workload Identities on AKS (#35636)","This change allows to use authentication type \"default\", which makes the receiver use azidentity default Credentials,","which automatically picks up, identities assigned to e.g. a container or a VirtualMachine"],"azuredataexplorerexporter":["üêû Fix compression type for Azure Data Explorer exporter by adding the compression type in ingestion properties. (#35353)"],"azureeventshubreceiver":["Updates the Azure Event Hub receiver to use the new Resource Logs translator. (#35357)"],"chronyreceiver":["Move chronyreceiver to beta (#35913)"],"cloudflarereceiver":["Respond 503 on non-permanent and 400 on permanent errors (#35642)"],"confmap/aesprovider":["Initial aes encryption provider. Allows configurations to decrypt secrets using AES encryption. (#35550)"],"datadogreceiver":["Use `Check` name from Service Check structure as metric name rather than hardcoded string `service_check` (#35718)","Changes response message for `/api/v1/series` and `/api/v2/series` 202 response to be JSON and on par with Datadog API spec (#35743)"],"deltatocumulative":["üêû fix meter panic on startup (#35685)","properly constructs the TelemetryBuilder, so it does not panic on startup, rendering the entire component unusable"],"elasticsearchexporter":["Enable gzip compression by default (#35865)","To disable compression, set config `compression` to `none`.","Set body.* for log body in OTel mode (#35771)","Log record body in OTel mapping mode will be stored in body.text, body.structured, body.flattened based on body value type and presence of event.name attribute","Deprecate retry::max_requests in favor of retry::max_retries (#32344)","retry::max_retries will be exactly retry::max_requests - 1","Add hint in error logs for TSDB version_conflict_engine_exception error (#35546)","Introduce an experimental bodymap mapping mode for logs (#35444)","Log and drop invalid metrics instead of returning error to avoid upstream retries (#35740)","üêû Preserve attribute names and metric names on prefix conflict in OTel mapping mode (#35651)","e.g. if there are attributes \"a\" and \"a.b\", they should be sent to Elasticsearch as is, instead of \"a.value\" and \"a.b\", in OTel mapping mode","Make OTel mapping mode send to data streams only (#35839)","This prevents auto creating regular indices in OTel mapping mode due to a race condition in Elasticsearch where otel-data index templates are not ready.","Sanitize datastream routing fields (#34285)","Sanitize the dataset and namespace fields according to https://www.elastic.co/guide/en/ecs/current/ecs-data_stream.html."],"exporter/clickhouse":["Add the ability to override default table names for all metric types. (#34225)","'metrics_table_name' of the clickhouse exporter config is deprecated and newly introduced parameter 'metrics_tables' should be used instead."],"filelogreceiver":["Supports `add_metadata_from_filepath` for Windows filepaths (#35558)","Suppress errors on EBADF when unlocking files. (#35706)","This error is harmless and happens regularly when delete_after_read is set. This is because we acquire the lock right at the start of the ReadToEnd function and then defer the unlock, but that function also performs the delete. So, by the time it returns and the defer runs the file descriptor is no longer valid."],"googlecloudexporter":["Google Cloud exporter is marked as mutating. (#35366)"],"googlemanagedprometheusexporter":["GMP exporter is marked as mutating. (#35366)"],"hostmetrics receiver":["üêû Fix duplicate filesystem metrics (#34635, #34512)","The hostmetrics exposes duplicate metrics of identical mounts exposed in namespaces. The duplication causes errors in exporters that are sensitive to duplicate metrics. We can safely drop the duplicates as the metrics should be exactly the same."],"hostmetricsreceiver":["Use HOST_PROC_MOUNTINFO as part of configuration instead of environment variable (#35504)"],"k8sobserver":["Emit endpoint per Pod's container (#35491)"],"kafkareceiver":["üêû Fixes issue causing kafkareceiver to block during Shutdown(). (#30789)"],"logdedupprocessor":["Add a `condition` field to the Log DeDuplication Processor. (#35440)"],"metricsgenerationprocessor":["Introduce functionality to only do metric calculations on data points whose attributes match (#35425)","This functionality can be enabled by the `metricsgeneration.MatchAttributes` feature gate, which is disabled by default."],"metricstransform":["The previously removed functionality of aggregating against an empty label set is restored. (#34430)"],"mongodbreceiver":["Add support for MongoDB direct connection (#35427)"],"mysqlreceiver":["Add replica metric support for versions of MySQL earlier than 8.0.22. (#35217)"],"ntpreceiver":["Introduce new receiver reporting the offset between the local machine and a NTP server. (#34375)"],"oidcauthextension":["üêû Fix a goroutine leak during shutdown. (#30438)","A goroutine leak was found in oidcauthextension. The goroutine leak was caused by the oidcauthextension not closing the idle connections in the client and transport."],"opampextension":["Support using auth extensions for authenticating with opamp servers (#35507)","Implement `ReportsHealth` capability in OpAMP extension (#35433)","Report OS description semantic convention (`os.description`) as a part of non-identifying agent description. (#35555)"],"opampsupervisor":["Allow collector logs to passthrough to supervisor output to facilitate running in a containerized environment. (#35473)"],"otelarrowexporter":["Adjust defaults from https://opentelemetry.io/blog/2024/otel-arrow-production/ experiments. (#35477)"],"pkg/ottl":["Add ConvertAttributesToElementsXML Converter (#35328)","Parsing invalid statements and conditions now prints all errors instead of just the first one found. (#35728)","Add ParseSimplifiedXML Converter (#35421)","Add ConvertTextToElements Converter (#35364)","Allow indexing string slice type (#29441)"],"pkg/status":["Refactors the extension/healthcheckv2extension/internal/status into pkg/status (#34692)"],"pkg/translator/jaeger":["Remove error from method signature as it always returns nil (#35560)"],"pkg/translator/prometheusremotewrite":["üêû Fix metric comparison func in prom translation layer (#35741)","add FromMetricsV2 (#33661)","The public function is partially implemented and not ready for use"],"processor/metricsgeneration":["üêû Remove \"experimental_\" prefix from metrics generator processor name. (#35426)"],"rabbitmqexporter":["Allow to configure the name of the AMQP connection in the rabbitmqexporter (#34681)"],"receiver/prometheusremotewrite":["Add HTTP Server to handler Prometheus Remote Write requests (#35535)","Warning - The HTTP Server still doesn't do anything. It's just a placeholder for now.","Add HTTP Server to handler Prometheus Remote Write requests (#35535)","Warning - The HTTP Server still doesn't do anything. It's just a placeholder for now."],"receiver/windowseventlog":["Errors returned when passing data downstream will now be propagated correctly. (#35461)"],"routingconnector":["Allow routing based on OTTL Conditions (#35731)","Each route must contain either a statement or a condition."],"sapmreceiver":["Deprecate SAPM receiver (#32125)","Respond 503 on non-permanent and 400 on permanent errors (#35300)"],"stanza/input/windows":["Close remote session while resubscribing (#35577)"],"systemdreceiver":["Introduce the scaffolding of a new component, systemdreceiver (#33532)"],"telemetrygen":["ensure validate is called (#35745)","Enable the `--otlp-insecure-skip-verify` flag (#35735)"],"tlscheckreceiver":["Add TLS Check Receiver component to monitor x.509 certificate expiry (#35423)"]},"v0.113.0":{"awsfirehosereceiver":["make otlp_v1 a valid record type (#35750, #36125)"],"awss3receiver":["Mark the AWS S3 receiver as Alpha. (#30750)"],"azuredataexplorerexporter":["Add new configuration option `use_default_auth` to enable default authentication for Azure Data Explorer. This option allows users to leverage workload identity for authentication. (#33667)"],"connector/routing":["Add ability to route log records individually using OTTL log record context. (#19738)","üêû Fix detection of duplicate conditions in routing table. (#35962)"],"datadogreceiver":["Follow receiver contract based on type of error (#5909)","Return a json reponse instead of \"OK\" when a trace is received with a newer protocol version. (#35705)","Changes response message for `/api/v1/check_run` 202 response to be JSON and on par with Datadog API spec (#36027)"],"dbstorage":["Add postgresql support (#35692)"],"dorisexporter":["metrics implementation (#33479)"],"exporter/signalfx":["Enabling retrying for dimension properties update without tags in case of 400 response error. (#36044)","Property and tag updates are done using the same API call. After this change, the exporter will retry once to sync","properties in case of 400 response error."],"extensions/observer/cfgardenobserver":["Implemented the observer, the second PR in the 3 PR process for new components (#33618)"],"hostmetrics":["Adjust scraper creation to make it so the scraper name is reported with hostmetrics scraper errors. (#35814)"],"hostmetricsreceiver":["Add the system.uptime metric in the hostmetrics receiver (#31627)","This metric is provided by the new `system` scraper.","Do not set the default value of HOST_PROC_MOUNTINFO to respect root_path (#35990)"],"journaldreceiver":["adds ability to parse journald's MESSAGE field as a string if desired (#36005)","allows querying a journald namespace (#36031)","Restart journalctl if it exits unexpectedly (#35635)"],"k8sobserver":["Enable observation of ingress objects if the `ObserveIngresses` config option is set to true (#35324)"],"ntpreceiver":["Move NTP receiver to alpha (#36152)"],"opampsupervisor":["Makes the Supervisor's OpAmp server port configurable with 'agent::opamp_server_port'. (#36001)","Supervisor waits for configurable healthchecks to report remote config status. (#21079)"],"opensearchexporter":["The OpenSearch exporter is now marked as unmaintained and will be removed in 6 months. (#35781)","Any codeowners can reinstate the component by submitting a PR to revert the change or commenting on https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/35781."],"otelarrowreceiver":["Enable unlimited admission control when request_limit_mib is set to 0. (#36074)","Simplify receiver admission control logic (#36074)","üö®‚ö†Ô∏è Avoid breaking telemetry when admission control fails in OTLP handlers. (#36074)"],"otlpjsonfilereceiver":["Add support for profiles signal (#35977)"],"pkg/ottl":["Promote `processor.transform.ConvertBetweenSumAndGaugeMetricContext` feature gate to Stable (#36216)","This gate can no longer be disabled. The `convert_sum_to_gauge` and `convert_gauge_to_sum` may now only be used with the `metric` context.","Add SliceToMap function (#35256)"],"pkg/stanza":["üêû Fixed bug causing Operators with DropOnErrorQuiet to send log entries to the next operator. (#35010)","üêû This issue was introduced by a bug fix meant to ensure Silent Operators are not logging errors (#35010). With this fix,","üêû this side effect bug has been resolved.","Handle error of callback function of `ParserOperator.ProcessWithCallback` (#35769)","`ProcessWithCallback` of `ParserOperator` first calls the `ParseWith` method","which properly handles errors with `HandleEntryError`.","Then the callback function is called and its returned error should also","be handled by the `HandleEntryError` ensuring a consistent experience."],"pkg/stanza/operator":["Retain Operator should propagate the severity field (#35832)","The retain operator should propagate the severity field like it does with timestamps."],"pkg/translator/prometheusremotewrite":["`FromMetricsV2` now transforms attributes into labels. (#33661)"],"prometheusexporter":["üêû Fixes an issue where the prometheus exporter would not shut down the server when the collector was stopped. (#35464)"],"receiver/filelog":["üêû fix record counting with header (#35869)"],"receiver/prometheusremotewrite":["Implement body unmarshaling for Prometheus Remote Write requests (#35624)","Warning - The HTTP Server still doesn't do anything. It's just a placeholder for now.","Implement Content-Type negotiation for Prometheus Remote Write requests (#35565)","Warning - The HTTP Server still doesn't do anything. It's just a placeholder for now.","Implement body unmarshaling for Prometheus Remote Write requests (#35624)","Warning - The HTTP Server still doesn't do anything. It's just a placeholder for now."],"receiver/windowseventlog":["üêû Fix panic when rendering long event messages. (#36179)"],"routingconnector":["Add ability to route by request metadata. (#19738)"],"sapmreceiver":["Remove the deprecated access_token_passthrough from SAPM receiver. (#35972)","Please use `include_metadata` instead with the following config option applied to the batch processor:","batch:","metadata_keys: [X-Sf-Token]"],"signalfxexporter":["Add more default metrics related to Kubernetes cronjobs, jobs, statefulset, and hpa (#36026)"],"simpleprometheusreceiver":["Support to set `job_name` in config (#31502)"],"solacereceiver":["Add support to the Solace Receiver to convert the new `Move to Dead Message Queue` and new `Delete` spans generated by Solace Event Broker to OTLP. (#36071)","The Solace receiver may unexpectedly terminate on reporting traces when used with a memory limiter processor and under high load (#35958)"],"splunkenterprisereceiver":["Add telemetry around the Splunk Enterprise kv-store. (#35445)","Add new metrics for Splunk Enterprise dispatch artifacts (#35950)"],"splunkhecreceiver":["Avoid a memory leak by changing how we record obsreports for logs and metrics. (#35294)"],"testbed":["`scenarios.createConfigYaml()` and `utils.CreateConfigYaml()` functions now take processor configs as a struct slice argument instead of `map[string]string`. (#33003)","- This is to preserve processor order. `ProcessorNameAndConfigBody` is the newly created struct."],"webhookeventreceiver":["Pass the consumer error to EndLogsOp (#35844)"]},"v0.114.0":{"(general)":["exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/"],"cmd/githubgen":["Adds a flag to skip checking GitHub organization membership for CODEOWNERS (#36263)"],"connector/otlpjson":["Throw error on invalid otlp payload. (#35738, #35739)"],"container":["Set non root group permissions for container image (#35179)"],"datadogexporter":["üêû Stop prefixing `http_server_duration`, `http_server_request_size` and `http_server_response_size` with `otelcol` (#36265)","üêû These metrics can be from SDKs rather than collector. Stop prefixing them to be consistent with https://opentelemetry.io/docs/collector/internal-telemetry/#lists-of-internal-metrics"],"datadogreceiver":["Add json handling for the `api/v2/series` endpoint in the datadogreceiver (#36079)"],"elasticsearchexporter":["Translate `k8s.*.name` resource attributes in ECS mode (#36233)","Translate `k8s.job.name`, `k8s.cronjob.name`, `k8s.statefulset.name`, `k8s.replicaset.name`, `k8s.daemonset.name`, `k8s.container.name` to `kubernetes.*.name`. Translate `k8s.cluster.name` to `orchestrator.cluster.name`."],"encodingextension":["Add support for profiles signal to encodingextension (#36008)"],"exporter/loadbalancing":["üêû Shutdown exporters during collector shutdown. This fixes a memory leak. (#36024)"],"exporter/prometheusremotewrite":["Deprecate configuration option `export_created metric` (#35003)","Disable the exporter.prometheusremotewriteexporter.deprecateCreatedMetric feature gate to temporarily re-enable the created metric."],"googlemanagedprometheus":["Add `CumulativeNormalization` config option to allow users to configure to specify whether to report normalized or un-normalized points. Defaults to normalized. (#36357)"],"k8sattributesprocessor":["Add support for profiles signal (#35983)"],"k8sclusterreceiver":["Add support for limiting observed resources to a specific namespace. (#9401)","This change allows to make use of this receiver with `Roles`/`RoleBindings`, as opposed to giving the collector cluster-wide read access."],"opampextension":["Add content type to opamp extension when reporting EffectiveConfig (#36327)","Add EffectiveConfig.ConfigMap.ConfigMap[*].ContentType as \"text/yaml\" to the opamp extension when reporting EffectiveConfig."],"otelarrowreceiver":["New admission control metrics are consistent across Arrow and OTLP data paths. (#36334)","`otelcol_otelarrow_admission_in_flight_bytes` new, replaces `otelcol_otel_arrow_receiver_in_flight_bytes`","`otelcol_otelarrow_admission_waiting_bytes`: new, describes waiting requests","`otelcol_otel_arrow_receiver_in_flight_items`: removed","`otelcol_otel_arrow_receiver_in_flight_requests`: removed","Admission control improvements (LIFO); admission.waiter_limit is deprecated, replaced with admission.waiting_limit_mib. (#36074)","Add a new LIFO-based bounded queue. (#36074)"],"pkg/datadog":["Expose an API `TranslatorFromConfig` that creates a new metrics translator (#36300)","This is only code refactor and has no user-facing impact"],"pkg/ottl":["Respect the `depth` option when flattening slices using `flatten` (#36161)","The `depth` option is also now required to be at least `1`."],"pkg/stanza":["Ensure that time parsing happens before entry is sent to downstream operators (#36213)","Synchronous handling of entries passed from the log emitter to the receiver adapter (#35453)","Changed signature of `emit.Callback` function in `pkg/stanza/fileconsumer/emit` package by introducing `emit.Token` struct that encapsulates the token's body and attributes. (#36260)"],"processor/k8sattributes":["üêû Block when starting until the metadata have been synced, to fix that some data couldn't be associated with metadata when the agent was just started. (#32556)"],"processor/spanprocessor":["Add a new configuration option to keep the original span name when extracting attributes from the span name. (#36120)"],"prometheusexporter":["üêû Fixes a race condition between the exporter start and shutdown functions. (#36139)","reject metrics whose types have changed, use pre-existing descriptions when help strings change (#28617)"],"prometheusreceiver":["üêû Fix prometheus receiver to support static scrape config with Target Allocator (#36062)"],"prometheusremotewriteexporter":["reduce allocation when serializing protobuf (#35185)"],"resourcedetectionprocessor":["Introduce support for Profiles signal type. (#35980)"],"routingconnector":["Add ability to route by metric context (#36236)","Add ability to route by span context (#36276)"],"splunkenterprisereceiver":["Add new metrics for Splunk Enterprise dispatch artifacts caches (#36181)"]},"v0.115.0":{"(general)":["exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/"],"awsemfexporter":["Add support for 1 second metric resolution in CloudWatch Embedded Metrics Format based on metric attributes (#29506)","Improvement unit conversion during EMF log translation (#35937)"],"awsfirehosereceiver":["Follow receiver contract based on type of error (#5909)","üêû fix timestamp when ingesting logs from CloudWatch through firehose (#36122)"],"azuremonitorexporter":["üêû Fixes an issue where the Azure Monitor exporter was not sending data to App Insights due to the Telemetry Channel not being flushed. (#35037)"],"clickhouseexporter":["üêû Fix incorrect Resource Attribute `service.name` translation to ClickHouse ServiceName field for Logs Records (#36349)"],"cmd/opampsupervisor":["Update default logger output paths to stderr (#36072)","The default output paths for the opamp supervisor logger have been updated to stderr from [stdout, stderr].","Support environment variable expansion in the OpAMP supervisor config. (#36269)","Do not log err if the last received doesn't exist (#36013)"],"datadogexporter":["Add a configurable `reporter_period` parameter to the Datadog exporter‚Äôs host metadata configuration to allow users to specify the frequency at which host metadata is sent to Datadog. (#36450)"],"elasticsearchexporter":["Respect `flush::bytes` in sync bulk indexer, `flush::bytes` measures uncompressed size, change default `batcher::max_size_items` to `0` (#36163)","Limit the bulk request size to roughly `flush::bytes` for sync bulk indexer. Sync bulk indexer is used when `batcher::enabled` is either true or false. In order words, sync bulk indexer is not used when batcher config is undefined. Change `flush::bytes` to always measure in uncompressed bytes. Change default `batcher::max_size_items` to `0` as bulk request size limit is now more effectively enforced by `flush::bytes`."],"exporter/prometheusremotewrite":["Change `exporter.prometheusremotewriteexporter.deprecateCreatedMetric` feature gate from Alpha to Beta version. (#35003)","The `export_created_metric` configuration parameter is now ignored by default."],"exporter/pulsarexporter":["Change configuration option `map_connections_per_broker`, rename to `max_connections_per_broker`. (#36579)"],"extension/cgroupruntime":["Initial implementation for cgroupruntime extension. (#30289)"],"failoverconnector":["üêû Resolves a bug that prevents proper recovery when disabling max retries (#36587)"],"googlecloudpubsubexporter":["üêû Fix a goroutine leak during shutdown. (#30438)","A goroutine leak was found in the googlecloudpubsubexporter.","The goroutine leak was caused by the exporter not closing the underlying created gRPC client when using an insecure custom endpoint."],"huaweicloudcesreceiver":["Introduce new receiver fetching data from huawei Cloud Eye Service. (#34953)"],"internal":["Remove stable gate `component.UseLocalHostAsDefaultHost` (#36589)"],"k8sattributesprocessor":["Move k8sattr.fieldExtractConfigRegex.disallow feature gate to Beta. (#25128)","Disable the `k8sattr.fieldExtractConfigRegex.disallow` feature gate to get the old behavior."],"loadbalancingexporter":["Adding sending_queue, retry_on_failure and timeout settings to loadbalancing exporter configuration (#35378, #16826)","When switching to top-level sending_queue configuration - users should carefully review queue size","In some rare cases setting top-level queue size to n*queueSize might be not enough to prevent data loss","The k8sresolver in loadbalancingexporter was triggering exporter churn in the way the change event was handled. (#35658)"],"netflowreceiver":["Introduce the netflow receiver (#32732)"],"opampsupervisor":["Enable strict unmarshalling of the OpAMP Supervisor config file. An error will now be returned if an invalid config key is set. (#35838)"],"opencensusreceiver":["Do not report error message when OpenCensus receiver is shutdown cleanly. (#36622)"],"pkg/datadog":["Refactor the API that provides metrics translator (#36474)","This is API change only and does not affect end users"],"pkg/ottl":["üêû Move debug log to `Statement.Execute` so that components using it instead of `StatementSequence` also get debug logs. (#36456)","Allow indexing []int64, []float64, []bool, and []byte slices (#29441)","It should now be possible to index all slice types"],"pkg/stanza":["Introduce active file grouping mechanism. (#23787)"],"postgresqlreceiver":["Minimal supported PostgreSQL version updated from 9.6 to 13.0 (#30923)","Aligning on the supported versions as can be seen [in the PostgreSQL releases section](https://www.postgresql.org/support/versioning)","Added new postgresql metrics to acheive parity with Telegraf (#36528)"],"processor/k8sattribute":["üêû fixes parsing of k8s image names to support images with tags and digests. (#36131)"],"receiver/azureeventhub":["üêû When using a storage extension, the component will call Close on the client during component shutdown. This fixes a bug that resulted in a file potentially remaining locked after component shutdown. (#36238)"],"receivercreator":["Add support for starting receivers/scrapers based on provided annotations' hints for metrics' collection (#34427)"],"routingconnector":["Add abiilty to route by 'datapoint' context (#36523)"],"signalfxreceiver":["Follow receiver contract based on type of error (#5909)","Use 503 error code for retryable and 400 error code for not-retryable errors instead of responding with a 500 unconditionally."],"signaltometricsconnector":["New component for generating metrics from raw signals using user defined OTTL expressions. (#35930)"],"sumologicexporter":["adding new products for auto discovery (#35622)"],"tailsamplingprocessor":["Adds decision cache for non-sampled trace IDs (#31583)"],"vcenterreceiver":["The existing code did not honor TLS settings beyond 'insecure'. All TLS client config should now be honored. (#36482)"]},"v0.116.0":{"(general)":["exporter/kineticaexporter/","exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/"],"awss3receiver":["Add support RFC3339 format for starttime and endtime (#36787)"],"awsxrayexporter":["Generate url section in xray segment when `net.peer.name` is available (#35375)"],"azureeventhubreceiver":["support providing one or more time formats for timestamp parsing (#36650)"],"azuremonitorexporter":["üêû fix bug to remove default config of endpoint which causes failing to parse endpoint correctly. (#36704)"],"clickhouseexporter":["Exporter now sorts attribute maps' keys during INSERT, yielding better compression and predictable aggregates (#33634)"],"connector/datadog, exporter/datadog, pkg/datadog":["throw error if datadog API key contains invalid characters (#36509)"],"connector/routing":["Deprecate `match_once` parameter. (#29882)"],"datadogconnector":["Flip configs `traces::compute_stats_by_span_kind`, `traces::peer_tags_aggregation` and `traces::peer_service_aggregation` to true by default (#35969)","This enables Datadog APM stats on peer tags by default and is a backwards-compatible change. Read more on https://docs.datadoghq.com/tracing/guide/inferred-service-opt-in/."],"datadogexporter":["Flip configs `traces::compute_stats_by_span_kind`, `traces::peer_tags_aggregation` and `traces::peer_service_aggregation` to true by default (#35969)","This enables Datadog APM stats on peer tags by default and is a backwards-compatible change. Read more on https://docs.datadoghq.com/tracing/guide/inferred-service-opt-in/.","read response body on pushSketches to allow connection re-use (#36779)"],"dorisexporter":["Mark the Doris exporter as Alpha. (#33479)"],"elasticsearchexporter":["Map *.geo.location.{lat,lon} as geo_point field in OTel mode (#36565)","In OTel mapping mode, merge *.geo.location.{lat,lon} to *.geo.location such that they are stored as geo_point in Elasticsearch."],"exporter/prometheusremotewrite":["üêû Fix exemplar handling when the exemplar is an integer value. (#36657)","Send metrics with exemplars as integer values now are correctly handled."],"fileexporter":["Add support for profiles signal. (#35978)"],"githubreceiver":["Update metric names to match VCS Metric Semantic Conventions and scraper key name. (#36714)","* Change the `github` scraper key to `scraper`","* Add `vcs.repository.url.full` attribute","* Change attribute `repository.name` to `vcs.repository.name`","* Change attribute `ref.name` to `vcs.ref.head.name`","* Change attribute `ref.type` to `vcs.ref.head.type`","* Change attribute `change.state` to `vcs.change.state`","* Add attribute `vcs.revision_delta.direction` with `ahead` and `behind` values","* Change metric `vcs.repository.ref.revisions_ahead` to `vcs.ref.revisions_delta` with `vcs.revision_delta.direction=ahead`","* Change metric `vcs.repository.ref.revisions_behind` to `vcs.ref.revisions_delta` with `vcs.revision_delta.direction=behind`","* Change metric `vcs.repository.ref.count` to `vcs.ref.count`","* Change metric `vcs.repository.ref.time` to `vcs.ref.time`","* Add attribute `vcs.line_change.type` with `added` and `removed` values","* Change metric `vcs.repository.ref.lines_added` to `vcs.ref.lines_delta` with `vcs.line_change.type=added`","* Change metric `vcs.repository.ref.lines_removed` to `vcs.ref.lines_delta` with `vcs.line_change.type=removed`","* Change metric `vcs.repository.contributor.count` to `vcs.contributor.count`","* Change metric `vcs.repository.change.time_open` to `vcs.change.duration` with `vcs.change.state=open`","* Change metric `vcs.repository.change.time_to_approval` to `vcs.change.time_to_approval`","* Change metric `vcs.repository.change.time_to_merge` to `vcs.change.time_to_merge`","* Change metric `vcs.repository.change.count` to `vcs.change.count`","Adds webhook skeleton to GitHub receiver to receive events from GitHub for tracing. (#27460)","This PR adds a skeleton for the GitHub receiver to receive events from GitHub","for tracing via a webhook. The trace portion of this receiver will run and","respond to GET requests for the health check only."],"googlecloudmonitoringreceiver":["Add metric-specific labels to googlecloudmonitoringreceiver component (#35711)","üêû Fix \"no validation found\" error if workload is running on Google Cloud Platform (#36607)"],"jaegerreceiver":["Remove ineffectual warning from jaegerreceiver (#35894)"],"jsonlogencodingextension":["Change how logs are marshaled. Instead of marshaling just the first log, marshal all logs into a JSON array. (#34064)"],"k8sattributesprocessor":["Override extracted k8s attributes if original value has been empty (#36373)"],"k8sattributesreceiver":["Log any errors encountered during kube client initialisation (#35879)","This addresses an issue where the collector, due to an error encountered during the kubernetes client initialisation,","was reporting an 'unavailable' status via the health check extension without any further information to be found in the logs."],"kafkaexporter, kafkareceiver":["Add a new mechanism \"AWS_MSK_IAM_OAUTHBEARER\" for kafka exporter and kafka receiver. This mechanism use the AWS MSK IAM SASL Signer for Go https://github.com/aws/aws-msk-iam-sasl-signer-go. (#19747)"],"kineticaexporter":["The kineticaexporter is now Unmaintained as it has no active code owners from the vendor (#36808)"],"libhoneyreceiver":["Introduce the scaffolding of a new component, libhoneyreceiver (#36693)"],"loadbalancingexporter":["Adds a an optional configuration to the k8s resolver which returns hostnames instead of IPs for headless services pointing at statefulsets (#18412)"],"mongodbatlasreceiver":["Adds additional metrics to the MongoDB Atlas receiver (#36525)","Adds a number of new default disabled metrics to the MongoDB Atlas receiver. These metrics are:","- mongodbatlas.disk.partition.queue.depth","- mongodbatlas.disk.partition.throughput","- mongodbatlas.process.cache.ratio"],"opampextension":["Use status subscription for fine granular component health reporting (#35856)","üêû Fix blocking agent shutdown due to unclosed channel (#36764)"],"opampsupervisor":["avoid nil pointer access when reporting the last received remote config (#36850)"],"parseutils":["Handle escaped quotes when parsing pairs using SplitString. (#36176)"],"pkg/ottl":["GetXML Converter now supports selecting text, CDATA, and attribute (value) content. (#36821)","Add the `ottl.ParserCollection` utility to help handling parsers for multiple OTTL contexts (#29017)","The `ottl.ParserCollection` groups contexts' `ottl.Parser`s, choosing the suitable one","to parse a given statement. It supports context inference using the given statements,","and allows prepending the context name to the statements' paths."],"pkg/pdatatest":["Add support for Profiles signal comparison. (#36232)"],"postgresqlreceiver":["Update the postgresqlreceiver to handle new table schema for the bgwriter metrics in pg17+ (#36784)"],"processor/tailsampling":["üö®‚ö†Ô∏è Reverts #33671, allowing for composite policies to specify inverted clauses in conjunction with other policies. This is a change bringing the previous state into place, breaking users who rely on what was introduced as part of #33671. (#34085)"],"purefareceiver":["Implements support for scraping Pure Storage FlashArray with Purity version 6.6.11+ (#36251)"],"receiver/prometheusreceiver":["Metric adjuster no longer assumes that all metrics from a scrape come from the same resource (#36477)"],"receiver/prometheusremotewrite":["Parse labels from Prometheus Remote Write requests into Resource and Metric Attributes. (#35656)","Warning - The HTTP Server still doesn't pass metrics to the next consumer. The component is unusable for now."],"routingprocessor":["Deprecated in favor of the routing connector. (#36616)","Deprecated in favor of the routing connector. (#36616)"],"s3exporter":["Upgrading to adopt aws sdk v2 (#36699)"],"signaltometrics":["Add config validation and custom OTTL functions (#35930)","Adds config validation for the signal to metrics connector. Also introduces `AdjustedCount` OTTL function."],"splunkhecexporter":["Add `otel_attrs_to_hec_metadata/*` config fields to replace `hec_metadata_to_otel_attrs/*` fields. (#35092)","`otel_attrs_to_hec_metadata/*` config fields will replace the `hec_metadata_to_otel_attrs/*` fields in a later release."],"sumologicextension":["Skip likely zombie processes on Windows. (#36481)"],"tesbed":["add options for retry/storage for filelog sender (#36781)"],"testbed":["Add batcher performance tests (#36206)"]},"v0.117.0":{"(general)":["exporter/kineticaexporter/","exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/"],"awsemfexporter":["Split EMF log to multiple log splits when buckets larger than 100. (#36771)"],"awsxrayexporter":["merge in latest semantic conventions for awsxrayexporter. (#36894)"],"cloudfoundryreceiver":["Introduce a feature gate enable copying envelope tags to the metrics as resource attributes instead of datapoint attributes. (#34824)"],"cmd/telemetrygen":["Introduce support for generating histograms in telemetrygen (#36322)"],"exporter/prometheusremotewrite":["In preparation to re-introducing multiple workers, we're removing a data-race when batching timeseries. (#36601)"],"internal/docker":["üêû Fix image matching regular expression to properly match SHA256 strings. (#36239)","This affects the `docker_observer` extension."],"k8s.node.condition_*":["The condition of a node. e.g. `k8s.node.condition_ready`. The value can be `true`, `false`, `unknown`."],"k8s.pod.phase":["The phase of a Pod indicates where the Pod is in its lifecycle. E.g. 'Pending', 'Running'"],"k8s.pod.status_reason":["A brief message indicating details about why the pod is in this state. E.g. 'Evicted'"],"k8sclusterreceiver":["Add additional attributes to node and pod entities (#35879)","Adds the following attributes to node and pod metadata/entities:"],"k8sobjectsreceiver":["ensure the `k8s.namespace.name` attribute is set for objects retrieved using the `watch` mode (#36352)"],"libhoneyreceiver":["Mark the libhoney receiver exporter as Alpha. (#36693)","Implement log signal for libhoney receiver (#36693)","Implement trace signal for libhoney receiver (#36693)"],"logzioexporter":["Remove jaeger dbmodel dependency. (#36972)"],"mongodbatlasreceiver":["Update the mongoDB Atlas receiver to use the Default HTTP Transport that supports default proxy configuration (#36412)"],"mysqlreceiver":["Avoid recording a value for the MysqlBufferPoolPages metric when out-of-bounds. (#35495)","When using compressed tables, Innodb_buffer_pool_pages_misc may report an out-of-bounds value.","üêû See https://bugs.mysql.com/bug.php?id=59550 for context.","Divide large values directly in SQL queries to avoid int overflows (#35495)"],"opampsupervisor":["Report an 'Applied' remote config status when an empty config is received. (#36682)"],"opensearchexporter":["Add Sending Queue to enable persistent queue in case of upstream failure (#33919)"],"ottl":["Add a new ottl trim function that trims leading and trailing characters from a string (default- whitespace). (#34100)"],"pkg/ottl":["removed the ability to reference entire parent objects. (#36872)","Statements like `set(cache[\"resource\"], resource)` in non-resource contexts will no longer work.","üêû fix handling of nested maps within slices in the `flatten` function (#36162)","Change OTTL contexts to properly handle `ottl.Path` with context (#29017)","The OTTL contexts have a new option `EnablePathContextNames` to enable support for expressing a statement's context via path names in the statement"],"receiver/azureeventhub":["Ensure that observed timestamp is set when unmarshaling logs. (#36861)"],"receivercreator":["Add support for starting logs' collection based on provided k8s annotations' hints (#34427)"],"redisstorageextension":["Move redis storage extension to alpha (#36778)"],"routingconnector":["Change default value of `match_once` parameter to `true`. (#29882)","This field was deprecated in v0.116.0 and will be removed in v0.120.0."],"sapmexporter":["Deprecate SAPM exporter (#36028)","The SAPM exporter is being marked as deprecated. Please use the `otlphttp` exporter with the configuration shown","below. Also update your pipeline configuration for Traces accordingly.","```yaml","exporters:","otlphttp:","traces_endpoint: \"${SPLUNK_INGEST_URL}/v2/trace/otlp\"","headers:","\"X-SF-Token\": \"${SPLUNK_ACCESS_TOKEN}\"","```"],"sigv4authextension":["Add support for endpoint based names for logs and traces (#36828)"],"sqlqueryreceiver":["Add instrumentation scope to SQL query receiver metrics and logs (#31028)"],"statsdreceiver":["Add UDS support to statsdreceiver (#21385)"],"tailsamplingprocessor":["Support hot sampling policy loading (#37014)"]},"v0.118.0":{"awscloudwatchmetricsreceiver":["move the component to unmaintained status (#36599)"],"awss3exporter":["Implement sending queue for S3 exporter (#37274, #36264)"],"cgroupruntimeextension":["Implement ECS metadata retrieval for cgroupruntime extension. (#36814)"],"clickhouseexporter":["üêû Fix Nil Pointer Exception on Metrics/Traces export without service.name Resource Attribute (#37030)"],"connector/routing":["Invalid configuration when using `context` other than `resource` #37410"],"datadogexporter":["Add a feature gate datadog.EnableReceiveResourceSpansV2. Enabling this gate uses a refactored implementation of OTLP-\u003eDatadog Span translation in datadogexporter and datadogconnector which improves performance by 10%, and deprecates the following functionality: - No longer checks for resource-related values (container, env, hostname) in span attributes. This previous behavior did not follow the OTel spec. (#37171)","Add a feature gate datadog.EnableOperationAndResourceNameV2. Enabling this gate modifies the logic for computing operation and resource names from OTLP spans to produce shorter, more readable names and improve alignment with OpenTelemetry specifications. (#36419)"],"deltatocumulativeprocessor":["cap the number of exponential histogram buckets to 160 (#33277)"],"dorisexporter":["send json lines to doris rather than json array (#36896)"],"elasticsearchexporter":["Remove Index config, which was deprecated and replace with LogsIndex since v0.60.0 (#37094)","Remove `dedup` config setting that was deprecated in v0.104.0 (#33773)","Handle `EventName` for log records in OTel mode (#37011)","More efficient JSON encoding for OTel mode (#37032)","Increases throughput for metrics by 2x and for logs and traces by 3x","Mark OTel mapping mode as stable (#37240)","üö®‚ö†Ô∏è OTel mapping mode should no longer be considered unstable as there is no planned breaking change."],"exporter/bmchelix":["Add a new component for exporting metrics to BMC Helix (#36773)"],"extension/jaegerremotesampling":["remove dependency on jaeger internal code (#36976)"],"extension/skywalkingencodingextension":["Support skywalking_encoding extension for skywalking traces. (#28693)"],"githubgen":["Deprecate githubgen in this repository (#37294)","githubgen has moved to opentelemetry-go-build-tools. Please change your scripts to use this new location."],"gitlabreceiver":["Adds webhook skeleton to GitLab receiver to receive events from GitLab for tracing. (#35207)","This PR adds a skeleton for the GitLab receiver to receive events from GitLab for tracing via a webhook. The trace portion of this receiver will run and respond to GET requests for the health check only."],"googlecloudmonitoringreceiver":["set the minimum collection interval as 60s (#36898)"],"googlecloudpubsubreceiver":["üêû Fix a goroutine leak during shutdown. (#30438)","A goroutine leak was found in the googlecloudpubsubreceiver.","The goroutine leak was caused by the receiver not closing the underlying created gRPC client when using an insecure custom endpoint."],"huaweicloudces":["Move huaweicloudces receiver to alpha (#34953)"],"intervalprocessor":["Interval Processor is now Alpha stability and is added to the `contrib` and `k8s` distributions (#36514)"],"k8sattributesprocessor":["For pods with only one container, the `container.id` and `k8s.container.name` are not longer required in the resource attributes to add the container attributes (#34189)","Ensure the pods gathered by the processor contain the information about their related replica sets and deployments after the initial sync (#37056)"],"logdedupprocessor":["Add 'include_fields' option to deduplicate log records via body or attribute fields. (#36965)","üêû Fix config validation not working when creating a processor. (#37278)"],"mysqlreceiver":["Add delete_multi, update_multi metrics to mysql.commands for mysqlreceiver (#37301)"],"pkg/ottl":["Support dynamic indexing of maps and slices. (#36644)","Add the `Nanosecond` converter to return the nanosecond component from the specified time.Time (#37042)","Add the `Second` converter to return the second component from the specified time.Time (#37042)","Enhanced error messages for invalid cache access and introduced options to configure their values within the OTTL contexts. (#29017)","Add the `FormatTime` function to convert `time.Time` values to human-readable strings (#36870)","üêû Fix bug with `replace_all_matches` and `replace_all_patterns` that caused non-string values to be changed to empty string when matching against empty string. (#37071)","Enhanced error messages for invalid cache access and introduced options to configure their values within the OTTL contexts. (#29017)","Add value expression parser that enables components using ottl to retrieve values from the output of an expression (#35621)","the expression can be either a literal value, a path value within the context, or the result of a converter and/or a mathematical expression."],"pkg/stanza":["Move `filelog.container.removeOriginalTimeField` feature gate to stable (#33389)"],"prometheusremotewriteexporter":["Only append label values if they are different for colliding OTel attributes (#35896)","This change ensures that, when translating colliding attributes from OTel attributes to Prometheus label, the label values are only appended if their values are different.","üö®‚ö†Ô∏è This is a breaking change as it changes the value of label outputted.","Re allows the configuration of multiple workers (#36134)"],"receiver/prometheusremotewrite":["Check if Scope is already present comparing with the received labels (#36927)"],"resourcedetectionprocessor":["This enhancement detects AWS EKS cloud account ID (#37179)","Introduce kubeadm detector to retrieve local cluster name. (#35116)"],"routingconnector":["Disconnect `match_once` parameter from functionality. (#29882)","The parameter will be ignored, except to trigger a warning log about its upcoming removal in v0.120.0.","Change `match_once` parameter from `bool` to `*bool`. (#29882)","Boolean values should still unmarshal successfully, but direct instantiation in code will fail.","The change allows us to check for usage and warn of the upcoming removal in v0.120.0."],"signalfxexporter":["Prioritize retrieving token from context when accesstokenpassthrough is enabled (#37102)","Honor access_token_passthrough config option for sending events (#37102)"],"signaltometrics":["Adds resource attributes based on telemetry settings to the connector to ensure single writer (#35930)"],"signaltometricsconnector":["Add core logic for the signal to metrics connector to make it functional. (#35930)"],"tailsamplingprocessor":["üêû Added debug logging to the sampling decision caches. (#37038)","Improved not sampled decision cache usage and deleting traces from the internal map when they are in a decision cache. (#37189)","üêû Fixed sampling policy evaluation debug logging batch metrics (e.g. sampled). (#37040)","Late span age histogram should include sampled traces. (#37180)"],"telemetrygen":["Remove go-grpc-middleware dependency (#37103)"],"vcenterreceiver":["Adds vCenter memory capacity for hosts and memory granted metric for VMs. (#37257)"]},"v0.119.0":{"(general)":["exporter/kineticaexporter/","exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/awscloudwatchmetricsreceiver/","receiver/rabbitmqreceiver/"],"awss3exporter":["Add support for S3 Storgeclass (#35173)"],"connector/routing":["üêû Fix config validation with context other than `resource` (#37410)"],"cumulativetodeltaprocessor":["Add metric type filter for cumulativetodelta processor (#33673)"],"datadogconnector":["Support obfuscating sql queries in APM stats (#37457)","Ensure that feature flags \"enable_receive_resource_spans_v2\" and \"enable_operation_and_resource_name_logic_v2\"","are also enabled on both Datadog Exporter and Datadog Connector so that span attributes are properly","mapped to span type and span resource in Datadog APM; otherwise spans and apm stats may not be","obfuscated and attributes on stats payloads may not match traces.","See https://docs.datadoghq.com/opentelemetry/schema_semantics/semantic_mapping/?tab=datadogexporter#mapping-opentelemetry-database-system-type-to-datadog-span-type","NOTE: Long/complex SQL queries may cause a performance impact on APM Stats calculation in Datadog Connector.","Consider implementing sampling in your pipeline prior to sending traces to Datadog Connector if you experience this."],"datadogexporter":["Remove stable feature gate `exporter.datadog.hostname.preview` (#37561)"],"deltatocumulativeprocessor":["In order to cap number of histogram buckets take the min of desired scale across negative and positive buckets instead of the max (#37416)"],"elasticsearchexporter":["Consistently store the structured body of logs and events in `body.structured` in `otel` mode (#37387)","Group data points into a single document even if they are from different but equal resources (#37509)","This may prevent document rejections in case the same batch contains different resources or scopes that have the same set of attributes","Add config `logs_dynamic_id` to dynamically set the document ID of log records using log record attribute `elasticsearch.document_id` (#36882)","Declare MutatesData: false (#37234)","When multiple exporters are used, the collector doesn't need to clone the incoming data anymore"],"envoyalsreceiver":["Add a new receiver for the Envoy ALS (Access Log Service). (#36464)"],"exporter/clickhouse":["Adding missing examples of DDL created by the clickhouse exporter (#35903)"],"exporter/prometheusremotewrite":["Change `exporter.prometheusremotewriteexporter.deprecateCreatedMetric` feature gate from Beta to Stable version. (#35003)","The `export_created_metric` configuration parameter is now permanently deprecated."],"exporter/sematext":["Add a new component for exporting metrics and logs to Sematext (#36465)"],"filelogreceiver":["üêû Fix issue where flushed tokens could be truncated. (#35042)"],"githubgen":["Switch over all usages of githubgen to the new tool location, since the old tool was deprecated (#37412, #37294)"],"googlecloudpubsubreceiver":["Added support for encoding extensions. (#37109)"],"hostmetrics/process":["Added support for tracking process.uptime (#36667)"],"httpcheckreceiver":["Added support for specifying multiple endpoints in the `httpcheckreceiver` using the `endpoints` field. Users can now monitor multiple URLs with a single configuration block, improving flexibility and reducing redundancy. (#37121)"],"jaegerreceiver":["Log the endpoints of different servers started by jaegerreceiver (#36961)","üêû This change logs the endpoints of different servers started by jaegerreceiver. It simplifies debugging by ensuring log messages match configuration settings."],"k8sattributesprocessor":["Wait for the other informers to complete their initial sync before starting the pod informers (#37056)"],"metricsgenerationprocessor":["Generated metric name may not match metric being scaled (#37474)"],"metricstarttimeprocessor":["Add the initial skeleton for the metricsstarttimeprocessor (#37186)","The component is still in development and is not ready for use.","Add the initial skeleton for the metricsstarttimeprocessor (#37186)","The component is still in development and is not ready for use."],"netflowreceiver":["Adds the implementation of the netflow receiver (#32732)","üêû The receiver now supports receiving NetFlow v5, NetFow v9, IPFIX, and sFlow v5 logs."],"opampsupervisor":["add support for headers configuration for reporting own telemetry (#37353)","report own metrics via OTLP instead of prometheus receiver (#37346)"],"otlpjsonfilereceiver":["Include file attributes and append it to the log record (#36641)"],"pkg/stanza":["üêû Fix default source identifier in recombine operator (#37210)","Its defualt value is now aligned with the semantic conventions: `attributes[\"log.file.path\"]`"],"processor/transformprocessor":["Add support for flat configuration style. (#29017)","The flat configuration style allows users to configure statements by providing a list of statements instead of a","üêû structured configuration map. The statement's context is expressed by adding the context's name prefix to path names,","which are used to infer and to select the appropriate context for the statement.","Replace parser collection implementations with `ottl.ParserCollection` and add initial support for expressing statement's context via path names. (#29017)"],"prometheusreceiver":["Add `receiver.prometheusreceiver.UseCollectorStartTimeFallback` featuregate for the start time metric adjuster to use the collector start time as an approximation of process start time as a fallback. (#36364)"],"receiver/cloudfoundry":["Promote `cloudfoundry.resourceAttributes.allow` feature gate to beta (#34824)","The `cloudfoundry.resourceAttributes.allow` feature gate is now enabled by default."],"resourcedetectionprocessor":["Expose additional configuration parameters for the AWS metadata client used by the EC2 detector (#35936)","In some cases, you might need to change the behavior of the AWS metadata client from the [standard retryer](https://docs.aws.amazon.com/sdk-for-go/v2/developer-guide/configure-retries-timeouts.html)","By default, the client retries 3 times with a max backoff delay of 20s.","We offer a limited set of options to override those defaults specifically, such that you can set the client to retry 10 times, for up to 5 minutes, for example:","```yaml","processors:","resourcedetection/ec2:","detectors: [\"ec2\"]","ec2:","max_attempts: 10","max_backoff: 5m","```","Add `fail_on_missing_metadata` option on EC2 detector (#35936)","If the EC2 metadata endpoint is unavailable, the EC2 detector by default ignores the error.","By setting `fail_on_missing_metadata` to true on the detector, the user will now trigger an error explicitly,","which will stop the collector from starting.","The `gcp` resource detector will now detect resource attributes identifying a GCE instance's managed instance group. (#36142)"],"routingconnector":["The connector splits the original payload so that it may be emitted in parts to each route. (#37390)"],"signalfxexporter":["Warn on dropping metric data points when they have more than allowed dimension count (#37484)","The SignalFx exporter drops metric data points if they have more than 36 dimensions.","üêû Currently, the exporter logs at debug level when this occurs.","With this change, the exporter will log at the warning level."],"signalfxreceiver":["`access_token_passthrough` is deprecated (#37575)","- \"`access_token_passthrough` is deprecated.\"","- \"Please enable include_metadata in the receiver and add the following config to the batch processor:\"","```yaml","batch:","metadata_keys: [X-Sf-Token]","```"],"signaltometricsconnector":["Move signal to metrics connector to alpha stability (#35930)"],"solacereceiver":["Update validation step to allow only one auth method. (#36386)"],"tailsamplingprocessor":["Reworked the consume traces, sampling decision, and policy loading paths to improve performance and readability (#37560)","üêû Fixed sampling decision metrics `otelcol_processor_tail_sampling_sampling_trace_dropped_too_early` and `otelcol_processor_tail_sampling_sampling_policy_evaluation_error_total`, these were sometimes overcounted. (#37212)","As a result of this change non-zero values of `otelcol_processor_tail_sampling_sampling_trace_dropped_too_early`","and `otelcol_processor_tail_sampling_sampling_policy_evaluation_error_total` metrics will be lower.","üêû Before this fix, errors got counted several times depending on the amount of traces being processed","that tick and where in the batch the error happened.","Zero values are unaffected."]},"v0.120.0":{"activedirectorydsreceiver":["üêû Fixed typo in the attribute `distingushed_names`, renaming it to `distinguished_names`. (#37606)"],"all":["Added support for go1.24, bumped minimum version to 1.23 (#37875)"],"awscontainerinsightreceiver":["Add support for HOST_PROC environment variable in AWS Container Insight Receiver. (#35862)","üêû Fix race condition in shutdown of AWS Container Insight receiver (#37695)"],"awsfirehosereceiver":["Refactor unmarshallers to implement pdata unmarshaler interfaces (#37361)"],"azureeventhubreceiver":["üêû Fix bug where persisted offset would be ignored after restart (#37157)"],"bearertokenauthextension":["üêû Load token lazily for gRPC AUTH to fix token refresh issue (#36749)"],"bmchelixexporter":["Mark the BMC Helix exporter as Alpha. (#36773)","metrics implementation (#36773)"],"datadogexporter":["Add a gauge metric datadog.otel.gateway which is 1 if the collector is used as a gateway or 0 otherwise. (#37499)"],"datadogreceiver":["Implement support for span links (#37449)"],"dbstorageextension":["Add DB Transactions to dbstorage.Batch() method as it is expected by Storage API (#37805)"],"elasticsearchexporter":["Use go-elasticsearch/v8, require minimum version of ES 7.17.x or 8.x (#32454)","Remove dedot config. ECS mode now always dedots, no others dedot at all. (#33772)","Syncs support for compression level on elasticsearch exporter with confighttp. The default compression level is 1 if not set. (#37260)","Add profiles support to elasticsearch exporter (#37567)","üêû Fix data loss caused by incorrect metric grouping in ECS and OTel mode (#37898)","üêû Fix data loss when the same metric exists across different resources or scopes. Data points / metrics were incorrectly grouped together, leading to data loss with warning logs e.g. \"metric with name '***' has already been serialized\"."],"exporter/logzioexporter":["Remove dependency on Jaeger pkg/cache (#37833)"],"extension/oauth2clientauth":["Add `expiry_buffer` config to `oauth2client` extension, allowing token refresh before expiration with a default buffer of 5 minutes. (#35148)","- Prevents authentication failures by refreshing the token early.","- The default expiry buffer is set to 5 minutes, and users can adjust it as needed."],"githubreceiver":["The `required_header` configuration option for the trace receiver has been changed to `required_headers`. (#37578)","add support for GitHub Actions workflow run events using deterministic Trace and Root Span IDs. (#37578)"],"googlecloudlogentryencodingextension":["Introduce the scaffolding of a new component, googlecloudlogentryencodingextension (#37531)"],"googlecloudmonitoringreceiver":["support use [monitoring filters](https://cloud.google.com/monitoring/api/v3/filters) to filter metrics (#36898)"],"googlecloudpubsubreceiver":["üêû Turn noisy `warn` log about Pub/Sub servers into `debug`, and turn the reset count into a metric (#37571)","The receiver uses the Google Cloud Pub/Sub StreamingPull API and keeps a open connection. The Pub/Sub servers","recurrently close the connection after a time period to avoid a long-running sticky connection. Before the","üêû receiver logged `warn` log lines everytime this happened. These log lines are moved to debug so that fleets with","lots of collectors with the receiver don't span logs at warn level. To keep track of the resets, whenever a","connection reset happens a `otelcol_receiver_googlecloudpubsub_stream_restarts` metric is increased by one."],"internal/datadog":["create new package `github.com/open-telemetry/opentelemetry-collector-contrib/pkg/datadog/hostmetadata` which exposes `GetSourceProvider` from `github.com/open-telemetry/opentelemetry-collector-contrib/internal/datadog/hostmetadata` (#37668)"],"k8sattributes":["üêû Fix bug where `Filters.Labels` failed with when the `exists` or `not-exists` operations were used. (#37913)"],"k8sclusterreceiver":["Adds new descriptive attributes/metadata to the k8s.namespace and the container entity emitted from k8sclusterreceiver. (#37580)","- Adds the following attributes to k8s.namespace entity:","- k8s.namespace.phase: The phase of a namespace indicates where the namespace is in its lifecycle. E.g. 'active', 'terminating'","- k8s.namespace.creation_timestamp: The time when the namespace object was created.","- Adds the following attributes to container entity:","- container.creation_timestamp: The time when the container was started. Only available if container is either in 'running' or 'terminated' state."],"kafkatopicsobserver":["Adding new kafka topics observer extension (#37665)"],"opampsupervisor":["The OnConnectionClose was not correctly connected for the supervisor. (#37761)"],"opencensusexporter":["Deprecate the OpenCensus exporter (#36791)","Migrate to use the OTLP exporter moving forward."],"opencensusreceiver":["Deprecate the OpenCensus receiver (#36791)","Migrate to use the OTLP receiver moving forward."],"pkg/datadog":["Expose the internal Zaplogger implementation (#37939)"],"pkg/ottl":["Introduce ToLowerCase converter function (#32942)","Introduce ToSnakeCase converter function (#32942)","Introduce ToUpperCase converter function (#32942)","Introduce ToCamelCase converter function (#32942)"],"pkg/stanza":["Allow users to configure initial buffer size (#37786)","Remove deprecated `flush.WithPeriod`. (#37784)","Remove deprecated func BuildWithSplitFunc from stanza/fileconsumer (#37723)","Deprecate all functions in stanza/decode (#37734)"],"pkg/translator/jaeger/internal/jaeger":["Remove jaeger model/converter/thrift/jaeger dependency (#37820)"],"pkg/translator/prometheusremotewrite":["add support for metric type sum in FromMetricsV2 (#33661)","The public function is partially implemented and not ready for use"],"pkg/translator/zipkin/internal/zipkin":["Remove jaeger model/converter/thrift/zipkin dependency (#37795)"],"processor/redaction":["Introduce 'allowed_values' parameter for allowed values of attributes (#35840)"],"processor/tailsampling":["Adds support for optionally recording the policy (and any composite policy) associated with an inclusive tail processor sampling decision.","(#35180)"],"processor/transformprocessor":["Add support for global conditions and error mode overrides. (#29017)","Global conditions are now available for context-inferred structured configurations, allowing the use of fully","qualified paths. Additionally, a new configuration key called `error_mode` has been added to the context statements group.","This key determines how the processor reacts to errors that occur while processing that specific group of statements.","When provided, it overrides the top-level error mode, offering more granular control over error handling."],"prometheusreceiver":["Start time metric adjuster now handles reset points correctly (#37717)"],"prometheusremotewriteexporter":["Resolves a deadlock in the WAL by temporarily releasing a lock while waiting for new writes to the WAL.","(#19363, #24399, #15277)"],"receiver/hostmetrics":["Remove receiver.hostmetrics.normalizeProcessCPUUtilization feature gate (#34763)"],"receiver/prometheus":["Prometheus receiver now uses scrapers in Prometheus 3.0. (#36873)","üö®‚ö†Ô∏è There are a number of breaking changes in Prometheus 3.0. Learn more about those changes and migration guide on https://prometheus.io/docs/prometheus/latest/migration/."],"receiver/zipkinreceiver":["Remove zipkinreceiver dependency on Jaeger (#37795)"],"resourcedetectionprocessor":["add the Dynatrace detector to the resource detection processor (#37577)"],"routingconnector":["Remove `match_once` configuration parameter. (#36824)","Avoid unnecessary copy of the data in routing connector (#37946)"],"s3provider":["Delete deprecated `New` factory function. Use `NewFactory` instead. (#37921)"],"secretsmanagerprovider":["Delete deprecated `New` function, use `NewFactory` instead (#37923)"],"splunkenterprisereceiver":["Added a new `splunk.health` metric. (#36695)"],"stefexporter":["Add basic STEF exporter implementation (#37759)"],"syslogreceiver":["Support setting `on_error` config for syslog receiver. (#36906)"],"tailsamplingprocessor":["üêû Fix the decision timer metric to capture longer latencies beyond 50ms. (#37722)","This changes the unit of the decision timer metric from microseconds to milliseconds.","makes the `numeric_attribute` more flexible and allows to set only `min_value` or `max_value`, without the need to set both (#37328)","This is useful to have simple configurations like these:","```","{","type: numeric_attribute,","numeric_attribute: {","key: http.status_code,","min_value: 400","}","}","```","Add support for external caches when using the Tailsampling Processor in code. (#37035)"],"telemetrygen":["üêû Exported the API for telemetrygen for test uses. Additionally added new E2E tests and fixed race condition (#36984)"],"testbed":["Include the specified resource limits for CPU and memory in the benchmark results (#36720)"],"textutil":["Remove unnecessary copy while decoding and constructing string (#37734)","This PR affects all log receivers, text extension and kafkareceiver."],"vcenterreceiver":["Adds three more vCenter virtual machine performance metrics (#37488)"]},"v0.120.1":{"receiver/prometheus":["üêû Fix Collector failing to start up if Prometheus receiver is present in config without 'fallback_scrape_protocol'. (#38018)"]},"v0.121.0":{"aesprovider":["Promote to alpha stability (#38252)"],"awscontainerinsightreceiver":["Remove high cardinality attribute `Timestamp` from metrics generated by `awscontainerinsightreceiver` (#35861)","Remove high cardinality attribute `Timestamp` from metrics generated by `awscontainerinsightreceiver` (#35861)"],"awsfirehosereceiver":["Add `cloud.provider`, `aws.log.group.names` and `aws.log.stream.names` resource attributes to logs and set scope name and version of logs and metrics ingested by awsfirehosereceiver. (#37968)","Add support for encoding extensions (#37113)","Adds `encoding` config setting, and deprecates the `record_type` setting."],"awss3exporter":["Replaced the `s3_partition` option with `s3_partition_format` to provide more flexibility to users. (#37915, #37503)","Users can provide custom file partitions using [strftime](https://www.man7.org/linux/man-pages/man3/strftime.3.html) formatting.","The default value of `year=%Y/month=%m/day=%d/hour=%H/minute=%M` matches the older pattern (with `s3_partition: minute`)","üêû If users do not provide a value for `s3_prefix`, the exporter will not create a `/` folder in the bucket.","Added `acl` option (#37935)"],"azureblobexporter":["Add new exporter for sending telemetry to Azure Storage Blob (#35717)"],"azuremonitorreceiver":["üêû Fix bug where the time grain wasn't honored (#37337)"],"azuretranslator":["Map application-defined properties for trace signals (#35402)"],"clickhouseexporter":["Add client info to queries (#34915, #37146)","This change adds client product info to the system.query_log for more insight on where queries originate"],"cloudflarereceiver":["Ingest all attributes by default when attributes map is empty (#37720)"],"cmd/opampsupervisor":["Allow configuring Collector process execution via environment variables, custom config files and additional arguments (#24324)"],"confmap/provider/s3":["Promote to alpha stability (#38227)"],"coralogixexporter":["Add support for profiles to the Coralogix exporter. (#38011)","This change adds support for profiles to the Coralogix exporter.","It allows users to export profiles to Coralogix.","Add new batching capabilities to the Coralogix exporter. (#38081)","This change adds a new batching capabilities to the Coralogix exporter.","This change is triggered by https://github.com/open-telemetry/opentelemetry-collector/issues/8122.","The new batching capabilities are disabled by default.","To enable them, you need to set the following configuration:","```yaml","exporters:","coralogix:","batcher:","enabled: true # Enable batching","flush_timeout: 3s # Flush timeout","min_size_items: 8888 # Minimum number of items to flush","max_size_items: 10000 # Maximum number of items to batch","```","Partial success response from Coralogix (#38022)","Adds the ability to log partial success responses from Coralogix when using the Coralogix exporter."],"datadogexporter":["Add supports for HTTP_PROXY, HTTPS_PROXY and NO_PROXY for logs (#36292)"],"dorisexporter":["üêû add new config: log_response, label_prefix, headers, log_progress_interval (#38162)","optimize schema: add 'service_instance_id', add materialized views, add trace_graph table and trace_graph job. (#38229)"],"ecsobserver":["üêû Fixed ecs task tags not being included in metadata labels (#38278)"],"elasticsearchexporter":["drop support for metrics for none, raw, and bodymap mapping modes (#37928)","Metrics support is in development, and was added for \"ecs\" and \"otel\" mapping modes.","Support was unintentionally added for the other mapping modes, defaulting to the same","behaviour as \"ecs\" mode. While metrics support is still in development, drop support","from these mapping modes and require users to use the intended mapping modes.","Deprecate `batcher::min_size_items` and `batcher::max_size_items` in favor of `batcher::min_size` and `batcher::max_size`. (#38243)","Add `_metric_names_hash` field to metric documents in `otel` mode to avoid metric rejections (#37511)","Support specifying mapping mode via client metadata (#36092)","Add config `mapping::allowed_modes` to restrict mapping modes configurable from client metadata.","Add support for `data_stream.type` attribute to create dynamic index in bodymap mode. (#38000)","üêû Fixes the getLocations() function. It only worked with a location start of 0, which is very unlikely when a profile contains more than one sample. (#38274)","Reintroduce schema_url fields to otel-mode metric docs (#38045)"],"envoyalsreceiver":["Mark `envoyalsreceiver` as an alpha receiver. (#36464)","Add node and log identifier resource attributes (#37800)"],"exporter/splunk_hec":["Do not pass errors from draining the response body to the pipeline as a export failure. (#38118)"],"extension/sumologicextension":["Sanitize the version before it is used to send data to SumoLogic (#37689)"],"failoverconnector":["Refactors the failover logic and changes the retry mechanism to sample data points (#38064)"],"googlecloudexporter":["Updated `opentelemetry-operations-go` to v0.51.0 (#38116)","The new release of `opentelemetry-operations-go` will construct a more accurate default User Agent for its requests","by using a `component.BuildInfo`. This should have no user-facing effect."],"googlecloudpubsubexporter":["Add support for exporting ordered messages to GCP Pub/Sub (#32850)"],"iisreceiver":["Added state and uptime metrics for application pools (#34924)"],"kafkametricsreceiver":["üêû Fix incorrect cluster admin initialization in consumer scraper (#36818)"],"kafkareceiver":["Add error backoff configuration to kafka receiver which allows to wait and retry a failed message when the next consumer returns some errors. (#37009)"],"kafkatopicsobserver":["Adding implementation and tests of the component's logic. (#37665)"],"metricstarttimeprocessor":["add true_reset_point strategy for setting the start timestamp of cumulative points. (#37186)","The implementation is copied from the Prometheus receiver.","add true_reset_point strategy for setting the start timestamp of cumulative points. (#37186)","The implementation is copied from the Prometheus receiver."],"mongodbreceiver":["Added mongodb replica metrics and routing logic for multiple mongodb instances (#37517)"],"netflowreceiver":["Promote the NetFlow Receiver to alpha stability (#38255)"],"opampextension":["Support retrieval of available components via the OpAMP extension. (#37246)"],"opampsupervisor":["Support retrieval of available components via the OpAMP supervisor. (#37247)","Allow configuring additional telemetry settings for the Supervisor's own telemetry (#35582)"],"otelcol_exporter_prometheusremotewrite_consumers":["The total number of consumers that are currently sending data to the remote write endpoint.","(#37912)"],"otelcol_exporter_prometheusremotewrite_sent_batches":["The total number of batches sent to the remote write endpoint."],"pkg/datadog":["StaticAPIKeyCheck available in pkg/datadog to validate Datadog api is key not empty and no invalid characters (#38223)","refactor of existing logic for export"],"pkg/ottl":["Support dynamic indexing of math expressions in maps and slices (#37644)","Add `event_index` to the available paths of the span event context (#35778)","Introduce Weekday() converter function (#38126)","üêû Change the `ottlmetric` context to properly display the `TransformContext` value in debug logs (#38103)","Remove ottl\u003ccontext\u003e.Option in favor of ottl.Option[ottl\u003ccontext\u003e.TransformContext] (#38247)"],"pkg/stanza":["Add entry's timestamp and attributes to errors logs from log transformers processors (#37285)","When a log transformer processor fails to process an log entry it will include entry's timestamp and attributes in its own logs.","With this information the user can more easily identify the log file and find the entry that's having issues.","Add method `ProcessBatch` to `Operator` interface in `pkg/stanza/operator` package to support batch processing. (#35455)","Change signature of `emit.Callback` function in `pkg/stanza/fileconsumer/emit` package to emit multiple tokens. (#35455)"],"processor/k8sattributes":["Move k8sattr.fieldExtractConfigRegex.disallow feature gate to stable (#25128)"],"processor/redaction":["Introduce 'blocked_key_patterns' parameter (#35830)"],"processor/resourcedetection":["Introduce retry logic for failed resource detection. (#34761)","Add k8s.cluster.uid to kubeadm detector (#38207)","Add a feature flag to allow the processor (and collector) to fail if resource detection fails (#37961)","This feature can be enabled via the following feature gate","`--feature-gates=processor.resourcedetection.propagateerrors`"],"prometheusreceiver":["Deprecate metric start time adjustment in the prometheus receiver. It is being replaced by the metricstarttime processor. (#37186)","Start time adjustment is still enabled by default. To disable it, enable the | receiver.prometheusreceiver.RemoveStartTimeAdjustment feature gate.","Make use of creation timestamp from prometheus (#36473)"],"prometheusremotewriteexporter":["Adds additional metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"receiver/kafkametricsreceiver":["Add `refresh_frequency` config to `kafkametricsreceiver`, to configure custom duration for cluster metadata refresh (#37896)","- Helps fine tuning the refresh_frequency, and enables custom cluster metadata refresh intervals","- Default refresh_frequency is set 10 minutes from Sarama library defaults"],"receiver/prometheusremotewrite":["Add value and timestamp handling in the Prometheus Remote Write receiver by using SetDoubleValue and SetTimestamp (#37277)"],"receiver/sqlquery":["Add support for SapASE (sybase) database connections (#36328)"],"receiver/sqlserverreceiver":["Add `server.address` and `server.port` resource attributes to SQL server receiver. (#35183)","The new resource attributes are added to the SQL server receiver to distinguish metrics coming from different SQL server instances."],"receiver/statsd":["Make all types within the config struct public (#38186)","This allows programmatically generating the receiver's config using the module's public types."],"receiver/webhookeventreceiver":["Allow the request body to have multiple log lines using line breaks (#38042)","Adds new `split_logs_at_newline` option that changes the request body to be split into multiple log lines at each newline."],"redactionprocessor":["üêû Fix redaction processor to redact span event attributes (#36633)"],"redisreceiver":["Collect keyspace metrics even if reported dbs are nonsequential (#38135)","If a redis instance has no activity on a db, the db number is not reported in the keyspace metrics.","This change ensures that the keyspace metrics are collected even if the reported dbs have gaps."],"secretsmanagerprovider":["Promote to alpha stability (#38251)"],"server.address":["The address of the SQL server host, disabled by default."],"server.port":["The port of the SQL server host, disabled by default."],"signalfxexporter":["Remove the deprecated configuration option `translation_rules` (#35332)","Please use processors to handle desired metric transformations instead. Find migration guidance in the","[translation rules migration guide](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/signalfxexporter/docs/translation_rules_migration_guide.md)."],"signaltometricsconnector":["`get` OTTL function is removed and expressions are now parsed using `ParseValueExpression` (#38098)"],"stefexporter":["Mark STEF exporter as Alpha (#37759)","üêû Fix incorrectly implemented STEF exporter zstd compression option. (#38088)","STEF exporter now correctly supports zstd compression (observed \u003c1 byte per datapoint for hostmetricsreceiver)."],"telemetrygen":["Update attribute of generated traces from `net.peer.ip` to `net.sock.peer.addr` to bring it in line with new semconv. (#38043)","Support `--service` for all signal types, rather than just traces (#38044)","Add support for `aggregation-temporality` flag in telemetrygen.  Supported values (delta or cumulative) (#38073)"],"testbed":["üêû Fix batch interval calculation to avoid possible division by zero (#38084)"],"windowsservicereceiver":["Adding a wireframe for a new receiver: windowsservicereceiver (#31377)"]},"v0.122.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper"],"attributesprocessor":["Validate metrics configuration parameters before processing (#36077)"],"awscloudwatchencodingextension":["Introduce new encoding extension for AWS CloudWatch Metric Streams (#37870)"],"awscloudwatchlogsexporter, awsemfexporter, awsxrayexporter":["Adding external id support when assuming a role for AWS credentials. (#36725)","AWS IAM Docs https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_common-scenarios_third-party.html#id_roles_third-party_external-id"],"awscloudwatchmetricstreamsencodingextension":["Add unmarshaler for JSON cloudwatch metric stream (#38407)","Add support for opentelemetry1.0 format (#38408)"],"awsecscontainermetricsreceiver":["Upgrading to aws sdk v2 (#38479)"],"awsfirehosereceiver":["üêû Fix cwlogs encoding to not consider CONTROL_MESSAGE records invalid (#38433)","Remove error log when gzip reader type assertion fails due to nil value (#38352)"],"azureblobexporter":["implementation of azure blob exporter (#34319)"],"azuremonitorexporter":["support sending to multiple azure monitor exporters (#34188)","support custom event for logs for azure monitor exporter (#37422)","üêû Fix flushes on each single Span (#37214)"],"azuremonitorreceiver":["Adds filtering by metric and/or aggregation (#37420)"],"bearertokenauthextension":["Add the ability to configure multiple bearer tokens for the same endpoint. (#38148)","Add the ability to configure multiple bearer tokens for the same endpoint. (#38148)"],"cloudflarereceiver":["Add missing telemetry for Cloudflare receiver (#38447)"],"collectdreceiver":["apply fieldalignment to collectd records to reduce memory allocation (#37321)"],"datadogconnector":["Remove `datagodconnector.TracesConfig`, use `datadogconfig.TracesConnectorConfig` instead (#38661)"],"datadogexporter":["Add support for exporting metrics to Datadog using the Datadog serializer. Enable feature gate `exporter.datadogexporter.metricexportserializerclient` to send metrics with the Datadog serializer.","(#37930)","This change adds ability to export metrics to Datadog using the Datadog serializer. Apart from performance improvements, this change also adds support for metrics origins in the Datadog App. It also removes the support for using the host attributes from the first resource the exporter processes."],"datadogsemanticsprocessor":["Add datadogsemanticsprocessor, which transforms OpenTelemetry semantic conventions to Datadog semantic conventions (#35304)"],"dbstorageextension":["Change SQLite driver to non-CGO version (#35280)","New SQLite driver has incompatible set of options and users should carefully review used driver options (if any) on update","Migration guide and available driver options are added to component documentation","Optimize dbstorage.Batch() performance for single-type Operations set call (#38026)"],"deltatocumulative":["removes legacy and clean up existing metrics (#38079)","renamed:"],"elasticsearchexporter":["Dynamically route documents by default unless `{logs,metrics,traces}_index` is non-empty (#38361)","üêû Overhaul in document routing. Deprecate and make `{logs,metrics,traces}_dynamic_index` config no-op. Config validation error on `{logs,metrics,traces}_dynamic_index::enabled` and `{logs,metrics,traces}_index` set at the same time, as users who rely on dynamic index should not set `{logs,metrics,traces}_index`. Remove `elasticsearch.index.{prefix,suffix}` handling. Replace it with `elasticsearch.index` handling that uses attribute value as index directly. Users rely on the previously supported `elasticsearch.index.prefix` and `elasticsearch.index.suffix` should migrate to a transform processor that sets `elasticsearch.index`. Fix a bug where receiver-based routing overwrites data_stream.dataset.","Change default `mapping::mode` config to `otel` (#37241)","The new default, OTel mapping mode, requires Elasticsearch 8.12+. To retain the old behavior, explicitly set `mapping::mode` to `none`.","Add stratified downsampling to the profiles support in the elasticsearch exporter (#37893)","Add config `logs_dynamic_pipeline` to dynamically set the document pipeline to the value of the attribute `elasticsearch.ingest_pipeline`, this only applies to logs. (#37419)"],"examples/demo":["Remove examples/demo (#38488)","The other examples are sufficient, and there exists the more comprehensive OpenTelemetry Demo."],"exporter/kafka":["do not ask for user and password if auth mechanism is set to AWS IAM (#37417)"],"exporter/loadbalancing":["Add support for route with composite keys (#35320)"],"extension/observer/kafakatopicsobserver":["add support for client_id and metadata config (#38411)","The kafkatopicsobserver is now using the common configkafka package,","which brings support for client_id and metadata configuration.","This also means that protocol_version is no longer required, and a","default version will be used like in other Kafka-related components."],"faroexporter":["Add Faro exporter package (#35319)"],"faroreceiver":["Introduce a new receiver to recieve faro data (#19180)"],"filelogreceiver":["Extend container parser log file path pattern to include rotated files. (#35137)"],"geoipprocessor":["Add the `attributes` parameter and consider both `source.address` and `client.address` by default (#37008)"],"githubreceiver":["add GitHub workflow job spans (#38016)","üêû Fixes a bug where Job Step Spans did not have the correct Parent SpanID. (#38647)"],"googlecloudexporter":["Adds a featuregate to support user defined mapping from OTel resources to Monitored Resources (#38102)"],"headersetterextension":["Add support for setting headers based on authentication data (#38441)"],"healthcheckv2extension":["üêû Fix the deadlock in healthcheckv2 extension in case of an error in the healthcheckv2 Start function. (#38269)"],"hostmetricsreceiver":["Added the `system.linux.memory.dirty` and `system.memory.page_size` metrics. (#38672)"],"jaegerreceiver":["Remove dependency on jaeger/cmd/agent (#38655)"],"k8sleaderelector":["allows single instance of the receiver/exporter to be active via kubernetes leader election mechanism (#34460)"],"kafka":["Upgrading to aws sdk v2 (#38478)"],"kafkatopicsobserver":["Remove session_timeout and heartbeat_interval config (#38414)","These attributes are only relevant to Kafka consumers.","Change stability level of kafkatopicsobserver to alpha (#37665)"],"metricstarttimeprocessor":["Decouples the cache from the strategies for adjusting (#38382)","Add the subtract_initial_point strategy skeleton (#37186, #38379)","The subtract_initial_point strategy is not fully implemented","Use a hash of resource attributes to cache start times for metrics (#38286)"],"mongodbreceiver":["Added new mongodb metrics to achieve parity with Telegraf (#37227)"],"mysqlreceiver":["üêû Fixed issue where the system attempted to convert string value '0.0000' (stored as []uint8) to int64 type, which was causing an invalid syntax error. (#38276)"],"opampsupervisor":["add ability to report own traces/logs (#38360)","Support HTTP endpoint for opampsupervisor (#38654)","Add support for configuring the Logs SDK (#38477)","Use OwnLogsConnSettings along with Metrics \u0026 Traces settings to evaluate if configuration changed on message. (#38409)"],"otelcol_deltatocumulative.datapoints.dropped":["to `otelcol_deltatocumulative_datapoints{error=\"...\"}`"],"otelcol_deltatocumulative.datapoints.processed":["to `otelcol_deltatocumulative_datapoints`"],"otelcol_deltatocumulative.max_stale":["to `otelcol_deltatocumulative_max_stale`"],"otelcol_deltatocumulative.streams.limit":["to `otelcol_deltatocumulative_streams_limit`"],"otelcol_deltatocumulative.streams.tracked":["to `otelcol_deltatocumulative_streams_tracked`","removed (already unused):"],"otlpjsonfilereceiver":["üêû Fix nil pointer dereference due to empty token (#38289)"],"pkg/ottl":["üêû Enhance flatten() editor to resolve attribute key conflicts by adding a number suffix to the conflicting keys. (#35793)","Add `IsValidLuhn()` checksum verification function (#37880)","Add ability to compare maps in Boolean Expressions (#38611)","Add `Murmur3Hash`and `Murmur3Hash128` functions to convert the `target` string to Murmur3 hash in hexadecimal string format (#34077)","üêû Fix limitation of map literals within slice literals not being handled correctly (#37405)","Add support for parsing OTTL conditions to the `ottl.ParserCollection`. (#37904)","The `ottl.WithParserCollectionContext` option now requires the converters to be configured using the `ottl.WithStatementConverter` and `ottl.WithConditionConverter` options."],"pkg/pdatatest":["Add ValidateProfile() function to validate pprofile.Profile. (#38452)","Simplify generating profiles for testing by transforming Go structs to profiles. (#38430)"],"pkg/stanza":["Add 'regex_replace' operator (#37443)","Prevent data loss in Stanza-based receivers on ungraceful shutdown of the collector (#35456)","Enable the `stanza.synchronousLogEmitter` feature gate to unlock this feature.","See the [documentation](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/stanza/README.md) for more information."],"pprofreceiver":["Introduce a new receiver to report pprof profiles (#38260)"],"probabilisticsampler":["Logs priority sampling behavior applies only when the priority attribute is present. (#38468)"],"processor/redaction":["Support hashing instead of masking values via 'hash_function' parameter (#35830)"],"prometheusremotewriteexporter":["Adds the `endpoint` label to remote write exporter metrics to help identify the remote write endpoint within the metrics. (#38397)"],"prometheusremotewritereceiver":["Handle `otel_scope_name` and `otel_scope_version` labels in Prometheus Remote Write receiver properly if not present (#37791)","if otel_scope_name or otel_scope_name is missing, use collector‚Äôs version and description according to the otel spec."],"rabbitmqreceiver":["Enhance the RabbitMQ receiver to collect and report node-level metrics (`rabbitmq.node.disk_free`, `rabbitmq.node.fd_used`, `rabbitmq.node.mem_limit`, and `rabbitmq.node.mem_used`). This provides additional observability into the state and resource usage of RabbitMQ nodes. (#36925)"],"receiver/awscloudwatchreceiver":["Upgrading to adopt AWS SDK v2 (#36699)","This change upgrades the AWS SDK used in the CloudWatch receiver from v1 to v2.","It ensures better performance and compatibility with newer AWS features."],"receiver/azuremonitorreceiver":["Add dimensions.enabled and dimensions.overrides which allows to opt out from automatically split by all the dimensions of the resource type (#36611)"],"receiver/prometheus":["üêû Adds the Prometheus API server to more easily debug the Prometheus config, service discovery, and targets. (#32646)","üêû Adds the Prometheus API server to more easily debug the Prometheus config, service discovery, and targets. (#32646)"],"receiver/sqlserverreceiver":["SQL Server receiver now requires a positive serial number for X509 certificates. (#38099)","See known issues in README of `receiver/sqlserverreceiver` for more information."],"receiver/webhookeventreceiver":["Add option to include headers as log attributes (#37815)","Adds new `header_attribute_regex` option. If set, add headers matching supplied regex as log attributes.","üêû Header attributes will be prefixed with `header.`"],"redisstorageextension":["üêû allow redis key prefix to be specified in extension config (#37677)"],"resourceprocessor":["Add support for profile signal type (#359979)"],"routingconnector":["Adds Standard Converter functions to routing connector. (#38282)"],"saphanareceiver":["Promote to alpha stability (#38257)"],"schemaprocessor":["Adds functionality to transform logs (#38615)","- Adds functionality to transform logs using the target schema version.","Adds functionality to transform traces (#38486)","- Adds functionality to transform traces using the target schema version."],"secretsmanagerprovider":["Allow for default values when the selector is empty or the JSON key is not found (#37535)","Uses the same syntax as the `envprovider`"],"sematextexporter":["Advanced metrics implementation (#36465)","basic metrics implementation (#36465)"],"servicegraphconnector":["Change the default value of `metrics_flush_interval` to 60s to avoid excessive metric data point generation with default settings.","(#34843)"],"splunkhecreceiver":["splunk hec receiver accepts metrics with empty string Event field (#38464)"],"sqlqueryreceiver":["Allow users to specify the maximum number of concurrent open connections to DB server using `max_open_conn` config parameter (#36752)"],"sqlserverreceiver":["Add new performance-related metrics (#37884)","Added metrics are:","- sqlserver.database.backup_or_restore.rate","- sqlserver.replica.sent.rate","- sqlserver.replica.received.rate","- sqlserver.database.execution_errors.count","- sqlserver.table.count","- sqlserver.memory.free_list_stalls.rate","- sqlserver.database.free_space_tempdb","- sqlserver.database.full_scans.rate","- sqlserver.index.search.rate","- sqlserver.database.login.rate","- sqlserver.database.logout.rate","- sqlserver.database.deadlock.rate","- sqlserver.database.mirror_write_transaction.rate","- sqlserver.memory.grants_pending.count","- sqlserver.page.lookup.rate","- sqlserver.transaction.delay","- sqlserver.memory.used","- sqlserver.database.version_store_size"],"syslogexporter":["üêû Fixes handling of multiple structured data elements (#33300)","Previous version added all structured data within one bracket pair. According to the RFC each structured data element should have its own bracket pair."],"tcpcheckreceiver":["Introducing new component tcpcheck receiver (#34414)","Promote to alpha stability (#38442)"],"telemetrygen":["Support integer values in `--telemetry-attributes` and `--otlp-attributes` flags (#38392)","- Previously, all attribute values had to be strings wrapped in double quotes.","- Now, unquoted integer values (e.g., `server.port=8000`) are correctly parsed as integers.","- Ensures backward compatibility with existing string and boolean attributes."],"tlscheckreceiver":["Implement TLS Check Receiver for host-based checks (#35842)","Changing configuration scheme to use standard confignet TCP client","Promote to alpha stability (#38460)"]},"v0.123.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper"],"awscloudwatchencodingextension":["Increase component stability to Alpha (#37870)"],"awscloudwatchmetricstreamsencodingextension":["Return errors when extracting the metrics from the record instead of logging them. (#38596)"],"awsecscontainermetrics":["Ensure that the storage.read_bytes and storage.write_bytes metrics include i/o counts from all devices (#38301)"],"awsfirehosereceiver":["üêû Fixes unmarshal error when request is larger than the buffer limit of bufio.Scanner (#38736)"],"awslogsencodingextension":["Add AWS Logs Encoding Extension to support decoding logs produced by AWS services (#38627)","Add support for cloudwatch logs coming from subscription filters. (#38820)"],"awss3exporter":["Implement timeout for S3 exporter (#36264)"],"axw:prometheusremotewritereceiver-fix-tests":["wait for listening port to be closed before shutting down receiver (#38705)"],"azureauthextension":["Add new authenticator extension for Azure. (#38908)","Implement extensionauth.Server and azcore.TokenCredential. (#39012)"],"azuremonitorexporter":["support span links for traces for azure monitor exporter (#35855)"],"bearertokenauthextension":["Allow the header name to be customized in the bearerauthtoken extension (#38793)"],"elasticsearchexporter":["Remove deprecated fields [min|max]_size_items from batch config (#38836)","Enable native frame symbolization for Universal Profiling via the symbolization queue indices. (#38577)","Remove deprecated fields [min|max]_size_items from batch config (#38836)"],"farotranslator":["Add Faro translator package (#19180, #35319)"],"hostmetricsreceiver":["Reduced the cost of retrieving number of threads and parent process ID on Windows. Disable the featuregate `hostmetrics.process.onWindowsUseNewGetProcesses` to fallback to the previous implementation.","(#32947, #38589)","Reduced the CPU cost of collecting the `process.handles` metric on Windows. (#38886)","Instead of using WMI to retrieve the number of opened handles by each process","the scraper now uses the GetProcessHandleCount Win32 API which results in","reduced CPU usage when the metric `process.handles` is enabled."],"include_instrumentation_scope":["A list of instrumentation scope names to include from the traces.","The instrumentation scope name is the name of the instrumentation library that collected the span."],"k8sattributesprocessor":["Remove stable feature gate `k8sattr.rfc3339` (#38810)"],"k8slogreceiver":["Add the skeleton for the new k8slogreceiver in development. (#23339)"],"kafkaexporter":["change default client_id to \"otel-collector\" (#38411)","The exporter now uses the \"configkafka\" package which consolidates","common configuration structures and default values. As a result of","this change, we update the default client_id value to \"otel-collector\".","Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kafkametricsreceiver":["change default client_id to \"otel-collector\", deprecate \"refresh_frequency\" (#38411)","The receiver now uses the \"configkafka\" package which consolidates","common configuration structures and default values. As a result of","this change, we update the default client_id value to \"otel-collector\",","and deprecate \"refresh_frequency\" in favour of \"metadata.refresh_interval\".","Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kafkareceiver":["Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)","make calls to error backoff thread-safe and add logging (#38941)","Disable exposing factory options programmatically on NewFactory. (#38874)"],"kafkatopicsobserverextension":["Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kakfaexporter":["Disable exposing factory options programmatically on NewFactory. (#38874)"],"lokiexporter":["Add lokiexporter component to the contrib distribution (#38993)"],"metricstarttimeprocessor":["Add reset detection for histograms (#38582)"],"opampsupervisor":["Allow controlling Collectors that don't include the nopreceiver and nopexporer (#38809)","This requires Collectors built with Collector API v0.122.0+. The nopreceiver","and nopexporter will continue to be supported for a few releases, after which","only v0.122.0+ will be supported.","Report the reception of an unexpected UID during bootstrapping (#29864)"],"oracledbreceiver":["Add support for additional read/write metrics (#37814)","The following metrics are now available, all disabled by default:","'physical reads direct', 'physical writes', 'physical writes direct',","'physical read io requests' and 'physical write io requests' metrics'"],"pkg/ottl":["Enhance the Decode OTTL function to support all flavors of Base64 (#38854)","üêû Fix the `ottl.ParserCollection` to properly infer the OTTL context when using the `ParseConditions` function. (#38755)"],"pkg/pdatatest":["Change type of attribute values from string to any. (#39006)"],"pkg/stanza":["Add retries when calls to retrieve Windows event via `EvtNext` fail with error RPC_S_INVALID_BOUND (1734). (#38149)","Whenever large events were read in by the Windows event log receiver, via the stanza input operator,","the collector would fail with error RPC_S_INVALID_BOUND (1734). Now the operator tries to workaround","this issue by reducing the number of events read on each attempt."],"prometheusremotewriteexporter":["Remove `export_created_metric` config option (#35003)","Adds logic to convert from the internal OTEL Metrics unit format to Prometheus unit format and emit unit as part of Prometheus metadata. (#29452)","Disallow users from setting compression type other than snappy (#37232)","This change ensures that only the snappy compression type can be set, as required by the Prometheus Remote Write protocol.","Adds logic to convert from the internal OTEL Metrics unit format to Prometheus unit format and emit unit as part of Prometheus metadata. (#29452)"],"prometheusremotewritereceiver":["Add help ref attribute to metric (#37277)","Separate timeseries with the same labels are now translated into the same OTLP metric. (#37791)","timeseries that belongs to the same metric should be added to the same datapoints slice.","Use Created Timestamps to populate Datapoint's StartTimeUnixNano (#37277)"],"rabbitmqreceiver":["Enhance the RabbitMQ receiver to collect and report additional node-level metrics: `rabbitmq.node.disk_free`, `rabbitmq.node.disk_free_limit`, `rabbitmq.node.disk_free_alarm`, `rabbitmq.node.disk_free_details.rate`, `rabbitmq.node.mem_used`, `rabbitmq.node.mem_limit`, `rabbitmq.node.mem_alarm`, `rabbitmq.node.mem_used_details.rate`, `rabbitmq.node.fd_used`, `rabbitmq.node.fd_total`, `rabbitmq.node.fd_used_details.rate`, `rabbitmq.node.sockets_used`, `rabbitmq.node.sockets_total`, `rabbitmq.node.sockets_used_details.rate`, `rabbitmq.node.proc_used`, `rabbitmq.node.proc_total`, `rabbitmq.node.proc_used_details.rate`. These provide additional observability into the state and resource usage of RabbitMQ nodes. (#38976)","Enhance the RabbitMQ receiver to collect and report additional node-level metrics across multiple categories. These include metrics related to memory, file descriptors, sockets, processes, disk, uptime, scheduling, garbage collection (GC), I/O, message store, connections, clustering, configuration, application info, and context switches. This significantly improves visibility into the performance, state, and resource usage of RabbitMQ nodes. (#38997)"],"receiver/azuremonitorreceiver":["multi subscriptions support and automatic discovery (#36612)"],"receiver/sqlserver":["the current metric scraper would report error when parsing value, the value was parsed as int but actually it should be a float (#38823)","Ensure all enabled metrics are emitted (#38839)","Remove warning that `server.address` and `server.port` resource attributes will be enabled (#38831)","There is no intention of enabling these resource attributes by default,","this change is to simply remove the warning.","The `server.address` and `server.port` resource attributes were, and still are,","disabled by default."],"redisstorageextension":["üêû fix missing redis prefix in Batch method (#38877)"],"resourcedetection":["Adding the os.version resource attribute to system resourcedetection processor (#38087)"],"schemaprocessor":["Add functionality to transform metrics for the schema processor.","(#38628)","Adds functionality to transform metrics using the target schema version."],"spanmetricsconnector":["Add instrumentation scope to span metrics connector. (#23662)","This change adds the instrumentation scope to the span metrics connector, which allows users to specify the instrumentation scope for the connector.","Now, the connector has a new configuration option:"],"splunkhecreceiver":["Splunk HEC timestamp accepts nanoseconds, microseconds, milliseconds, and seconds epoch. (#36571)"],"sqlserverreceiver":["support sqlserverreceiver to record every executing query (#36462)","We introduced Query Sample collection in this PR. The scraper will record all the currently","executing queries once (in most case) and report related metrics. With this, user will be","able to see what queries got executed and can combine with the Top Query to get more insights","on troubleshooting and fine tuning.","Support query-level log collection (#36462)","Added top query (most CPU time consumed) collection. The query will gather the queries took most of the time during the last","query interval and report related metrics. The number of queries can be configured. This will enable user to have better","understanding on what is going on with the database. This enhancement empowers users to not only monitor but also actively","manage and optimize their MSSQL database performance based on real usage patterns."],"stefexporter":["Avoid embedding the QueueConfig, avoids potential conflicts (#38887)"],"stefreceiver":["Add structure of new receiver (#38979)"],"tcpcheckreceiver":["üêû Fixed typo in \"Metric configuration\". (#38889)"],"telemetrygen":["üêû Fixes invalid HistogramDataPoint messages generated by telemetrygen. (#39025)","The bucket count and total count are now correct."],"tlscheckreceiver":["Add file-based TLS certificate checks (#38906)","add `tlscheck.x509.san` attribute (#38872)","Subject Alternative Name records are stored as an array on the metric."],"tpmextension":["Add scaffolding for Trusted Platform Module extension. (#38682)"],"workflow":["üêû Remove path parts from component label suffixes (#38527)"]},"v0.124.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper"],"alertmanagerexporter":["Add alert labels based on event attribute list in alermanager exporter (#38063)","Add support for api version in Alertmanager endpoint, default is v2 (#38694)"],"awslogs_encoding":["Add support for VPC flow logs sent to S3 in plain text format. (#38896)"],"awslogsencodingextension":["Rename aws.eni.id attribute to network.interface.name and update README (#39051)","Add support for ECS fields. (#39241)","Improve performance when unmarshalling plain-text VPC flow logs. (#39043)"],"awss3exporter":["üêû Fixes an issue where the AWS S3 Exporter was forcing an ACL to be set, leading to unexpected behavior in S3 bucket permissions (#39346)","Current behavior of the AWS S3 Exporter is to set the ACL to 'private' by default, this removes that behavior and sets no ACL if not specified."],"azureauthextension":["Add implement for extensionauth.HTTPClient and extensionauth.Server interface functions. (#39178)","Use credentials to handle the access token. (#39057)"],"azureblobexporter":["support for append blob in azure blob storage exporter (#39075)","change to alpha for azure blob exporter (#39272)"],"azuremonitorreceiver":["Add subscription name resource attribute (#39029)","Allow to use metrics:getBatch API (Azure Monitor Metrics Data Plane) (#38651)"],"clickhouseexporter":["use a more precise conversion function to create TTL (#38942)"],"connector/spanmetrics":["This change proposes moving the start timestamp (and last seen timestamp) from the resourceMetrics level to the individual metrics level. This will ensure that each metric has its own accurate start and last seen timestamps, regardless of its relationship to other spans. (#35994)"],"datadogexporter":["Deprecate config `host_metadata::first_resource` (#39069)","Opt in to https://docs.datadoghq.com/opentelemetry/mapping/host_metadata/ instead. Its behavior is more predictable and provides more flexibility.","Deprecate feature gate `exporter.datadogexporter.metricexportnativeclient`. Datadog exporter now uses the serializer to send metrics by default. (#39148)","Use feature gate `exporter.datadogexporter.metricexportserializerclient` instead","Move feature gate `exporter.datadogexporter.metricexportserializerclient` to beta. Datadog exporter now uses the serializer to send metrics by default. (#39148)","The serializer has overall better performance and throughput. Note the deprecated `host_metadata::hostname_source::first_resource` config is ignored in the serializer.","üêû Fix a bug on missing APM stats when feature gate `exporter.datadogexporter.metricexportserializerclient` is enabled. (#39148)","üêû Fix a bug on `instrumentation_scope_metadata_as_tags` not being honored when feature gate `exporter.datadogexporter.metricexportserializerclient` is enabled. (#39148)","Remove deprecated exporter configs. The exporter now uses pkg/datadog/config (#39104)","No impact to end users"],"elasticsearchexporter":["üêû Add `telemetry::log_failed_docs_input` and `telemetry::log_failed_docs_input_rate_limit` config to facilitate debugging of failed bulk request items (#39205)","Additionally, log a warning about potentially exposing sensitive data on any enabled `telemetry` config.","Handle edge cases in metrics grouping causing TSDB version_conflict_engine_exception (#38083)","üêû Fix 2 edge cases where metrics grouping were not done correctly:","1. In ecs mode, metric grouping now considers data point attributes overwriting resource attributes.","2. In ecs and otel mode, attributes are now sorted before hashing. Metrics with attributes but in different order are now grouped together."],"extension/headerssetter":["Change `DefaultValue` to use `configopaque.String` type. (#39127)","Change `DefaultValue` to use `configopaque.String` type. (#39127)"],"faroexporter":["Completes the implementation of the Faro exporter. (#35319)"],"farotranslator":["Adds support for user actions in the Faro translator. (#39141)"],"googlecloudlogentryencodingextension":["Add Google Cloud LogEntry Encoding Extension to support decoding logs produced by Google Cloud services (#37531)"],"k8sattributesprocessor":["üêû Add option to configure automatic resource attributes - with annotation prefix (#37114)","Implements [Specify resource attributes using Kubernetes annotations](https://github.com/open-telemetry/semantic-conventions/blob/main/docs/non-normative/k8s-attributes.md#specify-resource-attributes-using-kubernetes-annotations).","If you are using the file log receiver, you can now create the same resource attributes as traces (via OTLP) received","from an application instrumented with the OpenTelemetry Operator -","simply by adding the `extract: { otel_annotations: true }` configuration to the `k8sattributesprocessor` processor.","See the [documentation](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/k8sattributesprocessor/README.md#config-example) for more details."],"k8sclusterreceiver":["Add missing attributes to entities in experimental entity feature (#39038)"],"kafkaexporter":["Deprecate `auth::tls` and introduce `tls` config (#37776)","deprecate `topic` and `encoding`, introduce signal-specific configuration (#35432)","Propagate metadata keys as headers (#39130)","Adds a new config option specifying a list of metadata keys that should be propagated as Kafka message headers.","enable partitioning for all encodings (#39001, #38999)","With the exception of Jaeger encodings which have their own partitioning logic,","partitioning is now independent of the encoding used. This means that all encodings","now support partitioning."],"kafkametricsreceiver":["Deprecate `auth::tls` and introduce `tls` config (#37776)"],"kafkareceiver":["Deprecate `auth::tls` and introduce `tls` config (#37776)","Add signal-specific topic and encoding config, deprecate existing topic/encoding config. (#32735)","Propagate Kafka headers as metadata (#39129)","Allwos the Kafka receiver to propagate Kafka headers as client.Info (metadata). Allowing downstream processors and exporters to access the values via the enriched context."],"kafkatopicsobserverextension":["Deprecate `auth::tls` and introduce `tls` config (#37776)"],"metricstransformprocessor":["üêû Fix aggregation of exponential histograms in metricstransform processor. (#39143)","üêû Fix a panic when the number of populated buckets varies, and fix summing of counts for the Zero bucket."],"opampsupervisor":["add support for including local configuration files (#37886)"],"oracledbreceiver":["Add support for parallel operations metrics (#39215)","The following metrics are now available, all disabled by default:","- 'DDL statements parallelized'","- 'DML statements parallelized'","- 'Parallel operations not downgraded'","- 'Parallel operations downgraded to serial'","- 'Parallel operations downgraded (1-25%)'","- 'Parallel operations downgraded (25-50%)'","- 'Parallel operations downgraded (50-75%)'","- 'Parallel operations downgraded (75-99%)'"],"ottlprofile":["Add OTTL support for profiles. (#36104)"],"pkg/ottl":["üêû Fix OTTL context inference order to prioritize the `scope` context over `resource`. (#39155)","üêû Fix so replace_all_patterns can replace keys using optional function (#32896)","üêû When using the `replace_all_patterns` with `key` and `optional` function on the replacement, the value was being replaced with the key. This change fixes that and now the key is replaced as intended.","Remove experimental transform context option `WithCache` from all OTTL contexts. (#39338)"],"pkg/pdatatest":["Introduce IgnoreExemplars, IgnoreExemplarSlice and ChangeDatapointAttributeValue to CompareMetricsOption (#39004)"],"pkg/stanza":["Use buffer pool for the read buffers to limit allocations\" (#39373)","Remove unnecessary slice allocation to track errors (even nil) (#39367)"],"postgresqlreceiver":["add top query collection to help end user identify which query were executed in the postgresql database. (#39311)"],"processor/transform":["üêû Fix Basic Config style to properly handle `cache` access. (#38926)","The Transform processor now requires only one configuration style per processor's configuration, which means Advanced Config and Basic Config cannot be used together anymore."],"receiver/filelog":["names of files are printed repeatedly to `stdout` #39414"],"receiver/kubeletstats":["support user defined CA path for service account using the configtls option `ca_file` (#39291)","support user defined CA path for service account using the configtls option `ca_file` (#39291)"],"receivercreator":["Add kafkatopicsobserver to the receivercreator configuration (#37665)"],"servicegraphconnector":["Change database_name_attribute to accept a list of values. (#37777)","Metrics for spans with extra dimensions configured are incorrectly being aggregated together despite the dimension values being different. (#39160)","üêû Fix collectClientLatencyMetrics method bug (#39184)"],"signalfxexporter":["Errors will now include the URL that it was trying to access (#39026)"],"signaltometricsconnector":["Allow to configure `optional` attributes which are copied as-is to the output metric. (#38600)"],"sigv4auth":["Added support for authenticating with AssumeRoleWithWebIdentity API (#103107)","Adds the ability to specify the authenticator with an OIDC JWT and AWS IAM role to be assumed","using the AssumeRoleWithWebIdentity API instead of just the AssumeRole API."],"spanmetricsconnector":["Initialise new calls_total metrics at 0 (#38537)"],"splunkenterprisereceiver":["added new attributes to the receiver and modified config (#36330)","disabled default metrics except for splunkHealth to ensure scrapes run on Splunk instance are opt-in (#39068)","üêû Fixes `otelcol_scraper_errored_metric_points` metric, which was not incrementing properly (#38691)"],"splunkhecexporter":["Errors will now include the URL that it was trying to access (#39026)"],"sqlserverreceiver":["update the unit of `db.lock_timeout` attribute from millisecond to second. this attribute is part of the emitted query sample collection. (#39042)","Allow full control of the \"connection string\" via the `datasource` configuration option (#39235)"],"stefreceiver":["Make the receiver initially code complete (#38979)"],"telemetrygen":["üêû Fix flaky test TestTemporalityStartTimes (#39219)","üêû fix startTimestamp when generating cumulative temporality datapoints. (#38232)"],"testbed":["Specify `storage` parameter for filelog receiver in benchmarks (#39217)"]},"v0.124.1":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper"],"receiver/filelog":["Remove printing to console the names of files which are read by File Log receiver (#39414)"]},"v0.125.0":{"awscloudwatchlogsexporter":["Add dynamic log_group_name and log_group_stream naming, based on awsemfexporter (#31382)"],"awscloudwatchreceiver":["Adds option to set storage for AWS CloudWatch receiver (#32231)","- The default value of the `start_from` field in the logs config changed to Unix epoch (`1970-01-01T00:00:00Z`) when not explicitly configured. This may alter the behavior of existing configurations relying on the previous default.","- To maintain previous behavior, explicitly configure `start_from` in the logs configuraiton."],"awslogsencodingextension":["Add support for S3 Access Logs. (#39161)"],"awss3exporter":["üêû add configuration field `resource_attrs_to_s3/s3_prefix` to support mapping s3 bucket prefix to OTel resource attributes (#37858)","üêû If `resource_attrs_to_s3/s3_prefix` is configured, s3 prefix will be determined based on the specified resource attribute and `s3uploader/s3_prefix` will serve as a fallback.","üêû add configuration field `resource_attrs_to_s3/s3_prefix` to support mapping s3 bucket prefix to OTel resource attributes (#37858)","üêû If `resource_attrs_to_s3/s3_prefix` is configured, s3 prefix will be determined based on the specified resource attribute and `s3uploader/s3_prefix` will serve as a fallback."],"azureauthextension":["Update stability to alpha. (#39574)"],"azureblobexporter":["üö®‚ö†Ô∏è Add SerialNumBeforeExtension option to BlobNameFormat in Azure Blob exporter as an option to avoid breaking file extension (#39593)"],"countconnector":["Add profiles support (#39577)"],"datadogexporter":["üêû Fix a race condition in metric serializer exporter where the exporter may not be fully initialized when it receives metrics (#39669)"],"datadogextension":["Introduce framework for Datadog Extension (#39589)"],"deltatocumulative":["üêû fixes misuse of xsync, leading to bad mutex unlock (#39106)"],"dnslookupprocessor":["Add structure of new processor (#34398)"],"elasticsearchexporter":["Add support for include_source_on_error, which configures whether bulk index responses should include source document on error (#39211)","Introduce LRU cache for profiles (#38606)","Add support for extracting mapping mode from a scope attribute. (#39110)"],"filelogreceiver":["üêû Fix frozen receiver when max_concurrent_files is 1 (#39598)"],"geoipprocessor":["Close providers readers on shutdown (#38961)"],"githubreceiver":["add dedicated job queue spans with cicd.pipeline.run.queue.duration attribute (#39081)","üêû Fix span end times for skipped and cancelled workflows (#39020)"],"hostmetricsreceiver":["Possible to enable the process scraper under FreeBSD in the hostmetrics receiver. (#39622)"],"k8sclusterreceiver":["add support for k8s leader election in k8s cluster receiver (#38429)","Allows multiple instances of the k8s cluster receiver to run in a HA mode in a single cluster."],"k8sobjectsreceiver":["Check for K8s API objects existence on receiver startup and not during config validation. (#38803)","Introduces `error_mode`, so users can choose between propagating, ignoring, or silencing missing objects. (#38803)"],"kafkareceiver":["Add support for configuring Kafka consumer rebalance strategy and group instance ID (#39513)","This enhancement introduces two optional settings: group_rebalance_strategy and group_instance_id.","These allow users to override the default Range-based rebalance strategy and optionally provide a static instance ID (as per KIP-345) for cooperative sticky balancing.","This is particularly useful when handling high-cardinality metric workloads, as it reduces rebalance impact, improves cache reuse, and boosts CPU efficiency.","Both settings are optional to maintain full backward compatibility.","Added a new 'topic' attribute to all existing internal consume-claim metrics. (#35336)","Add `max_fetch_wait` config setting (#39360)","This setting allows you to specify the maximum time that the broker will wait for","min_fetch_size bytes of data to be available before sending a response to the client.","Defaults to 250ms.","`name` label will be correctly set in receiver metrics (#39483)"],"kubeletstatsreceiver":["Adds support for collecting Node and Pod network IO/error metrics for all network interfaces (#30196)"],"opampextension":["Introduces a new config field `include_resource_attributes` which allows the extension to copy the agent's resource attributes to the non-identifying attributes in the agent description. (#37487)","Skips loading TLS config for insecure endpoints (#39515)"],"opampsupervisor":["Add support for the opampsupervisor to be able to start with only local config (#38794)","Supervisor will no longer report a config status of \"applying\" if the config has not changed (#39500)","üêû fixes OpAMP Supervisor macOS example config (#39492)"],"pkg":["Improve performance of azure logs translator. (#39340)"],"pkg/golden":["Expose methods to write data to file outside of the scope of a test (#39673)","Expose WriteMetricsToFile to write pmetric data to a file outside of the scope of a test.","Expose WriteTracesToFile to write ptrace data to a file outside of the scope of a test","Expose WriteLogsToFile to write plog data to a file outside of the scope of a test","Expose WriteProfilesToFile to write pprofile data to a file outside of the scope of a test"],"pkg/ottl":["Add `ottl.WithContextInferenceConditions` option to allow configuring extra context inferrer OTTL conditions (#39455)","Add PMapGetSetter interface and StandardPMapGetSetter type. (#39657)"],"processor/k8sattributes":["Change processor/k8sattributes to return error if unset envvar is used for `node_from_env_var` (#39447)","Before this was a valid configuration, but had an unexpected behavior to monitor the entire cluster. | To keep the same behavior simply do not set the `node_from_env_var` value or use empty string."],"prometheusreceiver":["When a histogram metric has both classic and native histogram buckets, keep both, instead of throwing away the native histogram buckets. (#26555)","This was a technical dept from the previous implementation in PR 28663."],"prometheusremotewritereceiver":["Cache `target_info` metrics so it can be used to populate metrics' Resource Attributes. (#37277)","You can read more about resource attributes handling in https://opentelemetry.io/docs/specs/otel/compatibility/prometheus_and_openmetrics/#resource-attributes-1"],"receiver/kubeletstats":["Move receiver.kubeletstats.enableCPUUsageMetrics feature gate to beta (#39487)","Deprecated metrics `container.cpu.utilization`, `k8s.pod.cpu.utilization` and `k8s.node.cpu.utilization` are being replaced","by `container.cpu.usage`, `k8s.pod.cpu.usage` and `k8s.node.cpu.usage`.","To be able to use the deprecated metrics, switch `receiver.kubeletstats.enableCPUUsageMetrics` feature gate to `false`."],"receiver_creator":["üêû Fix kafkametrics receiver instantiation (#39313)"],"receivercreator":["üêû Fix how escaped backticks are handled in receiver creator templates (#39163)"],"resourcedetectionprocessor":["change the EKS cluster identifier and check the cluster version instead of the existence of aws-auth configmap (#39479)","change the EKS cluster identifier and check the cluster version instead of the existence of aws-auth configmap (#39479)"],"sematextexporter":["basic logs implementation (#36465)"],"signaltometricsconnector":["Add profiles support (#39609)","üêû Fix incorrect result for metrics configured with same name but different type (#39442)"],"spanmetricsconnector":["Deprecate the unused configuration `dimensions_cache_size` (#39646)","Deprecated configuration `dimensions_cache_size`, please use `aggregation_cardinality_limit` instead","Add new `aggregation_cardinality_limit` configuration option to limit the number of unique combinations of dimensions that will be tracked for metrics aggregation. (#38990)"],"splunkhecexporter":["Use ObservedTimestamp if Timestamp is empty. (#39221)"],"sqlqueryreceiver":["respect `max_open_conn` configuration for multiple queries (#39270)"],"sqlserverreceiver":["`host.name`, `sqlserver.computer.name`, and `sqlserver.instance.name` are now resource attributes instead of log attributes. We used to report `computer_name` and `instance_name` in the log attributes for top query collection and they are now deprecated. Now we report the three resources attributes in both top query collection and sample query collection. (#39449)","This change is only relevant for logs.","Accept `context_info` with `traceparent` format in query sample collection, setting log record with correct traceId and spanId. (#39539)"],"statsdreceiver":["Add new config to customize socket permissions when transport is set to `unixgram`. (#37807)"],"tcpcheckreceiver":["üêû Fix tcpcheck.error to report as a cumulative value instead of always being 1. (#39234)"],"tcplogreceiver":["Ignore SplitFuncBuilder field to prevent panic during config marshaling (#39474)"],"transformprocessor":["üêû Fix the context inferrer to also take into consideration the global OTTL conditions configuration. (#39455)","üêû Fix the context inferrer to also take into consideration the global OTTL conditions configuration. (#39455)"]},"v0.126.0":{"awsfirehosereceiver":["support all possible quantile values of CloudWatch metrics in addition to quantile 0 (min) and 1 (max) (#39687)"],"azuremonitorexxporter":["support logging exceptions for azuremonitor exporter (#38432)"],"azuremonitorreceiver":["Renamed the `auth` field to `credentials` in the azuremonitorreceiver configuration. (#39738)"],"carbonreceiver":["Support unnamed groups in carbon receiver regex parser (#39137)"],"clickhouseexporter":["clickhouseexporter doesn't set the database name in the dsn of the query that creates the database (#38829)"],"cmd/golden":["Add a docker image for golden (#39662)"],"cmd/opampsupervisor":["üêû Fix slice merging when using local configuration files (#39947)"],"confmap/googlesecretmanager":["Mark the Google Secret Manager provider as alpha stability. (#39665)","Update scheme to use googlesecretsmanager instead of googlesecretmanagerprovider. (#39971)"],"confmap/googlesecretmanagerprovider":["Initial implementation of secrets manager provider. Allows fetch secrets from Google Secrets Manager (#39665)"],"coralogixexporter":["Remove deprecated batcher config for coralogixexporter, use sending_queue::batch (#39960)"],"datadogexporter":["Enable instrumentation_scope_metadata_as_tags by default in datadogexporter. Scope attributes are now added as tags to metrics. (#39767)","If you have too many unique values for instrumentation scope attributes, this may cause cardinality issues.","If this is a concern, you can disable this by setting `datadog.metrics.instrumentation_scope_metadata_as_tags` to `false`.","üêû Fixes a memory leak in the Datadog exporter caused by an uninitialized logger. (#39959)"],"datadogreceiver":["Support 128 bits TraceIDs coming from Datadog (#36926)","üêû üö®‚ö†Ô∏è This fix is released behind a featuregate so as to not be a breaking change for users. To enable it, enable","`receiver.datadogreceiver.Enable128BitTraceID`. The feature uses an LRU cache that will keep the last 100 trace ids by","default. This can be configured via `receivers.datadog.trace_id_cache_size`."],"dockerstatsreceiver":["Returns Docker client options, using the DOCKER_HOST environment variable if no endpoint is configured. (#35779)","- Previously, the receiver required explicit configuration of the endpoint.","- This change allows automatic detection of DOCKER_HOST, improving flexibility in different environments."],"elasticsearchexporter":["Report Elasticsearch request success / failure via componentstatus (#39562)"],"eventlogreceiver":["add raw XML query filtering option (#38517)","add raw XML query filtering option (#38517)"],"faroreceiver":["Completes the implementation of the Faro receiver. (#19180)"],"fileconsumer":["Support \"`compression:auto`\" which automatically detects file compression type and ingests data. Currently, only gzip compressed files are auto detected. This allows for mix of compressed and uncompressed files to be ingested with the same filelogreceiver. (#37772)"],"fluentforwardreceiver":["Unexport AckResponse (#39831)"],"githubreceiver":["üêû fix queue span lengths caused by GitHub event timestamp bug (#39824)","GitHub events from skipped jobs sometimes have the createdAt timestamp to be","AFTER the startedAt timestamp. This causes the created span to having a time","of some crazy long time, while the duration attribute is negative. This change","accounts for that inconsistent behavior from GitHub and adds the corresponding","tests."],"golden":["Add a new CLI, golden, to run comparison of expected payloads over OTLP. (#39662)","You can run golden with `--otlp-endpoint localhost:4317 --expected expected.yaml --write-expected --timeout 1m`"],"googlecloudexporter":["Updated the exporter.googlecloud.CustomMonitoredResources featuregate to support user defined mapping from OTel resources to Monitored Resources for logging (#40001)"],"googlecloudlogentryencodingextension":["Update stability to alpha. (#37531)"],"googlecloudpubsubreceiver":["Add `ignore_encoding_error` configuration to ignore decoding failures from the configured encoder (#38164)","Introduce a setting to ignore errors when the configured encoder. It's advised to set this to `true` when using","a custom encoder, and use the new `receiver.googlecloudpubsub.encoding_error` metric to monitor the number of errors.","Ignoring the error will cause the receiver to drop the message.","Add deprecation warning for the build-in encoders (#39371)","The build-in encoders `cloud_logging` and `raw_text` both have encoding extension alternatives and will be removed","in version v0.132.0 of the collector."],"k8sobjectsreceiver":["k8sobject receiver support leader election (#39054)"],"kafkaexporter":["Add compression level in kafka producer. (#39772)","Make Sarama's ConfigurationError as permanent to prevent retries (#38604)","üêû fix the default topic configuration, and default message partitioning (#39810, #39816)"],"kafkareceiver":["üêû Fix support for built-in text encodings with hyphens in the encoding name (#39793)"],"metricstarttimeprocessor":["Implementation of the subtractinitial strategy (#38379)"],"mongodbatlasreceiver":["Add support for setting custom base URL for the MongoDB Atlas API (#39345)"],"netflowreceiver":["Add `send_raw` option to send logs as a raw string in the log body instead of parsed into attributes. (#38920)"],"oidcauthextension":["Add ignore_audience config option for ignoring oidc audience (#36568)","go-oidc SkipClientIDCheck is set based on config ignore_audience"],"opampsupervisor":["Remnove `agent.health_check_port`. (#39908)","The opampsupervisor no longer starts the collector with a default health check extension.","Update supervisor to forward the agent's ComponentHealth message to the server whenever it is received. (#39890)"],"pkg":["Remove the fields from category AzureCdnAccessLog from the body log record and place them as log record attributes. (#39811)","üêû Fix empty resource attributes in the azure logs translator (#39571)"],"pkg/datadog":["Switch feature gate datadog.EnableOperationAndResourceNameV2 to beta. This gate affects exporter/datadog and connector/datadog. It modifies the logic for computing operation names from OTLP spans to produce shorter, more readable names and improve alignment with OpenTelemetry specifications. (#39895)","Please see the migration guide for more details. https://docs.datadoghq.com/opentelemetry/migrate/migrate_operation_names/?tab=opentelemetrycollector"],"pkg/ottl":["üêû Add support for HasPrefix and HasSuffix functions (#39825)","Add the OTTL function ProfileID() (#39587)","OTTL is now officially considered Beta stability (#39910)"],"pkg/stanza/fileconsumer":["Mute new reader log when the noStateTracker is used (#39855)"],"pkg/winperfcounters":["Add methods to scrape raw values from Windows performance counters. (#39835)"],"postgresqlreceiver":["Reduce component footprint by removing the loading of unnecessary SQL drivers (#39918)","Custom builds that are using the postgresql receiver and no other SQL related receivers","will see a reduction in the output binary size. A similar effect is expected also for","the sqlserverreceiver.","we introduced the top query collection to postgresql receiver. this will collect the queries from `pg_stat_statements` and report the related metrics. this will help the end user to identify which queries are most executed, and resources most used. (#39573)"],"processor/metricstarttime":["Upgrade the stability to `Alpha` (#39857)"],"processor/redaction":["Apply redaction to log.body (#37239)"],"processor/tailsampling":["The invert decisions (InvertSampled and InvertNotSampled) have been deprecated, please make use of drop policy to explicitly not sample select traces. (#39833)","New policy type to explicitly drop traces regardless of other policy decisions. (#39668)"],"processor/transform":["The transformprocessor is now officially considered Beta stability (#39928)"],"prometheusreceiver":["Add 'fallback_scrape_protocol' to entries obtained through Target Allocator, unless already defined. (#39672)","This applies the same configuration change that is already applied on static configuration.","Convert ms to s when setting start time on the metric (#39912)"],"prometheusremotewriteexporter":["Add `exporter.prometheusremotewritexporter.enableSendingRW2` feature gate and configuration to the exporter to send Prometheus remote write 2.0 version. (#33661)","WARNING! PRW 2.0 support for the exporter is still under development and not ready for usage.","Add `exporter.prometheusremotewritexporter.enableSendingRW2` feature gate and configuration to the exporter to send Prometheus remote write 2.0 version. (#33661)","WARNING! PRW 2.0 support for the exporter is still under development and not ready for usage."],"receiver/hostmetricsreceiver":["Migrated `hostmetricsreceiver` to use `pkg/winperfcounters` when retrieving Windows performance counters. (#38858)"],"receiver/k8scluster":["Add node name to pod metadata (#37454)"],"receiver/ntp":["Move ntpreceiver to beta stability (#39897)"],"receiver/prometheus":["Upgrade `receiver.prometheusreceiver.RemoveLegacyResourceAttributes` feature gate to `beta` stability (enabled by default) (#32814)","Disable the `receiver.prometheusreceiver.RemoveLegacyResourceAttributes` feature gate to restore previous behavior. This feature gate will be removed in a future release.","The feature gate is used to replace the following legacy resource attributes:","`net.host.name` -\u003e `server.address`","`net.host.port` -\u003e `server.port`","`http.scheme` -\u003e `url.scheme`"],"receiver/sqlserver":["Properly parse numbers stored in scientific notation to integers (#39124)"],"signaltometricsconnector":["üêû Fix same metric name, unit, and type with different description ignoring description (#39736)"],"spanmetricsconnector":["Separate Dimensions for calls and duration metrics (#36805)","Add two new fields to the settings: `histogram.dimensions` and `calls_dimensions`.","Use them to add independent dimensions to the duration and calls metrics."],"splunkenterprisereceiver":["adds `splunk.indexer.rollingrestart.status` metric (#39023)","Added a new `splunk.search.initiation`, `splunk.search.duration`, `splunk.search.status`, and `splunk.search.success` metrics. (#39566)","Unexport InfoEntry and InfoContent (#39830)"],"sqlserverreceiver":["Update event properties (#39868)","This change only applies to top query events and query sample events:","* Update event name of top query event from `top query` to `db.server.top_query`","* Update event name of query sample event from `query sample` to `db.server.query_sample`","* Remove body of query sample event","* Rename `sqlserver.username` to `user.name` in query sample event"],"stefexporter":["Implement async exporting (#39958)"],"tailsamplingprocessor":["üêû Fix the misleading decision timer latency metric (#38502)"]},"v0.127.0":{"awsfirehosereceiver":["Parse encoding as a component ID, not just type, allowing for named encodings. (#39808)","üêû Fix decoding for OTLP-formatted metrics. (#39462)","OTLP-formatted metrics were not being decoded correctly until now."],"awss3exporter":["Add the retry mode, max attempts and max backoff to the settings (#36264)"],"awss3receiver":["Add SQS support to the awss3receiver component (#36315)"],"azuremonitorreceiver":["Add support for azureauthextension as a token provider for azuremonitorreceiver. (#39048)","use ``metrics`` aggregation filter when ``use_batch_api: true`` (#40079)"],"cloudfoundryreceiver":["Unexport EnvelopeStreamFactory and UAATokenProvider (#40270)"],"cmd/opampsupervisor":["üêû Fix race condition where the Supervisor could report the wrong health status (#40207)"],"coralogixexporter":["Added a mechanism to drop telemetry data when rate limit, quota or authorization errors are encountered. (#40074)","Added a new configuration option to the Coralogix exporter to enable a rate limiter mechanism.","The rate limiter mechanism is disabled by default. It can be configured using the following configuration options:","rate_limiter:","enabled: true","threshold: 10","duration: 1m","Where:","Print metrics causing the partial success response from the backend. (#40199)"],"datadogreceiver":["Address semantic conventions noncompliance and add support for http/db (#36924)","* Bump semantic conventions to v1.30.0","* Add support for http and db attributes","* Use datadog's base service as service.name when available","* Set `server.address` on client/producer/consumer spans","* Properly name postgresql/redis/servlet/spring spans"],"datdogexporter, datadogconnector":["Graduate the datadog.EnableReceiveResourceSpansV2 feature gate to beta. (#40083)"],"duration":["is the duration of the rate limit window (default: 1 minute).","Note the number of errors is cumulative and reset after the duration has passed or a successful request is made."],"elasticsearchexporter":["üêû Fix panic when encoding non-string scope attributes. (#37701)"],"enabled":["is a boolean flag to enable the rate limiter mechanism."],"exporter/datadog":["Correctly treat summary counts as cumulative monotonic sums instead of cumulative non-monotonic sums (#40176)"],"faroreceiver, faroexporter":["Stability level changed from development to alpha. (#40000)"],"filelogreceiver":["Introduce `utf8-raw` encoding to avoid replacing invalid bytes with \\uFFFD when reading UTF-8 input. (#39653)"],"fluentforwardreceiver":["Unexport all structs in fluentforward receiver. (#40108)"],"gitlabreceiver":["add GitLab pipeline tracing functionality (#35207)"],"golden":["Return an error on timeout without receiving any data (#40076)"],"googlecloudexporter":["Update the MapMonitoredResource mapping when the exporter.googlecloud.CustomMonitoredResources feature flag is used (#40186)"],"internal/splunk":["Treat HTTP 403 Forbidden as a permanent error. (#39037)","- Splunk responses with a 403 typically indicate an authentication or authorization issue that is not likely to be resolved by retrying.","- This change ensures that the error is treated as permanent to avoid unnecessary retries.","- This change is applicable to `splunkhecexporter`, `signalfxexporter`."],"k8sattributesprocessor":["Add option to configure automatic service resource attributes (#37114)","Implements [Service Attributes](https://opentelemetry.io/docs/specs/semconv/non-normative/k8s-attributes/#service-attributes).","If you are using the file log receiver, you can now create the same resource attributes as traces (via OTLP) received","from an application instrumented with the OpenTelemetry Operator -","simply by adding the","`extract: { metadata: [\"service.namespace\", \"service.name\", \"service.version\", \"service.instance.id\"] }`","configuration to the `k8sattributesprocessor` processor.","See the [documentation](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/k8sattributesprocessor/README.md#configuring-recommended-resource-attributes) for more details."],"k8sobserver":["Add namespaces setting for scoping k8s client to specific namespaces (#39677)","Unexport RunningContainer (#40228)"],"kafkaexporter":["Allow kafka exporter to produce to topics based on metadata key values (#39208)","Allows the Kafka exporter to dynamically use a signal's export target topic based","on the value of the pipeline's metadata, allowing dynamic signal routing."],"kafkareceiver, kafkaexporter":["Add support for named encoding extensions in kafkareceiver and kafkaexporter (#40142)"],"libhoneyreceiver":["Handle paths without slashes at the end by adding them (#40070)"],"lokireceiver":["Add support for structured metadata in lokireceiver (#40095)"],"netflowreceiver":["Unexport OtelLogsProducerWrapper (#40269)"],"opampsupervisor":["üêû Fix bug in order of configuration composition and server start (#39949)","First start the Supervisor's OpAMP server at a random port, then","compose the configuration for the agent with that port.","If there is a remote config, the supervisor now reports the remote config as applied and the correct hash on startup. (#40233)"],"otelcol_exporter_prometheusremotewrite_wal_writes":["The total number of WAL writes."],"otelcol_exporter_prometheusremotewrite_wal_writes_failures":["The total number of WAL write failures.","(#39556)"],"pkg/experimentalmetricmetadata":["Add missing otel.entity.type field to the delete events (#40279)"],"postgresqlreceiver":["üêû fix too many top query got reported. top query should only report those queries were executed during the query interval (#39942)","Unexport Item (#40265)"],"processor/tailsampling":["Add first policy match decision to tailsampling processor (#36795)"],"prometheusremotewriteexporter":["Adds wal metrics to the Prometheus Remote WRite Exporter. The new metrics are:"],"receiver/k8sclusterreceiver":["Added new resource attributes `k8s.hpa.scaletargetref.kind`, `k8s.hpa.scaletargetref.name`, and `k8s.hpa.scaletargetref.apiversion` to the `k8s.hpa` resource.  These attributes are disabled by default. (#38768)"],"receiver/netflow":["Adds additional common EtherTypes for `network.type`. (#40219)"],"receiver/sqlserver":["Add new metric for disk IO rate on a resource pool (#39977)","The new metric `sqlserver.resource_pool.disk.operations` is disabled by default.","Add new metric `sqlserver.lock.wait.count` (#39892)","This metric is disabled by default.","Add new metric to track OS wait times (#39977)","The new metric is named `sqlserver.os.wait.duration` and disabled by default.","Enable `sqlserver.page.life_expectancy` metric for all configurations (#39940)","This metric was originally only available when running on Windows, but is","now available for all configuration options, including direct connection.","Since this metric is enabled by default, users who have direct connection","configured will now have this metric emitted by default."],"receiver/vcenter":["unexport struct DatacenterStats (#40109)"],"signaltometricsconnector":["Add support for parsing gauge metrics from any signal types (#37093)"],"spanmetricsconnector":["üêû Fix bug causing span metrics calls count to be always 0 when using delta temporality (#40139)"],"sqlserverreceiver":["Zero values in delta attributes will be reported in top query collection. (#40041)","This change includes the following attributes:","- sqlserver.total_worker_time","- sqlserver.execution_count","- sqlserver.total_logical_reads","- sqlserver.total_logical_writes","- sqlserver.total_physical_reads","- sqlserver.total_rows","- sqlserver.total_grant_kb","Add configuration option `top_query_collection.collection_interval` for top query collection to make the collection less frequent. (#40002)","- This change only applies to the `top_query_collection` feature.","- The default value is `60s`","Use generated structured event functions in mdatagen (#40041)"],"stefreceiver":["Update stability of STEF receiver to Alpha. (#40062)","Correctly handle Shutdown request (#40082)","The receiver now correctly Shutdown even if there are active connections"],"stefreceiver, stefexporter":["üö®‚ö†Ô∏è Updated to STEF 0.0.6, which had a breaking change in the format from 0.0.5 (#40058)"],"sumologicexporter":["Change how infinity bounds are represented in histogram buckets so that the Sumologic backend can properly handle them. (#39904)"],"tcpcheckreceiver":["Unexport TCPConnectionState (#40271)"],"threshold":["is the number of errors to trigger the rate limiter mechanism (default: 10)."],"wavefrontreceiver":["Unexport WavefrontParser struct (#40105)"]},"v0.128.0":{"azureauthextension":["üêû Fix the scope retrieval issue for the client authentication of AzureAuthExtension. (#40032)"],"azureblobexporter":["Delete type alias Container (#40268)"],"coralogixexporter":["üêû Fix Authorization header not being set in metadata. (#40330)"],"countconnector":["Upgrade profiles proto to 1.7.0 (#40285)"],"datadogexporter":["Add support for host aliasing via resource attribute `datadog.host.aliases` (#40409)","üêû Fix automatic intial point dropping when converting cumulative monotonic sum metrics (#40426)","The exporter turns OpenTelemetry's cumulative monotonic sum metrics into Datadog's (delta) count","metrics by computing the difference between successive points. The logic to determine whether the","first received value should be ignored or passed through as a delta was faulty, leading to large","spikes in metrics when the Collector restarts but the source application does not, which should","üêû now be fixed.","Send host metadata on new hosts. (#40409)","config `tls::insecure_skip_verify` is now taken into account in metrics path. (#40507, #40085)"],"elasticsearchexporter":["Upgrade profiles proto to 1.7.0 (#40285)","üêû Fix a bug where unset span status code was being serialized as 'Unset' instead of being ignored (#39498)"],"exporter/datadog":["Adds `hostname_detection_timeout` configuration option for Datadog Exporter and sets default to 25 seconds. (#40373, #40377)","üêû - This fixes a bug on Kubernetes daemonset deployments where collector hangs/reboots on startup.","- This configuration option already existed but was not available for customer configuration."],"filelogreceiver":["The fingerprint of gzip compressed files is created by decompressing and reading the first `fingerprint_size` bytes. (#37772)","This feature can be enabled via the following feature gate `--feature-gates=filelog.decompressFingerprint`. This can cause existing gzip files to be re-ingested because of changes in how fingerprints are computed."],"golden":["Upgrade profiles proto to 1.7.0 (#40285)"],"headersetterextension":["Unexport Header (#40542)"],"intervalprocessor":["Unexport Processor (#40273)"],"k8slogreceiver":["Unexport DockerConfig and CRIConfig (#40274)"],"kafkaexporter":["Add an Alpha feature gate `exporter.kafkaexporter.UseFranzGoClient` to use franz-go in the Kafka exporter for better performance. (#40364)","This change adds an experimental opt-in support to use the franz-go client in the Kafka exporter.","The franz-go client is a high-performance Kafka client that can improve the performance of the Kafka exporter.","The default client remains sarama, which is used by the Kafka receiver and other components.","Enable the franz-go client by setting the `exporter.kafkaexporter.UseFranzGo` feature gate.","üêû Fix Snappy compression codec support for the Kafka exporter (#40288)"],"kafkareceiver":["enforce a backoff mechanism on non-permanent errors, such as when the queue is full (#39580)","Don't restart the Kafka consumer on failed errors when message marking is enabled for them. (#39909)","The Kafka consumer will now only be restarted due to failed messages if","both `message_marking::after` is true, and `message_marking::on_error` is false.","In this case the message will not be marked as consumed, and the consumer will","restart with an error."],"libhoneyreceiver":["üêû Fix response encoding for msgpack (#40413)","The libhoneyreceiver now correctly encodes the response for msgpack.","üêû This fixes the issue where the response was not being encoded correctly."],"opampsupervisor":["Update passthrough logging to use Error for stderr pipe. (#40491)","Supervisor now persists the remote config status to disk. This allows more accurate reporting of the remote config status. Also reports healthy status when not running the agent due to empty config (previous performance optimization). (#40467)"],"otelarrowexporter":["Configure the combined queue-batch facility, modifies the defaults `sending_queue` settings. (#40211)","Removes experimental batcher config, which was never recommended, and documents how to replace the formerly recommended concurrentbatchprocessor configuration."],"otelcol_exporter_prometheusremotewrite_wal_reads":["The total number of WAL reads."],"otelcol_exporter_prometheusremotewrite_wal_reads_failures":["The total number of WAL reads failures.","(#39556)"],"ottl":["Upgrade profiles proto to 1.7.0 (#40285)"],"pkg":["Remove the fields from category FrontDoorWebApplicationFirewallLog from the body log record and place them as log record attributes. (#39993)"],"pkg/ottl":["Remove access to the profile lookup tables (#40227)","the mapping_table, location_table, function_table, attribute_table, attribute_units, link_table, string_stable have been moved to a root dictionary attribute and are not part of profile anymore.","Add `event_name` path to the OTTL Log context (#40230)","Add metric.metadata as a valid OTTL path (#40214)","Add ability to compare slices/pcommon.Slice in OTTL Boolean Expressions (#40370)","Improve time parsing error messages by including the ctime directive instead of the go time layout (#35176)","Add `ottl.ValueComparator` API to allow comparing values using the OTTL comparison rules (#40370)","This change introduces a new API (`ottl.NewValueComparator`) that allows users to","compare raw values using the OTTL comparison rules. It is useful for implementing","custom logic in OTTL functions where value comparison and consistency is desired."],"pkg/translator/prometheusremotewrite":["üêû Fix bug where metric metadata was sent with incorrect metric name if configuration includes 'namespace' (#39826)","üêû Fix bug where metric metadata was sent with incorrect metric name if configuration includes 'namespace' (#39826)"],"postgresqlreceiver":["add the ability to obtain query plan for top n queries (#39995)"],"processor/k8sattributes":["Support extracting labels and annotations from k8s Deployments (#37957)"],"processor/resourcedetection":["add `host.interface` resource attribute to `system` detector (#39419)"],"prometheusexporter":["Expose Scope Name, Version, Schema URL, and Attributes as labels. (#40004)","This work is done to comply with https://github.com/open-telemetry/opentelemetry-specification/issues/4223."],"prometheusrecevier":["Add feature gate to allow enabling and disabling the Prometheus created timestamp zero ingestion feature flag. (#40245)"],"prometheusremoteexporter":["Delete unused struct `CreatedMetric` (#40266)"],"prometheusremotewriteexporter":["Adds wal metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"prometheusremotewritereceiver":["Improve observability about data ingestion (#37277)","Add LRU cache for resource metrics in prometheusremotewritereceiver. (#37277)","To avoid memory leaks, the receiver will now use a LRU cache to store resource metrics. The less recently used resource metrics are evicted from the cache given a maximum size. For now the maximum size is 1000.","Add a count of all successfully written samples when elements were processed. (#37277)"],"receiver/cloudflare":["Enable the receiver to consume fields from Cloudflare containing a map (#40318)"],"receiver/faro":["Ensure that the Faro receiver waits for http server shutdown to complete before exiting. (#40331)"],"receiver/hostmetrics":["Mark `hostmetrics.process.onWindowsUseNewGetProcesses` feature gate as stable (#32947)"],"receiver/k8s_cluster":["Add onDelete handler to emit the experimental entity delete events (#40278)"],"receivercreator":["Add an option to set default annotations to override the discovery logic (#37436)"],"redisstorageextension":["Add TLS support (#40185)","TLS is now enabled by default. To disable TLS, use:","tls:","insecure: true"],"resourcedetectionprocessor":["Add the option to retrieve resource attributes from the K8s API server and EC2 api when the IMDS service is not available. (#39503)","Add additional OS properties to resource detection: `os.build.id` and `os.name` (#39941)"],"several":["Rename fields named `TLSSetting` to `TLS` for consistency with the core repository. (#40452)","This change affects the following components:","- exporter/datadogexporter","- exporter/signalfxexporter","- exporter/syslogexporter","- extension/awsproxy","- extension/oauth2clientauthextension","- extension/opampextension","- processor/resourcedetectionprocessor/internal/openshift","- receiver/awsfirehosereceiver","- receiver/cloudfoundryreceiver","- receiver/prometheusreceiver/targetallocator"],"signalfxexporter":["üêû Fix invalid and missing host metadata when the collector is deployed in a containerized environment and | the host root filesystem is mounted to non-standard location. (#40218)","Use the newly introduced `root_path` configuration option to specify the root path of the host filesystem.| This is required when the host root filesystem is mounted to a non-standard location."],"signaltometricsconnector":["Upgrade profiles proto to 1.7.0 (#40285)"],"splunkenterprisereceiver":["Add search artifact size metrics to the existing search dispatch collection, which uses the /services/server/status/dispatch-artifacts API. (#40383)","Unexport Info (#40267)"],"sqlserverreceiver":["Rename flags for enabling top query collection and query sample collection. (#40416)","Renamed `top_query_collection.enabled` to `events.\"db.server.top_query\".enabled` in top query collection.","Renamed `query_sample_collection.enabled` to `events.\"db.server.query_sample\".enabled` in query sample collection.","add one attribute for performance_counter.object_name to deduplicate data (#40359)","üêû Fix incorrect attribute name for database system name in the top query event collection. (#40361)","Rename `db.server.name` to `db.system.name` in SQL Server receiver to align with semantic conventions.","üêû Fix scraping failure on SQL obfuscation on top query collection and query sample collection. (#40347)","Collector will now report original SQL statement if the obfuscation is failed."],"sumologicextension":["Be more tolerant of process discovery failures. (#40252)","Discovered after a gopsutil update"],"tlscheckreceiver":["Do not crash on target validation \u0026 implement better scrape errors (#40341)"],"windowseventlogreceiver":["Add a boolean option to include the `log.record.original` attribute of each event record. (#40365)"]},"v0.129.0":{"alibabacloudlogserviceexporter":["Unexport KeyValues,KeyValue structs (#40644)"],"awslogsencodingextension":["Add support for AWS WAF logs. (#39407)","üêû Fix bug in which concurrent go routines can end up using the same gzip reader (#40838)"],"azuredataexplorerexporter":["Unexport Status, Link, AdxTrace, AdxLog, Event, AdxMetric (#40647)"],"azureeventhubreceiver":["Unexport AzureResourceLogsEventUnmarshaler (#40661)"],"azuremonitorexporter":["Unexport MessagingAttributes,ExceptionAttributes,DatabaseAttributes,RPCAttributes,HTTPAttributes,ConnectionVars,NetworkAttributes (#40648)"],"azuremonitorreceiver":["Add support for azureauth when batch api is enabled. (#40872)","üêû fix unnecessarily exported struct (#40662)","Added new config that sets the number of unique resource IDs to fetch per Batch API call (#40112)"],"bearertokenauthextension":["Unexport BearerAuthRoundTripper,PerRPCAuth,BearerTokenAuth (#40652)"],"clickhouseexporter":["Support JSON type for logs and traces (#40547)","Added a feature gate to enable a JSON pipeline for logs and traces.","This feature gate ID is `clickhouse.json`, and will automatically use the new","DDL and column type on supported server versions.","You may also need to add `enable_json_type=1` to your connection","settings, depending on the server version."],"collectdreceiver":["Ensure the receiver closes its port when shutting down quickly after starting. (#40406)","Note that due to the nature of the timing issue this is extremely unlikely to affect a real user,","and really only likely to occur in unit tests."],"coralogixexporter":["üêû Fix rate limit error count reset (#40811)","The rate limit error count was not reset just after a successful request.","Also, we are printing now when the rate limit is triggered."],"datadogconnector":["üêû Use proper syncronization to fix a collector panic when an error occurs (#40845)"],"datadogexporter":["Graduate exporter.datadogexporter.UseLogsAgentExporter feature gate to stable (#40925)","Config `logs::dump_payloads` is no longer supported now that the UseLogsAgentExporter feature gate is stable. (#40925)","Improve accuracy of conversion for single-point exponential histograms (#40867)"],"datadogreceiver":["Implement the `/intake` endpoint (#39787)","Unexport `Endpoint` struct (#40663)"],"elasticsearchexporter":["Add better ECS mapping for traces when using ECS mapping mode. Previously, traces were incorrectly processed by the generic encoder instead of applying ECS-compliant field mappings. (#40807)"],"elasticsearchreceiver":["Add support for ES version 9 (#39929)"],"exporter/datadog":["Adds support for `proxy_url` when using the logs agent exporter (#40640)"],"extension/datadog":["Releases Datadog Extension in alpha. (#39589, #40715)","The Datadog Extension is now released in alpha status.","Using the configuration settings listed in the README will allow collectors to report configuration data to Datadog backend.","If enabled, collector configuration and build info will be viewable in Datadog Infrastructure Monitoring, specifically in Host List and Resource Catalog."],"googleclientauthextension":["Promote the googleclientauth extension to beta. (#31412)"],"googlecloudexporter":["Remove the stable exporter.googlecloud.OTLPDirect featuregate (#17192)","It was supposed to be removed in v0.69."],"googlecloudmonitoringreceiver":["Add support for converting Google Cloud monitoring delta distribution metrics to OpenTelemetry histograms. (#39600)"],"hostmetricsreceiver":["Skeleton nfsscraper -- adds Linux nfs and nfsd metrics from /proc (#39978)","üêû Minor fix to the handling of conntrack errors (#40175)","Skeleton nfsscraper -- adds Linux nfs and nfsd metrics from /proc (#39978)"],"k8sattributesprocessor":["Make sure getIdentifiersFromAssoc() can handle container.id (#40745)"],"kafka":["remove broken SASL/AWS_MSK_IAM auth mechanism from Kafka components (#40554)","üêû Fixes a defect introduced in #39115 that prevents MSK IAM auth from working (#40720)","IAM auth requires TLS, but the config translation was enabling SASL when it intended to enable TLS"],"kafkaexporter":["Improve kafkaexporter internal metrics telemetry (#40815)"],"kafkareceiver":["Improve kafkareceiver internal metrics telemetry (#40816)","This change adds the following internal telemetry metrics to the receiver:","- kafka_broker_connects","- kafka_broker_closed","- kafka_broker_throttling_duration","- kafka_receiver_bytes","- kafka_receiver_bytes_uncompressed","- kafka_receiver_latency","In addition it removes explicit component \"name\" metrics attribute which should be enabled with \"telemetry.newPipelineTelemetry\"","collector feature gate instead. And changes \"partition\" metrics attribute to more direct \"int64\" type instead of \"string\".","Add an Alpha feature gate `receiver.kafkareceiver.UseFranzGo` to use franz-go in the Kafka receiver for better performance. (#40628)","Adds an experimental opt-in support to use the franz-go client in the Kafka receiver.","The franz-go client is a high-performance Kafka client that can improve the performance of the Kafka receiver.","The default client remains sarama, which is used by the Kafka exporter and other components.","Enable the franz-go client by setting the `receiver.kafkareceiver.UseFranzGo` feature gate.","Refactor Sarama client to pave the way for franz-go `featuregate` opt-in (#40628)","Create the consumer group asynchronously, and report component status (#40516)","This change ensures that the collector can start up if the Kafka cluster is not available","or the consumer group creation fails due to some other transient, retryable error.","We also now report the component status to indicate if and when the consumer group has been","successfully created, and whether the receiver is ready to consume messages. This can be","observed via the healthcheckv2 extension.","Protect partition lost/revoke callback against unassigned groups (#40920)"],"kineticaexporter":["unexport structs (#40680)","ÔΩú unexport SumScopeAttribute,ExponentialHistogramResourceAttribute,ExponentialHistogramDataPointAttribute, SummaryResourceAttribute,SummaryDataPointAttribute,Summary,HistogramScopeAttribute,HistogramDatapointExplicitBound, Histogram,GaugeScopeAttribute,ExponentialHistogramDataPointExemplarAttribute,ValueTypePair,HistogramDatapointExemplar, GaugeDataPointExemplarAttribute,HistogramDatapointBucketCount,HistogramDataPointAttribute,GaugeDatapointAttribute, ExponentialHistogramDatapoint,ExponentialHistogram,SumResourceAttribute,SumDatapoint,SummaryDatapointQuantileValues, Sum,KiWriter,HistogramResourceAttribute,HistogramDatapoint,GaugeResourceAttribute,GaugeDatapointExemplar, ExponentialHistogramBucketNegativeCount,SumDataPointExemplarAttribute,GaugeDatapoint,Gauge,ExponentialHistogramScopeAttribute, ExponentialHistogramBucketPositiveCount,AttributeValue,SummaryScopeAttribute,SumDatapointExemplar,SumDataPointAttribute, HistogramDataPointExemplarAttribute,ExponentialHistogramDatapointExemplar,SummaryDatapoint"],"libhoneyreceiver":["üêû Fix parent id handling in libhoneyreceiver (#40934)","remove unused EnvironmentInfo,AuthInfo,TeamInfo (#40669)"],"logdedupprocessor":["Taught logdedupprocessor not to panic if the dedup field source was not found or not a map (#40204)"],"logzioexporter":["Deprecates `jsonlog` and `logziospan` usage and replace with `plogotlp.ExportRequest` and `ptraceotlp.ExportRequest` accordingly. (#40192)","Support `plogotlp.ExportRequest` struct for logs export, and `ptraceotlp.ExportRequest` struct for traces export. (#40192)"],"mysqlreceiver":["Unexport TableStats,TableIoWaitsStats,StatementEventStats,ReplicaStatusStats,IoWaitsStats,IndexIoWaitsStats,MySQLTestConfig structs from mysqlreceiver (#40671)"],"netflowreceiver":["Add TCP flags attribute to netflow receiver. (#40487)"],"opampextension":["Set the default value of `ReportsAvailableComponents` to `true` (#40485)"],"opensearchexporter":["Add support for dynamic log indexing in OpenSearch exporter (#34746, #38595)","- This feature allows users to specify dynamic log indices based on attributes.","- It supports time-based index name formatting and fallback options."],"otelcol_exporter_prometheusremotewrite_wal_read_latency":["The latency of WAL reads.","(#39556)"],"otelcol_exporter_prometheusremotewrite_wal_write_latency":["The latency of WAL writes."],"pkg":["Remove the fields from category FrontDoorAccessLog from the body log record and place them as log record attributes in translator azurelogs. (#40453)"],"pkg/datadog":["Exposes 'SerializerWithForwarder' interface to allow for direct interaction with the underlying forwarder's lifecycle methods. (#40637)","Creates `agentcomponents` package to be used in Datadog components that rely on external dependencies. (#40532, #40556, #40560)","Deprecates `datadog.Zaplogger` in favor of `agentcomponents.ZapLogger`."],"pkg/ottl":["Add new ContainsValue converter to check whether a value is present in a slice. (#30420)","Add `ottl.PSliceGetter`, a typed getter for `pcommon.Slice`","Add accessors for profile attributes (#39681)","Add context inference support for OTTL value expressions (#39158)","Add new ContainsValue converter to check whether a value is present in a slice. (#30420)","Add `ottl.PSliceGetter`, a typed getter for `pcommon.Slice`"],"pkg/stanza":["Remove deprecated decode package (#40861)"],"pkg/translator/prometheusremotewrite":["`FromMetricsV2` now supports translating histograms. (#33661)","The translation layer for Prometheus remote write 2 now supports histograms but is not fully implemented and ready for use.","`FromMetricsV2` now supports translating summaries. (#33661)","The translation layer for Prometheus remote write 2 now supports summaries but is not fully implemented and ready for use."],"podmanreceiver":["Deprecate \"ssh-dss\" host key algorithm for SSH connections (#40796)","Unexport ContainerScraper (#40672)"],"postgresqlreceiver":["Adopt mdatagen events for postgresqlreceiver. (#40549)"],"processor/transform":["üêû Introduce optional metric name suffix setup for metric conversion functions (#33850)","The affected functions are: convert_summary_count_val_to_sum(), convert_summary_sum_val_to_sum(), extract_count_metric(), extract_sum_metric()"],"prometheusexporter, prometheusremotewriteexporter":["Promote the pkg.translator.prometheus.NormalizeName feature gate to stable. (#40603)","üêû Use the add_metric_suffixes option on the prometheus exporters to | control the addition of suffixes instead of the feature gate."],"prometheusreceiver":["Promote the receiver.prometheusreceiver.RemoveLegacyResourceAttributes featuregate to stable (#40572)","It has been beta since v0.126.0","üêû Fix invalid metric name validation error in scrape start from target allocator. (#35459, #40788)","Prometheus made setting metric_name_validation_scheme, metric_name_escaping_scheme mandatory mandatory, use sane defaults."],"prometheusremotewriteexporter":["Remove the stable exporter.prometheusremotewriteexporter.deprecateCreatedMetric featuregate (#40570)","It was supposed to be removed with v0.118.0.","Adds WAL latency metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"prometheusremotewritereceiver":["Add exponential histograms datapoints to the prometheusremotewritereceiver (#37277)","Unexport MockConsumer,MetricIdentity structs (#40673)"],"receiver/hostmetrics":["Add `system.paging.faults` metrics on Windows (#40468)"],"receiver/httpcheck":["Always close resp.Body and add timeout (#40552)","üêû Fix resource leak caused by failure to close request body (#40695)"],"receiver/simpleprometheus":["üêû Fix bug that caused the labels configuration option to be ignored (#40722)"],"receivercreator":["Properly handle default endpoint for annotation discovery (#40712)","Annotation discovery should not add the default endpoint explicitly. Configuration","should be left empty if users do not set anything. Main flow of the receiver_creator","already adds the default endpoint, if not provided, at a later stage by also checking","if target receiver supports it. This patch ensures this logic is unified for both","annotation discovery and templated based discovery."],"resourcedetectionprocessor":["Promote the processor.resourcedetection.removeGCPFaasID feature gate to beta. (#40601)","The faas.id attribute is replaced by the faas.instance attribute. | This disables detection of the faas.id resource attribute by default. | Re-enable by disabling the processor.resourcedetection.removeGCPFaasID feature gate.","Remove the stable processor.resourcedetection.hostCPUSteppingAsString featuregate (#40569)","It was supposed to be removed in v0.110.0."],"routingconnector":["Copy IsMonotonic and AggregationTemporality when routing metrics on datapoint context. (#37273)"],"sentryexporter":["unexport structs and methods which should be private (#40651)"],"snmpreceiver":["Unexport SNMPData (#40543)"],"snowflakereceiver":["adds a pre-scrape check to see if metrics are enabled. (#40418)","Correct handling of datatypes of Snowflake receiver (#40418)","Rectified datatypes of storagemetrics of Snowflake receiver (#40857)"],"sqlqueryreceiver":["Add SQL connection fields `host`, `port`, `database`, `username`, `password`, and `additional_params`. (#39760)","These options can be used instead of the existing `datasource` configuration option.","Add SQL connection fields `host`, `port`, `database`, `username`, `password`, and `additional_params`. (#39760)","These options can be used instead of the existing `datasource` configuration option."],"sqlserverreceiver":["Only empty strings for query texts and query plans when obfuscation failed. (#40527)","This change applies only to top query collection and query sample collection.","add feature gate for removing metrics resource attributes `server.address`, and `server.port` (#40579)","These are not resource attributes according to the semantic conventions.","To enable this feature gate, when running the otel collector, pass the following argument `--feature-gates=receiver.sqlserver.RemoveServerResourceAttribute`.","Update obfuscation library to use `mssql` mode. (#40525)","Now it can obfuscate more SQL Server specific queries which may not work before.","export `host.name` as resource attributes for metrics (#40576)","üêû in the metadata file, the `host.name` resource attribute is defined for metrics, but it is not exported in reality. this fixed","the issue and export it as a resource attribute.","do not export Item struct (#40676)"],"sumologicextension":["Unexport ErrorAPI (#40655)"],"tinybirdexporter":["Introduce Tinybird Exporter (#40475)"],"transformprocessor":["Create `With*Functions` factory options to provide custom OTTL functions for logs, metrics or traces to the resulting transform processor. (#39698)"],"windowseventlogreceiver":["Added option to prevent collector shutdown due to errors while opening channels (#36237)"]},"v0.130.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","extension/healthcheck","extension/observer/ecstaskobserver","extension/oidcauth","processor/groupbytrace","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","scraper/zookeeperscraper","üêû Due to a [bug](https://github.com/open-telemetry/opentelemetry-go/issues/7039) in the internal telemetry Prometheus exporter, if you are configuring an internal telemetry Prometheus exporter, the collector's internal metrics will be emitted with an unexpected suffix in its name. For example, the metric `otelcol_exporter_sent_spans__spans__total` instead of `otelcol_exporter_sent_spans_total`. The workaround is to manually configure `without_units: true` in your internal telemetry Prometheus exporter config","pull:"],"awscloudwatchreceiver":["üêû Fixes issue with autodiscovered groups that were deleted preventing logs during that poll (#38940)"],"awslogsencodingextension":["Bump the stability to Alpha, and include it in otelcontribcol. (#38627)","Add support for AWS CloudTrail logs. (#40246)","The AWS Logs Encoding Extension now supports unmarshaling AWS CloudTrail logs into OpenTelemetry logs format.","The implementation follows OpenTelemetry semantic conventions for attributes like `rpc.method`, `rpc.system`,","`rpc.service`, `cloud.provider`, `cloud.region`, and `cloud.account.id`.","CloudTrail logs can be used to monitor API activity across your AWS infrastructure, and this integration","enables ingestion of these logs into your OpenTelemetry pipeline for unified observability."],"awsxrayexporter":["üêû Fix incorrect http url generation in trace segment when url.path is present (#40809)"],"cgroupruntimeextension":["Promote to alpha stability (#41128)"],"clickhouseexporter":["üêû Fix log `Body` only recording `String` data (#41141)"],"cmd/opampsupervisor":["Remote configuration by default now merges on top of user-provided config files. (#39963)","Previous, by default, user-provided config files were merged on top of all","other configuration. This is not the case anymore.","The new default order configuration merging is as follows (from lowest to highest precedence):","Allow the Supervisor send a SIGHUP signal to the agent to reload its configuration. (#40410)","This behavior is disabled by default. To enable it, set the `agent::enable_hup_reload` flag to `true` in the supervisor configuration.","Add support for total control of configuration merging through special configuration files (#39963)","The special configuration files can be used through the `agent::config_files` option to control the order","in which configuration is merged. This allows greater customization of this feature, so that it can adapt","many use cases without requiring code changes.","Configuration is merged from the top of the list to the bottom, in order. This means that the first configuration","files will get overwritten by the later ones.","Here's a list of the available special configuration options and what they represent:","- \"$OWN_TELEMETRY_CONFIG\": configuration to set up the agent's own telemetry (resource, identifying and non-identifying attributes, etc.).","- \"$OPAMP_EXTENSION_CONFIG\": configuration for the agent's OpAMP extension to connect to the Supervisor.","- \"$REMOTE_CONFIG\": remote configuration received by the Supervisor.","Here's an example that could be used to configure the Agent:","```","agent:","config_files:","- base_config.yaml","- $OWN_TELEMETRY_CONFIG","- $OPAMP_EXTENSION_CONFIG","- $REMOTE_CONFIG","- compliance_config.yaml","```","If **one or more** of the special files are not specified, they are automatically","added at predetermined positions in the list. The order is as follows:","Supervisor without remote config capabilities now correctly ignores remote config messages. (#41166)"],"coralogixprocessor":["Add transactions feature (#40863)","The transactions feature enables tracking of distributed transactions across microservices in a distributed system.","It provides end-to-end visibility into request flows by correlating spans across different services, allowing","developers to understand the complete journey of a request through their microservices architecture. This","üêû feature is particularly useful for identifying performance bottlenecks, debugging issues, and monitoring","the health of distributed applications.","More information:","https://coralogix.com/docs/user-guides/apm/features/transactions","Promote traces to alpha stability. (#41061)"],"datadogexporter":["Added ability for Datadog metrics serializer exporter to set proxy variables (#41041)"],"dorisexporter":["üêû fix ddl for doris 3.0.6 and 2.1.10 (#40578, #40827)","1. Use `size_based` compaction policy for the trace graph table instead of `time_series`. | 2. Use `\"inverted_index_storage_format\"=\"V2\"`. | 3. Use `zstd` as the default compression algorithm for all tables."],"elasticsearchexporter":["Add telemetry for bulk indexers used to index documents to Elasticsearch. (#38610)","Support profiles variable sampling frequency. (#40115)","Duplicate profiling events with count values larger than 1 (#40946)","Having all events with count=1 enables random sampling on the read path.","Store Sample level `service.name` with each profiling event. (#40967)","Increase metric grouping hash and _metric_names_hash from 32 bit to 64 bit to reduce collisions and chance of consequent data loss. (#41208)","Improve error messages for invalid datapoints by including metric names in error output (#39063)","Previously, error messages for invalid number data points and histogram data points were generic.","üêû Now they include the specific metric name to help with debugging and troubleshooting.","Fetch `HostID`, `ContainerID`, `K8SPodName` and `K8sNamespaceName` from Resource instead of from Sample. (#40967)","üêû Fix how profiles locations are interpreted and stored. (#40959)","üêû Fix storing of sample attributes. (#40961)","Store process.executable.name as part of profiling events. (#40961)","üêû Fix regression `retry::max_retries` not applying correctly for HTTP request levels retries (#39670)","The regression affected versions from v0.120.0 and might cause data loss due to prematurely stopping HTTP request level retries, e.g. when ES is unavailable, as it was cap to a maximum of 2 retries.","üêû Fix incorrect retry backoff duration calculation (#41187)","üêû Fixes a bug where backoff function is stateful and shared between bulk indexers, resulting in data race and incorrect retry backoff duration calculation.","Update 'batcher' config to use internal struct instead of the one removed from the core. (#41225)"],"exporter/datadogexporter":["Ignore APM-related metrics for the running metric for metrics (#41228)","Runtime metrics and APM stats metrics are considered to be part of the APM product and as such they will not generate a metrics running metric."],"faroreceiver":["Ensure that the level is added to all the faro logs. (#40701)"],"filelogreceiver":["Add option `include_file_record_offset` to insert offset as attribute in log records as `log.file.record.offset` (#39684)","üêû Fix `remove`, `copy`, and `move` operator configuration validation. (#40728)","Previously, the receiver would allow configurations that were guaranteed to cause a Collector panic. The Collector will now fail to start with friendly error messages."],"geoipprocessor":["Use semantic convention Geo attributes (#34745)","Replace `geo.continent_code`, `geo.country_iso_code`, `geo.region_iso_code`","with semantic conventions `geo.continent.code`, `geo.country.iso_code`, `geo.region.iso_code`","attributes."],"githubreceiver":["Added the ability to convert custom repository properties to span attributes (#40878)"],"jsonlogencodingextension":["Add array_mode configuration option and add support to process arbitrary JSON inputs (#40877, #40545)","`array_mode` is default set to true to preserve backward compatibility. When set to `true`, extension accepts single or concatenated Json (ex:- NDJSON)"],"kafka":["The default client ID for Kafka components now honours configuration, and defaults to \"otel-collector\". (#41090)","The client ID configuration was ineffective, and (when using the Sarama implementation)","always defaulted to \"sarama\". We now honour the configuration, and the default has changed,","üö®‚ö†Ô∏è hence this is a breaking change for anyone relying on the client ID being \"sarama\"."],"kafkaexporter, kafkatopicsobserver, kafkametricsreceiver, kafkareceiver":["üêû Fix aws_msk configuration in the doc (#41118)"],"kafkareceiver (franz-go client)":["üêû Fix race on lost partition (#41239)","üêû When using the franz-go client, fixes an edge case where a consumer could","lose a partition while it is consuming messages. This leads to unexpected","behavior due to the race and likely cause the consumer to malfunction."],"kubeletstats":["Move receiver.kubeletstats.enableCPUUsageMetrics feature gate to stable (#39650)"],"loadbalancingexporter":["Use a linear probe to decrease variance caused by hash collisions, which was causing a non-uniform distribution of loadbalancing. (#41200)"],"metricstarttimeprocessor":["Add the start_time_metric, which sets the start time based on another metric in the batch of metrics. (#38383)","Add the start_time_metric, which sets the start time based on another metric in the batch of metrics. (#38383)"],"mysqlreceiver":["Collect 'fsync' log operations. (#41175)","Add mysql.max_used_connections metric (#40626)","mysql.max_used_connections contains the maximum number of used sessions since the instance start."],"otelcol_exporter_prometheusremotewrite_wal_bytes_read":["The total number of bytes reads from the WAL.","(#39556)"],"otelcol_exporter_prometheusremotewrite_wal_bytes_written":["The total number of bytes written to the WAL."],"pkg/ottl":["Add new `Keys` converter to extract all keys from a given map. (#39256)","Added a new `ParseInt` OTTL Function. (#40758)","üêû Fix OTTL functions by using setters. (#39100)","üêû Fix an issue where the attribute values were amended in the profiles dictionary. (#40738)","üêû Fixes the OTTL nanoseconds formatter to correctly handle 9 digits of nanoseconds, ensuring accurate time formatting and parsing. (#41144)","Places that import \"github.com/open-telemetry/opentelemetry-collector-contrib/internal/coreinternal/timeutils\" are likely affected by this change. For example, `FormatTime`and `Time` OTTL functions are affected. See [here](https://github.com/search?q=repo%3Aopen-telemetry%2Fopentelemetry-collector-contrib+%22github.com%2Fopen-telemetry%2Fopentelemetry-collector-contrib%2Finternal%2Fcoreinternal%2Ftimeutils%22\u0026type=code) for a full list of affected functionalities.","Add a `GetOr` function to `ottl.Optional` to return a default value when the optional is empty. (#40243)"],"postgresqlreceiver":["Only scrape the query samples that are newer than last scraped (#40622)"],"prometheusremotewriteexporter":["Adds WAL bytes read/write metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"prometheusremotewritereceiver":["Drop summary and classic histogram series as we will not handle them. (#40975)"],"receiver/lokireceiver":["üêû fix parsing of Content-Type header (#41192)","When sending logs in json format a valid header like `Content-Type: application/json; charset=utf-8`","was rejected because the value was not equal to `application/json`.","This changes the parsing of `Content-Type` header to accept optional parameters."],"receiver/postgresql":["Move receiver.postgresql.connectionPool feature gate to alpha (#30831)","This change updates the receiver to use the connection pooling for performance benefits."],"receiver/prometheusreceiver":["üêû Fixes masking of authentication credentials in Prometheus receiver, when reloading the Prometheus config. (#40520, #40916)"],"receiver/prometheusremotewrite":["Handle metrics with unspecified types without panicking. (#41005)"],"receivercreator":["üêû Fix incorrect traces consumer filtering in filterConsumerSignals function (#41033)","üêû The bug caused traces consumers to be incorrectly filtered when metrics were disabled."],"servicegraphconnector":["Remove deprecated field `database_name_attribute` and update the documentation. (#41094)"],"spanmetricsconnector":["Mark dimensions_cache_size as deprecated following the upstream guidelines (#41101)"],"splunkhecexporter":["Deprecate 'batcher' config, use 'sending_queue::batch' instead (#41224)","Update 'batcher' config to use internal deprecated struct instead of the one removed from the core. (#41224)"],"sqlserverreceiver":["Adding 'sqlserver.cpu.count' metric (#41032)","üêû Fix incorrect configuration used in query sample collection. It was intended to retrieve the maximum number of rows per query from config.MaxRowsPerQuery, but it was mistakenly using config.TopQueryCount instead.","(#40943)"],"sumologicprocessor":["Types that do not contribute to intended API surface will be unexported (#40660)","https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/40641"],"syslogexporter":["Add support for Unix sockets (#40740)","The `network` configuration now accepts `\"unix\"` as a valid option in addition to `\"tcp\"` and `\"udp\"`. When `network` is set to `\"unix\"`, the `endpoint` must be a valid Unix socket file path, and `port` is ignored."],"tinybird":["Implement logs propagation for Tinybird exporter (#40475)"],"tinybirdexporter":["Add traces implementation (#40475)"],"transformprocessor":["Add profiles support to transformprocessor. (#39009)"]},"v0.131.0":{"(general)":["exporter/awscloudwatchlogsexporter","exporter/carbonexporter","extension/healthcheck","extension/ecstaskobserver","processor/groupbytraceprocessor","processor/routingprocessor","receiver/awscloudwatchmetricsreceiver","receiver/bigipreceiver","receiver/carbonreceiver"],"architecture":["New Tier 3 platform riscv64 allowing the collector to be built and distributed for this platform. (#41507)"],"awscloudwatchreceiver":["ensures on component shutdown that it calls any open storage clients from the receiver (#41215)"],"awskinesisexporter":["Unexport Exporter (#40645)"],"awss3exporter":["Add a new configuration `resource_attrs_to_s3/s3_bucket` to enable mapping OTel resource attributes to s3 bucket (#40321)","Add support for UUIDv7 as a unique key function in the S3 exporter. (#40515)","üêû Fixed panic error when more than 1 exporter is in the pipeline with s3 exporter (#41262)"],"bmchelixexporter":["Enhance metric name disambiguation using attributes (#41303)","üêû Fix distinct datapoints merged into a single metric payload (#40991)"],"cloudflarereceiver":["Support unixnano format timestamp for cloudflarereceiver (#40342)"],"coralogixexporter":["Print trace IDs in partial success response in the log message (#41544)"],"datadogexporter":["Log attribute values of type bool, int and double will be represented as such. Previously, they were incorrectly converted to string. (#41561)"],"datasetexporter":["Unexport DatasetExporter, ExporterConfig (#40649)"],"deltatocumulativeprocessor":["Unexport Processor,CountingSink (#40656)"],"elasticsearchexporter":["Add telemetry for measuring latency to Elasticsearch bulk API (#41389)","Measure latency of Elasticsearch bulk API calls","An experimental feature to enrich internal telemetry from configured client metadata keys. (#41284)","An experimental feature to enrich internal telemetry from configured client metadata keys. (#41375)","üêû Fixes collisions of frame IDs in profiling.","Shutdown `TelemetryBuilder` on expoter shutdown (#41278)","üêû fix missing build ID for profiles (#41344)"],"exporter/azureblobexporter":["Add support for Workload ID authentication to Azure Blob Exporter (#41285)","Enable the use of workload identity authentication when running the exporter in an AKS pod."],"exporter/loki":["The `Loki Exporter` component has been removed from the repo and is no longer being published as it has been deprecated since 9th July 2024. (#41413)","Users of the `lokiexporter` can migrate to using an OTLP exporter. See https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/33916"],"filestorageextension":["Add an option to recreate databse if the database file is corrupted. (#35899)"],"googlecloudmonitoringreceiver":["Conversion of Distribution to Histogram handles implicit zero counts. (#41351)"],"httpcheckreceiver":["Add TLS certificate checking capability for HTTPS endpoints. (#35968)","The receiver can collect TLS certificate metrics including time remaining until expiry, issuer, common name, and SANs.","If the HttpCheckTLSCertRemaining metric is enabled and the endpoint is HTTPS, it will collect the certificate metrics.","Remove unnecessary status codes (#38564)","The httpcheckreceiver now removes the http.status_code attribute from httpcheck.status metrics","when the metric value is 0, as per the feature request to avoid redundant status codes."],"iisreceiver":["Enable IIS Application Pool state and uptime metrics by default. (#34924)","WARNING: This change enables the `iis.application_pool.state` and `iis.application_pool.uptime` metrics by default.","This may cause a significant increase in the number of metrics collected if you have many application pools.","If you are concerned about the number of metrics, you can disable these metrics in your configuration."],"jmxreceiver":["Add support for jmx-scraper JARs (#37469)"],"k8sleaderelector":["handle late registration of receivers to k8sleaderelector (#40346)"],"kafkaexporter":["Improve kafkaexporter internal metrics telemetry consistency, measure latency in seconds (#41108)","Improve internal metrics telemetry consistency:","kafka_broker_throttling_duration is deprecated in favor of kafka_broker_throttling_latency","kafka_exporter_latency is deprecated in favor of kafka_exporter_write_latency","kafka_exporter_messages is deprecated in favor kafka_exporter_records","Add profiles support (#41369)"],"kineticaexporter":["Remove the kineticaexporter (#38911)"],"libhoneyreceiver":["Handle metadata in libhoneyreceiver (#40953)","By adding metadata handling to the libhoney receiver, users can configure the headers_setter extension with it."],"metricstarttimeprocessor":["üêû Fix an issue where the start time wasn't properly set, but values were decreased. (#41286)"],"metricstransformprocessor":["Unexport Operation, ValueAction, FilterConfig (#40657)"],"mysqlreceiver":["Support query-level collection. (#40965)","Added query sample collection. The query will gather the queries that were currently running at the moment when scraping is happening.","The number of collected queries can be configured. This will enable user to have better understanding on what is going on with the database.","This enhancement empowers users to not only monitor but also actively manage and optimize their MSSQL database performance based on real usage patterns.","Add the total number of buffer pool pages (#41252)"],"oidcauthextension":["Add support for multiple OIDC providers. (#40854)","Users can now configure multiple OIDC providers in the OIDC Auth extension. Tokens will","be matched to a provider based on the `iss` claim.","Unexport ProviderContainer (#41633)","Add support for multiple OIDC providers. (#40854)","Users can now configure multiple OIDC providers in the OIDC Auth extension. Tokens will","be matched to a provider based on the `iss` claim."],"oracledbreceiver":["Add 'oracledb.logons' metric (#41067)","Support query-level log collection, fetching query samples. (#37478)","With the introduction of query level log collection, details about currently running queries can be collected.","The maximum number of queries to be collected can be configured. This feature helps the user to have a better understanding of the database operations.","Support query-level log collection, fetching top N query metrics. (#37478)","With the introduction of query level log collection, the oracledbreceiver can now send metrics for Top N queries,","filtered based on the highest CPU time consumed. The number of queries can be configured. This helps the user to have","a better understanding of the database operations."],"otelcol_exporter_prometheusremotewrite_wal_lag":["WAL pipeline lag.","(#39556)"],"otelcol_exporter_prometheusremotewrite_written_exemplars":["Number of Prometheus Exemplars that were successfully written to the remote write endpoint.","(#33661)"],"otelcol_exporter_prometheusremotewrite_written_histograms":["Number of Prometheus Histograms that were successfully written to the remote write endpoint."],"otelcol_exporter_prometheusremotewrite_written_samples":["Number of Prometheus Samples that were successfully written to the remote write endpoint."],"ottlprofile":["üêû Fix the handling of references to location. (#41466)"],"pkg/ottl":["Add OS name and version attributes in the `UserAgent` function output. (#35458)","Add support for combining `scope` with other OTTL contexts. (#39308)","Previously, OTTL paths could only use the `instrumentation_scope` context when combined with","lower-level contexts like `log` or `metric`. This change allows the `scope` context to be","used interchangeably with `instrumentation_scope`, improving flexibility and consistency.","Added a new `Values` OTTL Function. (#41243)","Allow optional KeyPath in OTTL SliceToMap function. (#41390)","Remove experimental transform context option `WithCache` from OTTL Profile context. (#41277)","Add support for combining `scope` with other OTTL contexts. (#39308)","Previously, OTTL paths could only use the `instrumentation_scope` context when combined with","lower-level contexts like `log` or `metric`. This change allows the `scope` context to be","used interchangeably with `instrumentation_scope`, improving flexibility and consistency."],"postgresqlreceiver":["Add `postgresql.function.calls` metric. (#40969)","Requires `track_functions=pl|all` in Postgres config","Add 'postgresql.temp.io' metric (#41365)","The metric emits the amount of data written to temporary files."],"processor/k8sattributes":["Support extracting labels and annotations from k8s StatefulSets (#37957)"],"prometheusreceiver":["Add retry logic for connection refused errors so the collector doesn't crash at startup. (#40982)","This change adds retry logic for connection refused errors. The target allocator could be","busy starting up the receiver and the first connection attempt may fail."],"prometheusremotewriteexporter":["Adds additional metrics to the Prometheus Remote Write Exporter when RW2 enable. The new metrics are:","Adds wal pipeline lag metric to the Prometheus Remote Write Exporter. The new metric is:"],"prometheusremotewritereceiver":["Promote prometheusremotewritereceiver to alpha (#37277)"],"receiver/prometheus":["Add support for otel_scope_schema_url label mapping to OpenTelemetry ScopeMetrics schema URL field (#41488)","üêû Fix otel_scope_name and otel_scope_version labels not being dropped from metric attributes (#41456)"],"receiver/prometheusremotewrite":["Add support for Native Histogram Custom Buckets (NHCB). (#41043)"],"redactionprocessor":["The new `redact_all_types` option redacts all field types after casting them to string. (#36684)"],"redisstorageextension":["Ensure get operations fetch the values from redis storage. (#41328)"],"splunkenterprisereceiver":["üêû Add test for empty string response on search artifact metrics \u0026 fix unmarshall error (#41288)"],"sqlserverreceiver":["Add 'sqlserver.computer.uptime' metric (#41207)","Make queries compatible with Azure SQL Database and Azure SQL Managed Instance. (#41102)"],"tailsamplingprocessor":["Numeric-range values, if zero, are properly treated as unset. (#41562)","Latency config name change from `UpperThresholdmsMs` to `UpperThresholdMs` (#41563)"],"telemetrygen":["Adds a new telemetrygen flag to generate unique timestamps for within a second interval (#39933)"],"text_encoding":["Move `text_encoding` extension to alpha, adding it to the contrib distribution (#41452)"],"tinybirdexporter":["Mark the tinybirdexporter as alpha (#40475)","Updated Readme.md file to guide users on the usage of the exporter. (#40475)","Add metrics implementation (#40475)","Default logs' Timestamp value to ObservedTimestamp when Timestamp is not set (#41447)"]},"v0.132.0":{"(general)":["exporter/awscloudwatchlogsexporter","exporter/carbonexporter","extension/healthcheck","extension/ecstaskobserver","processor/routingprocessor","receiver/awscloudwatchmetricsreceiver","receiver/bigipreceiver","receiver/carbonreceiver"],"NoTranslation":["Passes metric names through unaltered","üêû When `translation_strategy` is set, it always takes precedence over the deprecated `add_metric_suffixes` option.","üêû The `exporter.prometheusexporter.DisableAddMetricSuffixes` feature gate can be used to completely ignore the deprecated `add_metric_suffixes` setting."],"NoUTF8EscapingWithSuffixes":["üêû Preserves UTF-8 characters while adding suffixes"],"UnderscoreEscapingWithSuffixes":["üêû Escapes special characters to underscores and appends type/unit suffixes"],"UnderscoreEscapingWithoutSuffixes":["üêû Escapes special characters but omits suffixes"],"all":["Downgrade go.opentelemetry.io/otel/exporters/prometheus to v0.58.0 (#41869)","üêû This avoids accidentally pulling in go.opentelemetry.io/otel/exporters/prometheus v0.59.x when building your distros. v0.59.x has a known bug in metric names. See https://github.com/open-telemetry/opentelemetry-collector/pull/13466."],"awscloudwatchreceiver":["Added `pattern` configuration option for filtering log groups (#40981)"],"awscontainerinsightreceiver":["Set Aws config in the info to pass the creds (#41799)"],"awslogsencodingextension":["Add support for ELB Access Logs. (#40710)"],"awss3exporter":["üêû Fixes S3 path joining in the AWS S3 exporter to ensure correct partitioning and prefix handling. (#41675)"],"azureauthextension":["Add support for custom scopes in Azure authentication (#41003)"],"azuremonitorreceiver":["Updated `append_tags_as_attributes` configuration type from boolean to array. It controls which Azure resource tags are added as resource attributes to the metrics. The values can be a list of specific tag names or `[\"*\"]` to include all tags.","(#40988)"],"bmchelixexporter":["Support .percent and .rate metric derivation for ratio and counter metrics respectively (#41611)"],"cmd/golden":["Build a docker image for the golden binary, available as snapshot and release artifact (#40538)"],"cmd/opampsupervisor":["The Supervisor can now be configured to expose a health check endpoint (#40529)","Use `agent::healthcheck` to configure the Supervisor's health check endpoint. It supports all of","the configuration from `confighttp.ServerConfig`.","The health check endpoint is checking the following conditions:","- The persistent state is not nil: this should cover the existence of the instance ID, among other things.","- The config state is not nil: this should cover the existence of the merged config."],"connector/routing":["Add support for the `IsRootSpan` OTTL function. (#41462)"],"datadogexporter":["Return an error on non monotonic bounds for histogram metrics. Previously, this would create a panic. (#41842)"],"datadogsemanticsprocessor":["Add mapping for Datadog source code integration through VCS attributes (#41716)","maps `vcs.ref.head.revision` to `git.commit.sha` and `vcs.repository.url.full` to `git.repository_url` with stripped protocol"],"elasticsearchexporter":["Change default flush::interval and batcher::flush_timeout to 10s (#41726)","Allow `sending_queue` to queue and batch based on the new API and deprecate `batcher` config (#41338)","Enhance logs with additional metadata fields for failed requests to Elasticsearch bulk API (#41674)","üêû Metadata attributes are appended to the log fields, providing additional context for debugging failed requests to the Elasticsearch bulk API.","Serialize the `@timestamp` field for metrics as a number (epoch millis) instead of a string (epoch mills with fractional). This improves the ingestion performance in Elasticsearch as it can leverage an optimized  code path for date parsing. (#41811)","Update error handling to return a permanent error when the Elasticsearch exporter rejects an entire batch due to invalid mapping modes (#38268)"],"exporter/loadbalancingexporter":["Use `configoptional` for optional config sections (#41697)"],"exporter/prometheus":["Add `translation_strategy` configuration option to control how OTLP metric names are translated to Prometheus format. (#35459)","The new `translation_strategy` option provides four different translation modes:"],"exporter/splunkhec":["Do not log entries if they are rejected as too long (#41575)"],"filelogreceiver":["Add a new setting, `polls_to_archive`, to control the number of poll cycles to store on disk, rather than being discarded. (#32727)","If `polls_to_archive` setting is used in conjunction with `storage` setting, file offsets older than three poll cycles are stored on disk rather than being discarded.","This feature enables the receiver to remember file for a longer period and also aims to use limited amount of memory."],"googlecloudlogentry_encoding":["Add 'observedTimestamp' and 'flags' field to resulting log, and throw error if log failed to parse. (#41467)","üêû Fix type on apphub destination GCP fields (#41836)","Rename the remaining common fields in log entry to follow the semantic conventions. (#41087)","Use semantic conventions for the cloud log entry fields (part 1 of 2) (#41718)"],"googlepubsubreceiver":["Remove build-in support for cloud_logging and raw_text encoding. (#41812)","The build-in encodings now have alternative encoding extensions to replace them."],"httpcheckreceiver":["Add detailed timing metrics (#41379)","The timing metrics added to the receiver now include durations for dns lookup, tcp connection, tls handshake, request,","and response."],"internal/common":["Add a priority queue implementation to the common package. (#41755)"],"internal/kafka":["Allow to configure the metdata refresh interval when using the franz-go client in kafkareceiver or kafkaexporter. (#41088)","The `Metadata.RefreshInterval` is set as `MetadataMaxAge` when using the  franz-go client implementation for the kafkareceiver or kafkaexporter."],"isolationforestprocessor":["The processor applies the Isolation-Forest algorithm (an unsupervised, tree-based outlier-detection method) to every incoming span, trace, log, or metric. (#41707)","It emits an anomaly score (iforest.anomaly_score) and/or a boolean flag (iforest.is_anomaly) inside the Collector‚Äîno external ML service required."],"jmxreceiver":["üêû fix sha256sum for opentelemetry-jmx-scraper-1.48.0-alpha.jar (#41864)"],"journaldreceiver":["Unexport ReceiverType (#40666)"],"k8sobjectsreceiver":["Introduces `include_initial_state` for watch mode, so the existing state of watched objects emitted as log events. (#41536)"],"kafkaexporter":["Enrich kafkaexporter errors with topic (#41691)","Use exporterhelper's `WithQueueBatch` and configure batch partitioner based on configured metadata keys (#41775)"],"kafkareceiver":["Improve kafkareceiver internal metrics telemetry consistency, measure latency in seconds (#41109)","Add a new metric kafka_receiver_records_delay to capture the time between producing and receiving a batch of records.","Improve internal metrics telemetry consistency:","kafka_broker_throttling_duration is deprecated in favor of kafka_broker_throttling_latency and will be removed in the next minor release","kafka_receiver_latency is deprecated in favor of kafka_receiver_read_latency and will be removed in the next minor release","kafka_receiver_messages is deprecated in favor kafka_receiver_records and will be removed in the next minor release"],"metricstarttimeprocessor":["refactor datastorage cache so it can be shared across strategies (#38381)"],"mysqlreceiver":["Add 'mysql.page_size' metric (#41572)"],"opampsupervisor":["Propagate feature flag service.AllowNoPipeline to collector started by OpAMP supervisor (#41537)"],"oracledbreceiver":["Add options and child_address into oracle plan (#37478)","Adding options and child_address into oracle plan to enhance the details","Moving child_address from plan details to attributes in top N query collection. (#37478)"],"otelarrowexporter":["üêû Retract 0.130.0, 0.131.0, fix missing Batch.Sizer regression (#41241)"],"pkg/ottl":["Add `UUIDv7` function to generate v7 UUIDs. (#41268)","Add OTTL support for sample submessage of OTel Profiling signal. (#40161)"],"pkg/stanza":["Add support for batch processing in most operators (#39575)","The following operators now support batching: `add`, `assign_keys`, `copy`, `flatten`, `move`,","`regex_replace`, `remove`, `retain`, `unquote` `json_parser`, `json_array_parser`, `key_value_parser`,","`regex_parser`, `scope_name`, `severity`, `timestamp`, `trace_parser`, `uri_parser`.","The following operators do not support batching yet: `container`, `csv_parser`, `filter`,","`recombine`, `router`, `syslog`."],"pkg/translator/prometheusremotewrite":["Handle conflicts in PRW v2 (#33661)"],"postgresqlreceiver":["unify the configuration to align with mdatagen tools and enable events by default (#41700)","Removed the existing query_sample_collection.enabled and top_query_collection.enabled","flags in favor of using the field generated by mdatagen. Both collections are now enabled by default."],"processor/transform":["Introduce convert_summary_quantile_val_to_gauge() function (#33850)"],"pulsarexporter":["Use `configoptional.Optional` for authentication fields (#41723)"],"redactionprocessor":["Add database sanitization capability to the redaction processor. (#41647)"],"servicegraphconnector":["Add native histograms support (#35460)","Add a new setting `exponential_histogram_max_size` to specify the maximum number of buckets for each positive or negative range in an exponential histogram.","Ensure that either `latency_histogram_buckets` or `exponential_histogram_max_size` is used, but not both.","Add support for `metrics_timestamp_offset` configuration option to adjust metric timestamps. (#40999)","The servicegraphconnector now supports a `metrics_timestamp_offset` configuration option that allows","adjusting metric timestamps by subtracting a specified duration from the current time. This enables","metrics to appear as if they were generated in the past, which can be useful for testing scenarios","or when aligning metrics with historical data. The default value is 0, preserving existing behavior."],"solacereceiver":["The Solace receiver may leak memory on reporting traces when used under high load. (#41792)"],"solarwindsapmsettingsextension":["SolarWinds is deprecating apm-proto and now provides an HTTP endpoint for retrieving settings. This change replaces apm-proto with HTTP (#41860)"],"spanmetricsconnector":["Adds a default maximum number of exemplars within the metric export interval. (#41679)","1. If the user manually sets max_per_data_point, there will be no impact.","2. If the user does not set max_per_data_point, the default value will take effect, with max_per_data_point = 5."],"splunkenterprisereceiver":["üêû fixes behavior of kvstore metrics scraper (#41527)"],"splunkhecreceiver":["Accept dashes in metric names (#41127)"],"sqlserverreceiver":["enable events collection on windows (#41762)"],"statsdreceiver":["üêû Fixes a bug when storing k8s.pod.ip in the metrics. Previously otelcol IP was used instead of the client IP. (#41361, #41362)"],"stefexporter, stefreceiver":["üö®‚ö†Ô∏è Update STEF to v0.0.7. This is a breaking change in protocol. (#41858)"],"tailsamplingprocessor":["Add `decision` attribute to metrics tracking sampling decisions (#41819)","Possible values for the `decision` attribute are `sampled`, `not_sampled` and `dropped`"],"vcenterreceiver":["üêû Fixes a potential NPE during VM collection (#41018)"]},"v0.133.0":{"(general)":["exporter/awscloudwatchlogsexporter","exporter/carbonexporter","extension/healthcheck","extension/ecstaskobserver","processor/routingprocessor","receiver/awscloudwatchmetricsreceiver","receiver/bigipreceiver","receiver/carbonreceiver"],"all":["Increase minimum Go version to 1.24 (#41968)"],"awscloudwatchreceiver":["Remove pointer from type of config (#41975)"],"awslogsencodingextension":["Adds `aws.access_key.id` to CloudTrail logs and aligns `aws.resources` attribute fields with naming conventions. (#41815)"],"awss3receiver":["üêû Fixed an issue where the AWS S3 receiver failed to retrieve data from S3 buckets when notified by SQS if the S3 key was URL-encoded. (#42027)"],"azureauthextension":["Use configoptional for optional fields in azureauthextension config. (#41926)"],"cmd/telemetrygen":["Support custom metric names via --otlp-metric-name flag (#42070)"],"coralogixexporter":["Remove unused deprecated configgrpc.ClientConfig (#40853)"],"elasticsearchexporter":["Enhance telemetry metrics to include error.type attribute for better error categorization. (#41962)","Improve the telemetry metrics by adding the `error.type` attribute to the","`elasticsearch.docs.processed` metric. This change allows for better","categorization and understanding of errors that occurs while processing documents."],"exporter/prometheusremotewriteexporter":["Improve logging of remote write errors (#41856)"],"faroreceiver":["Added Timestamp, ObservedTimestamp, SpanId, TraceId fields to the Log Record (#40800)"],"farotranslator":["Improve error hashing by draining exception values (#42032)"],"filelogreceiver":["Move filelog.decompressFingerprint feature gate to beta stage (#42189)"],"filterprocessor":["Create `With*Functions` factory options to provide custom OTTL functions for logs, metrics or traces to the resulting filter processor. (#40948)"],"googlecloudlogentry_encoding":["Parse cloud audit logs into log record attributes instead of placing it in the body as is. (#42035)","Add support to decode multiple logs (#41137)"],"httpcheckreceiver":["Add request body to http requests (#41325)","The httpcheckreceiver can be configured to send a request body to the target endpoint."],"jaegerreceiver":["Use configoptional for optional protocol sections. (#41982)"],"jmxreceiver":["support `jmx_configs` for jmx scraper usecase (#41952)"],"k8sclusterreceiver":["Add optional experimental k8s.container.status.state metric (#32457, #32457)"],"kafkareceiver":["Add `on_permanent_error` option to `message_marking` configuration. (#41333)"],"libhoneyreceiver":["Parsing Span and Trace IDs no longer panic if there is a parsing issue. (#42200)","Use configoptional for HTTP config in libhoneyreceiver (#41974)"],"logdedupprocessor":["üêû Fix UB caused by holding reference to mutable data. (#42147)"],"metricstarttimeprocessor":["Add reset detection to the starttimemetric strategy in the metricstarttimeprocessor (#41870)","üêû Fix UB caused by holding reference to mutable data. (#42151)"],"mongodbatlasreceiver":["Use configoptional and remove pointer for Config fields (#41939)"],"mysqlreceiver":["üêû Fix for the conversion error on mysql.event_id. Setting an int (0) as default value in SQL. (#42040)"],"oidcauthextension":["Add support for accessing custom JWT claims. (#41449)","Users can now access JWT claims from OIDC Auth context allowing dynamic processing based on received JWT token.","Add support for accessing custom JWT claims. (#41449)","Users can now access JWT claims from OIDC Auth context allowing dynamic processing based on received JWT token."],"opencensusreceiver":["Perform graceful shutdown of HTTP server on shutdown (#42117)"],"opencensusreceiver, opencensusexporter":["Deprecate opencensusreceiver and opencensusexporter. (#36791)"],"opensearchexporter":["Add dynamic index naming support for traces (#34746, #38595)","- This feature supports trace index names in config.","- It allows users to specify dynamic trace indices based on attributes.","- It supports time-based index name formatting and fallback options.","- Improves code consistency between logs and trace exporter."],"oracledbreceiver":["Add support for Oracle DB receiver to read session action as trace context. (#41878)","Removing the toLowercase conversion on sql text in top_query payload. Also, adding child_address into the query_samples payload. (#37478)"],"prometheusreceiver":["üêû Remove temporary fix for metric name validation, fix upstream resolved (#42004)","üêû Fixes a bug where static configuration labels were dropped when using the Prometheus receiver. Previously, labels defined in the static config were not being applied to the metrics. (#41727)"],"prometheusremotewriteexporter":["Use configoptional for WAL configuration (#41980)"],"pulsarreceiver":["Use configoptional for optional authentication fields. (#41920)"],"receiver/prometheus":["Use configoptional for optional fields (#42140)"],"receiver/webhookeventreceiver":["Adds configuration to split logs at JSON object boundaries. (#39766)"],"routingprocessor":["Remove deprecated component routingprocessor (#19739)","Please use the [routing connector](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/connector/routingconnector) instead."],"signaltometricsconnector":["Use configoptional for optional metric fields (#41922)","Strictly validate configuration for component. (#41970)","Use configoptional for optional metric fields (#41922)"],"solacereceiver":["Use configoptional for optional types (#41977)"],"spanmetricsconnector":["Use configoptional for optional fields (#41941)"],"sumologicprocessor":["Remove unnecessary pointer for types in configuration struct. (#41928)"],"tailsamplingprocessor":["Optimize telemetry collection in tailsamplingprocessor (#41888)","Add a new option to block on num traces overflow. (#41546)"],"telemetrygen":["Allow `inf` duration for continuous run (#40225)"],"textencodingextension":["Move textencodingextension to beta (#41595)"],"vcenterreceiver":["üêû Fixes a potential issue with vm collection without a types.VirtualMachineConfigInfo attached to the VM. (#42098)"],"webhookeventreceiver":["Move webhookevent receiver to beta (#41997)"],"windowseventlogreceiver":["üêû Fixes issue for remote log collection where domain was not properly passed into EvtOpenSession syscall (#41950)"],"zipkinexporter":["Include instrumentation scope attributes (#39206)"]}}}}
