{"otelcol-contrib":{"v0.102.0":{"awss3receiver":[": Uses obsreport to report metrics for the AWS S3 Receiver. (#30750)"],"awsxrayexporter":[": AWS X-Ray exporter to make local root spans a segment for internal/service spans and subsegment + segment for client/producer/consumer spans. (#33000)",": Fix the DB subsegment(client span) name with JDBC conn string starts with \"jdbc:\" (#33225)"],"clickhouseexporter":[": Add `create_schema` option to ClickHouse exporter (#32282)"],"cmd/telemetrygen":[": Add support for adding spanID and traceID as exemplars to datapoints generated by telemetrygen (#33320)",": Add support for specifying trace ID and span ID in telemetrygen for logs (#33234)"],"exceptionsconnector":[": Add support for exemplars in exceptionsconnector (#24409)"],"exp/metrics":[": fixes staleness.Evict such that it only ever evicts actually stale metrics (#33265)",": fixes staleness.Evict such that it only ever evicts actually stale metrics (#33265)"],"exporter/datadog":[": Fixes a potential race condition when the traces exporter and metrics exporter are both shutting down. (#33291)"],"extension/filestorage":[": Replace path-unsafe characters in component names (#3148)"],"extension/opamp":[": Redact all values in the effective config (#33267)"],"filelogreceiver":[": Log when files are rotated/moved/truncated (#33237)"],"geoipprocessor":[": introduce the GeoIP processor (#32663)"],"influxdb(exporter|receiver)":[": remove Metric flags field to/from InfluxDB conversion (#29896)"],"k8sattributesprocessor":[": Move `k8sattr.rfc3339` feature gate to stable. (#33304)"],"kafkareceiver":[": Fix bug that was blocking shutdown (#30789)"],"kubeletstatsreceiver":[": Add k8s.container.cpu.node.utilization metric (#27885)"],"pkg/ottl":[": Add the `Day` Converter to extract the int Day component from a time.Time (#33106)",": Adds `Month` converter to extract the int Month component from a time.Time (#33106)",": Adds a `Year` converter for extracting the int year component from a time.Time (#33106)",": Adds a `Minute` converter for extracting the int minute component from a time.Time (#33106)"],"pkg/stanza":[": Expose recombine max log size option in the container parser configuration (#33186)"],"podmanreceiver":[": add scraper's shutdown method (#29994)"],"processor/resourcedetectionprocessor":[": Add support for Azure tags in ResourceDetectionProcessor. (#32953)"],"prometheusreceiver":[": Allow to configure http client used by target allocator generated scrape targets (#18054)",": Allow to configure http client used by target allocator generated scrape targets (#18054)"],"receiver/mysql":[": Remove the order by clause for the column that does not exist (#33271)"],"solarwindsapmsettingsextension":[": Added the first part of concrete implementation of solarwindsapmsettingsextension (#27668)"],"stanza":[": Add monitoring metrics for open and harvested files in fileconsumer (#31256)"],"sumologicexporter":[": add support for tracing (#32315)"],"vcenterreceiver":[": vcenterreceiver replaces deprecated packet metrics by removing them and enabling by default the newer ones. (#32929, #32835)"]},"v0.103.0":{"OTel-Arrow":[": Update to OTel-Arrow v0.24.0 (#26491)"],"awss3exporter":[": endpoint should contain the S3 bucket (#32774)"],"awss3receiver":[": Add support for encoding extensions to be used in the AWS S3 Receiver. (#30750)"],"cmd/configschema":[": Removes the deprecated `configschema` command. This command will no longer be released or supported. (#33384)"],"cmd/opampsupervisor":[": Receive and report effective config to the OpAMP server (#30622)"],"cmd/opampsupervisor,extension/opamp":[": Upgrade the opamp-go library to v0.15.0 (#33416)"],"confmap/provider/secretsmanagerprovider":[": Add support for JSON formatted secrets in secretsmanagerprovider confmap (#32143)"],"coralogixexporter":[": Allow setting application name from `cx.application.name` and `cx.subsystem.name` resource attributes (#33217)"],"datadogexporter":[": The Datadog Exporter now supports the `proxy_url` parameter to configure an HTTP proxy to use when sending telemetry to Datadog. (#33316)"],"deltatocumulative":[": properly drop samples when at limit (#33285)"],"elasticsearchexporter":[": Add support for confighttp options, notably \"auth\". (#33367)",": Check that endpoints are valid URLs during config validation. (#33350)",": Duplicate Key in JSON (#33454)"],"exporter/datadog":[": Prevents collector shut down when Datadog logs pipeline fails to validate API key (#33195)"],"filelogreceiver":[": If include_file_record_number is true, it will add the file record number as the attribute `log.file.record_number` (#33530)",": Add support for gzip compressed log files (#2328)",": Container parser should add k8s metadata as resource attributes and not as log record attributes (#33341)"],"geoipprocessor":[": Add initial processing based on source.address resource attribute (#32663)"],"gitproviderreceiver":[": Adds branch commit and line based metrics (#22028)"],"googlecloudspannerreceiver":[": Mark the component as unmaintained. If we don't find new maintainers, it will be deprecated and removed. (#32651)"],"healthcheckextension":[": Remove incorrect logic behind `check_collector_pipeline` config (#33469)"],"healthcheckv2extension":[": Add shared aggregation logic for status events. (#26661)"],"kafka":[": Added `disable_fast_negotiation` configuration option for Kafka Kerberos authentication, allowing the disabling of PA-FX-FAST negotiation. (#26345)"],"kubeletstats":[": Add k8s.pod.cpu.node.utilization metric (#33390)"],"logzioexporter":[": Fix issue where log attributes were not correctly exported (#33231)"],"metricstransformprocessor":[": Adds the 'count' aggregation type to the Metrics Transform Processor. (#24978)"],"mongodbreceiver":[": Now only supports `TCP` connections (#32199)"],"opampsupervisor":[": Add config validation for the supervisor config (#32843)"],"pkg/ottl":[": Added `keep_matching_keys` function to allow dropping all keys from a map that don't match the pattern. (#32989)",": Add debug logs to help troubleshoot OTTL statements/conditions (#33274)",": Introducing `append` function for appending items into an existing array (#32141)",": Introducing `Uri` converter parsing URI string into SemConv (#32433)"],"pkg/winperfcounters":[": It is now possible to force a `watcher` to re-create the PDH query of a given counter via the `Reset()` function. (#32798)"],"postgresqlreceiver":[": Fix bug where `postgresql.rows` always returning 0 for `state=\"dead\"` (#33489)"],"probabilisticsamplerprocessor":[": Add Proportional and Equalizing sampling modes (#31918)"],"processor/tailsampling":[": Migrates internal telemetry to OpenTelemetry SDK via mdatagen (#31581)"],"processor/transform":[": Add `transform.flatten.logs` featuregate to give each log record a distinct resource and scope. (#32080)"],"prometheusreceiver":[": Resource attributes produced by the prometheus receiver now include stable semantic conventions for `server` and `url`. (#32814)",": Fall back to scrape config job/instance labels for aggregated metrics without instance/job labels (#32555)"],"receiver/windowsperfcounters":[": Counter configuration now supports recreating the underlying performance query at scrape time. (#32798)"],"spanmetrics":[": Produce delta temporality span metrics with StartTimeUnixNano and TimeUnixNano values representing an uninterrupted series (#31671, #30688)"],"sqlserverreceiver":[": sqlserver.database.io.read_latency has been renamed to sqlserver.database.latency with a `direction` attribute. (#29865)",": Add support for more Database IO metrics (#29865)"],"stanza":[": remove deprecated code (#33519)"],"statsdreceiver":[": update statsd receiver to use mdatagen (#33524)",": Added received/accepted/refused metrics (#24278)"],"tailsamplingprocessor":[": Simple LRU Decision Cache for \"keep\" decisions (#31583)"]},"v0.104.0":{"all":[": Promote `component.UseLocalHostAsDefaultHost` feature gate to beta. This changes default endpoints from 0.0.0.0 to localhost (#30702)"],"awsemfexporter":[": AWS EMF Exporter to add AppSignals metadata flag into the user-agent (#32998)"],"clickhouseexporter":[": Add `AggregationTemporality` column to histogram and exponential histogram tables. Rename `AggTemp` column to `AggregationTemporality` in sum table. (#33424)",": Updated the default logs table to a more optimized schema (#33611)"],"datadogconnector":[": Add a feature gate `connector.datadogconnector.NativeIngest` that enables datadog connector to use the new native OTel API in APM stats computation. (#33297)"],"datadogexporter":[": Adds Kubernetes DD tags to keep when mapping resource attributes (#33728)",": Fix panics on invalid sized trace \u0026 span IDs (#33566)",": Ignore metric datapoints with `no recorded value` flag (#33728)"],"datasetexporter":[": Upgrade dataset-go to v0.19.0 and fix found issues (#33498, #32533, #33675)",": Upgrade dataset-go to v0.20.0 (#33812)"],"elasticsearchexporter":[": Add translation for k8s.deployment.name resource  attribute (#33622)",": Preserve `host.name` resource attribute in ECS mode (#33670)"],"exporter/clickhouse":[": Change behavior of how default database is read from the config (#33693)",": Add `async_insert` config option to enable inserting asynchronously by default. (#33614)",": Remove deprecated `ttl_days` config option, use `ttl` instead. (#33648)",": Unexport extra configuration methods. (#33647)",": Change internal config type for `create_schema` to use a `bool` instead of `*bool` (#33694)"],"exporter/elasticsearch":[": Deprecate the \"dedot\" configuration. (#33772)",": Deprecate the \"dedup\" configuration. (#33773)",": Add initial support for metrics (#33513)",": Add data stream routing (#33794, #33756)",": Encode metrics resource attributes in ECS mapping mode (#33823)"],"extension/googleclientauth":[": Add Google-signed ID token support (#33185)"],"geoipprocessor":[": Add MaxMind geoip provider for GeoIP2-City and GeoLite2-City databases. (#32663)"],"k8sattributesprocessor":[": Add support for exposing `k8s.pod.ip` as a resource attribute (#32960)"],"k8sobserver":[": Add support for k8s.ingress endpoint. (#32971)"],"loadbalancerexporter":[": Refactors how the load balancing exporter splits metrics (#32513)"],"observerextension":[": Expose host and port in endpoint's environment (#33571)"],"otelarrow":[": OTel-Arrow exporter and receiver are marked alpha, added to otelcontribcol (#26491)"],"otelarrowreceiver":[": Ensure consume operations are not canceled at stream EOF. (#33570)"],"pkg/ottl":[": Add a `schema_url` field to access the SchemaURL in resources and scopes on all signals (#30229)",": Changed ScopeContext, InstrumentationResourceContext, TransformContext interfaces to make SchemaURL accessible in resources and scopes on all signals (#30229)",": Add ByteSliceLikeGetter interface (#31929)"],"pkg/stanza":[": Switch JSON parser used by json_parser to github.com/goccy/go-json (#33784)"],"rabbitmqexporter":[": Promote rabbitmqexporter to alpha. (#33331)"],"receiver/mongodb":[": Graduate receiver.mongodb.removeDatabaseAttr feature gate to stable (#24972)",": Ensure support of 6.0 and 7.0 MongoDB versions with integration tests (#32716)"],"receiver/mongodbreceiver":[": Add `server.address` and `server.port` resource attributes to MongoDB receiver. (#32810, #32350)"],"resourcedetectionprocessor":[": Fetch CPU info only if related attributes are enabled (#33774)"],"routingprocessor":[": Use mdatagen to define the component's telemetry (#33526)"],"server.address":[": The address of the MongoDB host, enabled by default."],"server.port":[": The port of the MongoDB host, disabled by default."],"servicegraphprocessor":[": Added a new configuration option `enable_virtual_node_label` to allow users to identify which node is the virtual node in each edge of the service graph. (#31889)"],"solacereceiver":[": Renamed some SemConv fields to support latest semantic conventions for messaging spans (version `1.25.0`) (#33499)"],"sqlserverreceiver":[": Enable more perf counter metrics when directly connecting to SQL Server (#33420)"],"statsdreceiver":[": Optimize statsdreceiver to reduce object allocations (#33683)"],"sumologicexporter":[": removed compress_encoding (#33604)",": added timeout validation (#33151)"],"tailsamplingprocessor":[": Fix precedence of inverted match in and policy (#33671)"],"vcenterreceiver":[": Drops support for vCenter 6.7 (#33607)",": Adds vCenter CPU readiness metric for VMs. (#33607)",": Adds vCenter CPU capacity and network drop rate metrics to hosts. (#33607)",": Fixes errors in some of the client calls for environments containing multiple datacenters. (#33734)"]},"v0.105.0":{"apachesparkreceiver":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33906)"],"awss3receiver":[": Add support for retrieving logs and metrics to the AWS S3 Receiver. (#30750)"],"awsxrayexporter":[": Allow multiple log group names/arns to be set in environmental variables (#33795)"],"azureblobreceiver":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33902)"],"azuremonitorreceiver":[": Add `maximum_number_of_records_per_resource` config parameter in order to overwrite default (#32165)",": Upgrade stability to alpha (#33689)"],"clickhouseexporter":[": Upgrading stability for logs to beta (#33615)"],"cloudfoundryreceiver":[": Add support to receive CloudFoundry Logs (#32671)"],"cmd/opampsupervisor":[": Adds support for forwarding custom messages to/from the agent (#33575)"],"cmd/telemetrygen":[": Fix `make docker-telemetrygen` command. (#33989)"],"countconnector":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33903)"],"datadogexporter":[": Add a feature gate `exporter.datadogexporter.TraceExportUseCustomHTTPClient` that allows a custom HTTP client to be used in trace export (#34025)",": Exit when API key validation fails and `api::fail_on_invalid_key` is set to `true`. (#33935)"],"datadogreceiver":[": Add support for metrics in Datadog receiver (#18278)"],"deltatorateprocessor":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33904)"],"dockerobserver":[": Add hint to error when using float for `api_version` field (#34043)"],"dockerstatsreceiver":[": Add hint to error when using float for `api_version` field (#34043)"],"elasticsearchexporter":[": Make \"dedup\" option no-op, always de-duplicate. (#33773)",": Remove defunct \"file\" and \"fields\" configuration settings. (#33803)",": Introduce experimental `telemetry.log_request_body` and `telemetry.log_response_body` config (#33854)"],"extension/opamp":[": Rely on the Collector APIs to do config redaction (#34078)"],"extensions/observer/cfgardenobserver":[": Add a new observer that discovers containers through the Garden API (#33618)"],"geoipprocessor":[": Add providers configuration and maxmind provider factory (#33269)"],"healthcheckv2extension":[": Add partial gRPC service implementation to healthcheckv2. (#26661)",": Add support for streaming Watch RPC to healthcheckv2 gRPC service. (#26661)",": Add HTTP service to healthcheckv2 (#26661)"],"httpcheckreceiver":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33897)"],"kafkametricsreceiver":[": Fix issue with incorrect consumer offset (#33309)"],"kubeletstatsreceiver":[": Add `k8s.pod.memory.node.utilization` and `k8s.container.memory.node.utilization` metrics (#33591)"],"loadbalancingexporter":[": Adds a new streamID routingKey, which will route based on the datapoint ID. See updated README for details (#32513)"],"lokiexporter":[": Deprecate component (#33916)"],"metricsgenerationprocessor":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33905)"],"pkg/ottl":[": Added Hex() converter function (#31929)",": Add IsRootSpan() converter function. (#32918)",": Emit traces for statement sequence executions to troubleshoot OTTL statements/conditions (#33433)"],"pkg/stanza":[": Add `parse_ints` config in json parser to support parsing int or float properly (#33696)",": Bump 'logs.jsonParserArray' and 'logs.assignKeys' feature gates to beta. (#33948)",": Switch to faster json parser lib for container operator (#33929)"],"podmanreceiver":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33899)"],"probabilisticsamplerprocessor":[": Fix bug where log sampling was being reported by the counter `otelcol_processor_probabilistic_sampler_count_traces_sampled` (#33874)"],"processor/groupbyattrsprocessor":[": Fix dropping of metadata fields when processing metrics. (#33419)"],"processor/resource, processor/attributes":[": Add an option to extract value from a client address by specifying `client.address` value in the `from_context` field. (#34051)"],"prometheusreceiver":[": Fix hash computation to include non exported fields like regex in scrape configuration for TargetAllocator (#29313)"],"purefareceiver":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33901)"],"purefbreceiver":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33900)"],"receiver/azuremonitorreceiver":[": Add support for Managed Identity and Default Credential auth (#31268, #33584)"],"receiver/filelog":[": Add filelog.container.removeOriginalTimeField feature-flag for removing original time field (#33946)"],"servicegraphconnector":[": Fix failed label does not work leads to servicegraph metrics error (#32018)"],"skywalkingexporter":[": Remove unmaintained component (#23796)"],"splunkhecexporter":[": Increase the performance of JSON marshaling (#34011)"],"sqlserverreceiver":[": Enable default metrics to properly trigger SQL Server scrape (#34065)"],"stanza":[": errors from Operator.Process are returned instead of silently ignored. (#33783)"],"statsdreceiver":[": Allow configuring summary percentiles (#33701)"],"sumconnector":[": creates a wireframe and initial pr to develop from (#32669)"],"syslogreceiver":[": Allow to define `max_octets` for octet counting RFC5424 syslog parser (#33182)"],"telemetrygen":[": telemetrygen `--rate` flag changed from Int64 to Float64 (#33984)"],"testbed":[": Fixes incorrect count for sent data items in load generator. (#34057)"],"vcenterreceiver":[": Enables various vCenter metrics that were disabled by default until v0.105 (#34022)",": Adds additional vCenter resource pool metrics and a memory_usage_type attribute for vcenter.resource_pool.memory.usage metric to use. (#33607)",": Adds vCenter metrics at the datacenter level. (#33607)"],"windowsperfcountersreceiver":[": `windowsperfcountersreceiver` now appends an index number to additional instance names that share a name. An example of this is when scraping `\u2029rocess(*)` counters with multiple running instances of the same executable. (#32319)",": Metric definitions with no matching performance counter are no longer included as metrics with zero datapoints in the scrape output. (#4972)"],"zookeeperreceiver":[": Updating the stability to reflect that the component is shipped as part of contrib. (#33898)"]},"v0.106.0":{"clickhouseexporter":[": Increase the default number of queue consumers to 10 (#34176)"],"datadogconnector":[": Produce stats for non-root client and producer spans when `connector.datadogconnector.NativeIngest` and `compute_top_level_by_span_kind` are enabled (#34197)",": Respect `_dd.measured` when `connector.datadogconnector.NativeIngest` is enabled (#34197)"],"deltatocumulativeprocessor":[": fix bucket counts when downscaling exp histograms with odd offsets (#33831)"],"elasticsearchexporter":[": Add explicit bounds histogram support to metrics (#34045)",": Introduce an experimental OTel native mapping mode for logs (#33290)"],"exporter/datadog":[": Fixes a bug where `otelcol_exporter_sent_log_records` was reporting double as many logs sent when using the logs agent feature gate. (#33887)"],"extension/healthcheckv2":[": Add extension/subcomponent management logic. (#26661)"],"googlemanagedprometheusexporter":[": Fix typo in `exporter.googlemanagedpromethues.intToDouble` feature gate (#34232)"],"hostmetricsreceiver":[": allow configuring log pipeline to send host EntityState event (#33927)"],"k8sattributesprocessor":[": Deprecate `extract.annotations.regex` and `extract.labels.regex` config fields in favor of the `ExtractPatterns` function in the transform processor. The `FieldExtractConfig.Regex` parameter will be removed in version v0.111.0. (#25128)"],"kafkareceiver":[": Add settings session_timeout and heartbeat_interval to Kafka Receiver for group management facilities (#28630)"],"metricstransformprocessor":[": Adds the 'median' aggregation type to the Metrics Transform Processor. Also uses the refactored aggregation business logic from internal/core package. (#16224)"],"opencensusreceiver":[": Do not report an error into resource status during receiver shutdown when the listener connection was closed. (#33865)"],"otelarrowreceiver":[": Fix potential goroutine leak when in stream-shutdown. (#34236)",": Eliminate one spurious span error. (#34175)"],"otelarrowreceiver, otelarrowexporter":[": OTel-Arrow internal packages moved into this repository. (#33567)"],"otlpjsonconnector":[": New component that will allow extracting otlpjson data from incoming Logs. (#34239, #34208)",": Add connector's implementations (#34249, #34208)",": Move connector's stability to alpha. (#34208, #34253)"],"pkg/ottl":[": Adds an `Format` function to OTTL that calls `fmt.Sprintf` (#33405)",": Handle JSON array provided to ParseJSON function (#33535)"],"processor/transform":[": Add `scale_metric` function that scales all data points in a metric. (#16214)"],"redis_storage":[": Adds a new storage extension using Redis to store data in transit (#31682)"],"statsdeceiver":[": Log only non-EOF errors when reading payload received via TCP. (#33951)"],"telemetrygen":[": uses the go logging SDK instead of pdata (#18902)"],"transformprocessor":[": Support aggregating metrics based on their attributes. (#16224)"],"vcenterreceiver":[": Enables various vCenter metrics that were disabled by default until v0.106.0 (#33607)",": Adds vCenter vSAN host metrics. (#33556)",": Adds a number of default disabled vSAN metrics for Clusters. (#33556)",": Adds a number of default disabled vSAN metrics for Virtual Machines. (#33556)",": Adds destroys to the ContainerViews in the client. (#34254)"],"windowsperfcountersreceiver":[": Improve handling of non-existing instances for Windows Performance Counters (#33815)"]},"v0.106.1":{"configauth":[": Fix unmarshaling of authentication in HTTP servers. (#34325)"]},"v0.107.0":{"awsemfexporter":[": AWS EMF Exporter to update ApplicationSignals log group name and namespace, and adjust AWS service name prefix logic in spans (#33798)"],"azureeventhubreceiver":[": Added traces support in azureeventhubreceiver (#33583)"],"azuremonitorreceiver":[": Add Azure China as a `cloud` option. (#34315)"],"bearertokenauthextension":[": use constant time comparison. This fixes CVE-2024-42368 (#34516)"],"clickhouseexporter":[": Add `compress` option to ClickHouse exporter, with default value of `lz4` (#34365)",": Updated the default logs table to a more optimized schema (#34203)",": Use observed timestamp if timestamp is zero (#34150)"],"cmd/opampsupervisor":[": Start even if the OpAMP server cannot be contacted, and continually retry connecting. (#33408, #33799)",": Write the generated effective config and agent log files to the user-defined storage directory. (#34341)"],"configauth":[": Fix unmarshaling of authentication in HTTP servers. (#34325)"],"coralogixprocessor":[": creating new component for coralogix features (#33090)"],"datadogconnector":[": Move feature gate `connector.datadogconnector.NativeIngest` to beta (#34549)"],"docker_observer":[": Change default endpoint for `docker_observer` on Windows to `npipe:////./pipe/docker_engine` (#34358)"],"elasticsearchexporter":[": Add opt-in support for the experimental `batcher` config (#32377)",": Add summary support for metrics (#34560)"],"elasticsearchreceiver":[": Enable more index metrics by default (#34396)",": Add metric for active index merges (#34387)"],"exporter/datadog":[": Deprecates `logs::dump_payloads` since it is invalid with the Datadog Agent logs pipeline, which will be enabled by default in the v0.108.0 release. (#34490)"],"exporter/prometheusremotewrite":[": Reduce unnecessary memory allocation by removing buffer that was not used by Snappy encoding function. (#34273)",": Reduce memory allocations of prometheus remote write exporter \"batchtimeseries\" when large batch sizes are used (#34269)"],"filelogreceiver":[": Check for unsupported fractional seconds directive when converting strptime time layout to native format (#34390)"],"googlecloudmonitoringreceiver":[": Adding new component - [Google Cloud monitoring](https://cloud.google.com/monitoring/api/metrics_gcp) receiver to fetch GCP Cloud Metrics and transform to OpenTelemetry compatible format. (#33762)",": Adding new component - [Google Cloud monitoring](https://cloud.google.com/monitoring/api/metrics_gcp) receiver to fetch GCP Cloud Metrics and transform to OpenTelemetry compatible format. (#33762)"],"hostmetricsreceiver":[": add reporting interval to entity event (#34240)"],"internal/grpcutil":[": Add internal/grpcutil package with gRPC-specified timeout parsing (#33688)"],"kafkaexporter":[": add an ability to partition logs based on resource attributes. (#33229)",": add an ability to partition logs based on resource attributes. (#33229)"],"kafkametricsreceiver":[": Add option to configure cluster alias name and add new metrics for kafka topic configurations (#34148)"],"logdedup":[": Make the name of the log deduplication component consistent (#34571)"],"logdedupeprocessor":[": Add new logdedupeprocessor processor that deduplicates log entries. (#34118)"],"logdedupprocessor":[": Adds a histogram metric to record the number of aggregated log records. (#34579)",": Updates stability level to alpha. (#34575)",": Ensures any pending aggregated logs are processed and sent to the next consumer before shutting down. (#34615)",": Adds a scope aggregator to the logdedup processor enabling the aggregation of logs per scope. (#34606)",": Simplifies the processor shutdown behaviour by removing the unnecessary done channel. (#34478)"],"pkg/ottl":[": Add support for map literals in OTTL (#32388)",": Introduce ExtractGrokPatterns converter (#32593)",": Add the `MD5` function to convert the `value` into a MD5 hash/digest (#33792)",": Introduce `sha512` converter to generate SHA-512 hash/digest from given payload. (#34007)"],"pkg/stanza":[": Ensure that errors from `Process` and `Write` do not break for loops (#34295)"],"pkg/translator/jaeger":[": Change the translation to jaeger spans to match semantic conventions. (#34368)"],"pmetrictest":[": Add support for histogram comparison options (#34521)"],"postgresqlreceiver":[": Support unix socket based replication by handling null values in the client_addr field (#33107)"],"processor/k8sattributes":[": Add support for `container.image.repo_digests` metadata (#34029)"],"receiver/splunkhec":[": Add a regex to enforce metrics naming for Splunk events fields based on metrics documentation. (#34275)"],"splunkhecexporter":[": Copy the bytes to be placed in the request body to avoid corruption on reuse (#34357)"],"syslogexporter":[": Fix issue where exporter may hang indefinitely while dialing. (#34393)"],"telemetrygen":[": Support boolean values in `--telemetry-attributes` and `--otlp-attributes` flag (#18928)"],"vcenterreceiver":[": Enables all of the vSAN metrics by default. (#34409)"],"webhookeventreceiver":[": added a timestamp to the logs generated from incoming events. (#33702)"],"windowseventlogreceiver":[": Add remote collection support to Stanza operator windows pkg to support remote log collect for the Windows Event Log receiver. (#33100)"]},"v0.108.0":{"all":[": Added support for go1.23, bumped the minimum version to 1.22 (#34658)"],"awsfirehosereceiver":[": Fix validation of requests with empty access key (fixes CVE-2024-45043 / GHSA-prf6-xjxh-p698) (#34847)"],"awss3receiver":[": Enhance the logging of the AWS S3 Receiver in normal operation to make it easier for user to debug what is happening. (#30750)"],"azuretranslator":[": The scope name has been updated from `otelcol/azureresourcelogs` and `otelcol/azureresourcetraces` to `github.com/open-telemetry/opentelemetry-collector-contrib/pkg/translator/azure` (#34712)"],"branch.name":["is now `ref.name`"],"cmd/opampsupervisor":[": Fix supervisor support for Windows. (#34570)"],"connector/exceptionsconnector":[": Fix dimensions configuration did not take effect for resource attributes (#34603)"],"datadogconnector":[": Add a config `traces::bucket_interval` (#34554)",": Put back the `otelcol_` prefix for Datadog internal metrics on trace and APM stats exporting (#34807)"],"datadogexporter":[": Put back the `otelcol_` prefix for Datadog internal metrics on trace and APM stats exporting (#34807)"],"datadogreceiver":[": The scope name has been updated from `otelcol/datadogreceiver` to `github.com/open-telemetry/opentelemetry-collector-contrib/receiver/datadogreceiver/internal/translator` (#34711)",": Implement '/info' endpoint (#34772)",": Add sampling.priority attribute for Probabilistic Sampling Processor (#34267)",": Implement '/stats' endpoint (#34790)",": Include error when logging unmarshaling failures in Datadog receiver. (#34515)",": add feature discovery (#34718)"],"deltatocumulative":[": Promote to `alpha` stability (#34747)",": explicit-bounds histograms (#30705)"],"elasticsearchexporter":[": Update OTel mapping mode for logs and metrics; Remove trace_flags (#34472)",": Change default retry.retry_on_status to [429] (#32584)",": Add OTel mapping mode for metrics (#34248)",": Add OTel mapping mode for traces (#34588, #34590)"],"exporter/datadog":[": The `logs::dump_payloads` config option is invalid when the Datadog Agent logs pipeline is enabled (now enabled by default). (#34420)",": Use Datadog Agent logs pipeline by default for exporting logs to Datadog. Upgrades `exporter.datadogexporter.UseLogsAgentExporter` feature flag to beta. (#34420)"],"exporter/doris":[": Add a new component for exporting logs, traces and metrics to Doris (#33479)"],"filelogreceiver":[": If acquire_fs_lock is true, attempt to acquire a shared lock before reading a file. (#34801)"],"geoipprocessor":[": Add a context configuration option to specify the IP address attribute telemetry location. (#34036)",": Move processor's stability to alpha. (#34737)"],"git.repository.branch.commit.aheadby.count":["is now `vcs.repository.ref.revisions_ahead`"],"git.repository.branch.commit.behindby.count":["is now `vcs.repository.ref.revisions_behind"],"git.repository.branch.count":["is now `vcs.repository.ref.count`"],"git.repository.branch.line.addition.count":["is now `vcs.repository.ref.lines_added`"],"git.repository.branch.line.deletion.count":["is now `vcs.repository.ref.lines_deleted`"],"git.repository.branch.time":["is now `vcs.repository.ref.time"],"git.repository.contributor.count":["is now `vcs.repository.contributor.count`"],"git.repository.count":["is now `vcs.repository.count`"],"git.repository.pull_request.count":["is now `vcs.change.count`"],"git.repository.pull_request.time_open":["is now `vcs.change.time_open`"],"git.repository.pull_request.time_to_approval":["is now `vcs.change.time_to_approval`"],"git.repository.pull_request.time_to_merge":["is now `vcs.change.time_to_merge`"],"git.vendor.name":["is now `vcs.vendor.name`"],"gitproviderreceiver":[": Update metric names and attributes to match the newest Semantic Conventions for VCS. (#34278)"],"googlecloudmonitorreceiver":[": The scope name has been updated from `otelcol/googlecloudmonitoringreceiver` to `github.com/open-telemetry/opentelemetry-collector-contrib/receiver/googlecloudmonitoringreceiver` (#34709)"],"k8sclusterreceiver":[": Lower the log level of a message indicating a cache miss from WARN to DEBUG. (#34817)"],"lokiexporter":[": Update the scope name for telemetry produced by the lokiexporter from `otelcol/loki` to `github.com/open-telemetry/opentelemetry-collector-contrib/exporter/lokiexporter` (#34612)"],"metricstransformprocessor":[": Add scaling exponential histogram support (#29803)"],"pkg/ottl":[": Introduce `UserAgent` converter to parse UserAgent strings (#32434)"],"pkg/stanza":[": fix nil value conversion (#34672)"],"pkg/stanza/operator/input/windows":[": Change type name from `EvtRpcLogin` to `EvtRPCLogin`. (#34656)"],"prometheusreceiver":[": Ensure Target Allocator's confighttp is used in the receiver's service discovery (#33370)",": Group scraped metrics into resources created from `job` and `instance` label pairs (#34237)"],"pull_request.state":["is now `change.state`"],"solacereceiver":[": Updated the format for generated metrics. Included a `receiver_name` attribute that identifies the Solace receiver that generated the metrics (#34541)"],"splunkhecexporter":[": The scope name has been updated from `otelcol/splunkhec` to `github.com/open-telemetry/opentelemetry-collector-contrib/exporter/splunkhecexporter` (#34710)"],"tailsamplingprocessor":[": Update the `policy` value in metrics dimension value to be unique across multiple tail sampling components with the same policy name. (#34192)",": Fix the behavior for numeric tag filters with `inverse_match` set to `true`. (#34296)"],"transformprocessor":[": Promote processor.transform.ConvertBetweenSumAndGaugeMetricContext feature flag from alpha to beta (#34567)"],"vcenterreceiver":[": Several host performance metrics now return 1 data point per time series instead of 5. (#34708)"]},"v0.109.0":{"apachereceiver":[": Fix panic on invalid endpoint configuration (#34992)"],"clickhouseexporter":[": Upgrade trace SpanKind and StatusCode string values (#34799)"],"datadogconnector":[": Optimize Datadog connector when there are many peer tags and `connector.datadogconnector.NativeIngest` is enabled (#34945)"],"datadogexporter":[": Add support for setting a custom log source from resource attribute `datadog.log.source` (#35051)",": Use correct hostname for logs when using Datadog Agent logs pipeline with a gateway deployment. (#35058)"],"datadogreceiver":[": add support for sketch metrics in Datadog receiver (#18278)"],"deltatocumulative":[": drop bad samples (#34979)"],"elasticsearchexporter":[": Add exponential histogram support (#34813)",": Add span event support to traces OTel mapping mode (#34831)",": Fix dynamic mapping for double values storing integers (#34680)",": Stringify attribute array values in metrics OTel mode (#35004)"],"exceptionsconnector,servicegraphconnector,spanmetricsconnector":[": Extract the `getDimensionValue` function as a common function. (#34627)"],"exporter/prometheusexpoter":[": Support for Prometheus Created Timestamps. (#32521)"],"fileconsumer":[": Fix bug where max_concurrent_files could not be set to 1. (#35080)"],"filestorage":[": Add directory validation for compaction on-rebound (#35114)"],"geoipprocessor":[": Avoid using internal empty attribute.Set pointer (#34882)"],"githubreceiver":[": Promote GitHub receiver metrics to alpha status. (#34960)"],"gitproviderreceiver":[": The Git Provider Receiver has been renamed to GitHub Receiver. (#34731)"],"googlecloudmonitoringreceiver":[": Enhancing the Google Cloud monitoring receiver to establish a client connection, scrape GCP Cloud Metrics, and transform them into an OpenTelemetry compatible format for pipeline processing. (#33762)",": Enhancing the Google Cloud monitoring receiver to establish a client connection, scrape GCP Cloud Metrics, and transform them into an OpenTelemetry compatible format for pipeline processing. (#33762)"],"hostmetricsreceiver":[": In filesystem scraper, do not prefix partitions when using the environment variable HOST_PROC_MOUNTINFO (#35043)"],"instanaexporter":[": Marking instanaexporter module as deprecated (#34994)"],"kafkareceiver":[": Adds tunable fetch sizes to Kafka Receiver (#22741, #34431)",": Add support for encoding extensions in the Kafka receiver. (#33888)"],"mysqlreceiver":[": mysql client raise error when the TABLE_ROWS column is NULL, convert NULL to int64 (#34195)"],"opampextension":[": Adds the ability to configure the polling interval for the HTTP client. (#34749)"],"opampsupervisor":[": Add new config parameter `agent.health_check_port` to allow configuring the port used by the agent healthcheck extension. (#34643)"],"otelarrowexporter":[": Add gRPC timeout propagation. (#34733)"],"otlpjsonconnector":[": Handle OTLPJSON unmarshal error (#34782)"],"ottl":[": Remove tracing from OTTL due to performance concerns (#34910)"],"pkg/ottl":[": Added Decode() converter function (#32493)",": Add `Sort` function to sort array to ascending order or descending order (#34200)",": Change the OTTL grammar to support expressing statements context via path names (#29017)",": Add support for localized time parsing into the coreinternal/timeutils (#32977)"],"pkg/stanza":[": Synchronize shutdown in stanza adapter (#31074)",": An operator configured with silent errors shouldn't log errors while processing log entries. (#35008)"],"processor/interval":[": Support for gauge and summary metrics. (#34803)"],"prometheusreceiver":[": Move the TargetAllocator configuration struct to an internal directory (#33146)"],"redactionprocessor":[": Add support for logs and metrics (#34479)"],"servicegraphconnector":[": Fix histogram metrics miss unit (#34511)",": Fix incorrectly reversed latency settings for the server and client (#34933)"],"signalfxexporter":[": Fix memory leak by re-organizing the exporter's functionality lifecycle (#32781)"],"solarwindsapmsettingsextension":[": Added logic for refresh function (#27668)"],"spanmetricsconnector":[": Improve consistency between metrics generated by spanmetricsconnector. Added traces.span.metrics as default namespace (#33227, #32818)"],"splunkhecexporter":[": Drop empty log events (#34871)"],"splunkhecreceiver":[": Fix memory leak when the receiver is used for both metrics and logs at the same time (#34886)"],"sqlqueryreceiver":[": Support populating log attributes from sql query (#24459)"],"sqlserverreceiver":[": Fix bug where metrics were being emitted with the wrong database name resource attribute (#35036)"],"testbed":[": Add test case scenarios to handle large files to existing testbed. (#34288)"],"transformprocessor":[": Support aggregating metrics based on their attribute values and substituting the values with a new value. (#16224)"],"vcenterreceiver":[": Updated units on several metrics to be more in line with documented semantics. (#34946)"],"windowseventlogreceiver":[": Avoid rendering the whole event to obtain the provider name (#34755)"]},"v0.110.0":{"all":[": TimeoutSettings/QueueSettings fields in various Config structs are no longer embedded (#35158)"],"azurelogs_translater":[": Adds a new translater that converts Azure EventHub logs to OpenTelemetry logs used by the Azure Events Hub receiver. (#39704)"],"azuremonitorexporter":[": fix issue for property endpoint is ignored when using instrumentation_key (#33971)"],"cmd/opampsupervisor":[": Ensure the Supervisor processes all fields in a ServerToAgent message. (#34349)"],"datadogconnector":[": Map the new OTel semantic convention `deployment.environment.name` to `env` for OTLP traces in APM stats. (#35147)"],"datadogexporter":[": Map the new OTel semantic convention `deployment.environment.name` to `env` for OTLP traces, metrics and logs. (#35147)",": Adds exporter.datadogexporter.metricremappingdisabled featuregate which disables renaming OpenTelemetry metrics to match Datadog semantics. This feature gate is only for internal use. (#35025)",": Upgrade logs in Datadog Exporter to beta (#35359)",": The datadog exporter config has been deprecated in favor of the new `datadog/config` package. The new package is shared between the Datadog exporter and the Datadog Connector."],"datadogreceiver":[": Fix numeric span attributes (#35087)"],"deltatocumulative":[": do not drop gauges and summaries (#35284)"],"deltatorateprocessor":[": Remove unnecessary data copies. (#35165)"],"dorisexporter":[": logs implementation (#33479)",": traces implementation (#33479)"],"exporter/splunkhec":[": Fix incorrect claim that the exporter doesn't mutate data when batching is enabled. (#35306)"],"file_storage":[": provide a new option to the user to create a directory on start (#34939)"],"groupbytraceprocessor":[": Ensure processor_groupbytrace_incomplete_releases metric has a unit. (#35221)"],"headersetterextension":[": adding default_value config (#34412)"],"hostmetricsreceiver":[": Set the receiver.hostmetrics.normalizeProcessCPUUtilization feature gate to stable. (#34763)"],"kafkaexporter":[": Add support for encoding extensions in the Kafka exporter. (#34384)",": Add option to supply destination topic through context. (#34503, #34432)"],"kafkareceiver":[": Add support for `otlp_json` encoding to Kafka receiver. The payload is deserialized into OpenTelemetry traces using JSON format. (#33627)"],"otelarrowexporter":[": Allow separate arrow exporter per unique value of configured metadataKeys. (#34178)",": Add BatcherConfig field following similar in OTLP exporter. (#34802)"],"otelarrowreceiver":[": Add gRPC timeout propagation. (#34742)"],"pkg/datadog":[": Create a new module for Datadog exporter configuration."],"pkg/ottl":[": Improved JSON unmarshaling performance by 10-20% by switching dependencies. (#35130)",": Added support for locale in the Time converter (#32978)"],"pkg/stanza":[": Move `filelog.container.removeOriginalTimeField` feature gate to beta (#33389)",": Do not get formatted message for Windows events without an event provider. (#35135)"],"processor/transform":[": Add custom function to the transform processor to convert exponential histograms to explicit histograms. (#33827)"],"prometheusreceiver":[": Fix the retrieval of scrape configurations by also considering scrape config files (#34786)"],"redactionprocessor":[": Fix panic when using the redaction processor in a logs pipeline (#35331)"],"remotetapprocessor":[": Origin header is no longer required for websocket connections (#34925)"],"resourcedetectionprocessor":[": Move `processor.resourcedetection.hostCPUSteppingAsString` feature gate to stable. (#31136)",": Remove `processor.resourcedetection.hostCPUModelAndFamilyAsString` feature gate. (#29025)"],"sapmexporter":[": Prioritize token in context when accesstokenpassthrough is enabled (#35123)"],"signalfxexporter":[": Ensure token is not sent through for event data (#35154)"],"splunkenterprise":[": Fix a flaky search related to iops metrics. (#35081)"],"tailsamplingprocessor":[": Fix the behavior for numeric tag filters with `inverse_match` set to `true`. (#34296)"],"transformprocessor":[": Remove unnecessary data copy when transform sum to/from gauge (#35177)"]},"v0.111.0":{"clickhouseexporter":[": Upgrading stability for traces to beta (#35186)",": Updated the default trace table (#34245)"],"config":[": Move component.UseLocalHostAsDefaultHost feature gate to stable. (#35569)"],"datadogreceiver":[": Move receiver's metrics stability to alpha. (#18278)",": Add container id from v0.5 request header (#35345)"],"elasticsearchexporter":[": Drop cumulative temporality histogram and exponential histogram (#35442)",": Implement receiver-based routing under *_dynamic_index config (#34246)",": Implement elasticsearch.mapping.hints attribute handling for data points in OTel mapping mode (#35479)",": Revert TSDB array dimension workaround for metrics OTel mode (#35291)"],"geoipprocessor":[": No longer return an error when geo metadata is not found by a provider. (#35047)"],"googlecloudmonitoringreceiver":[": Move receiver's stability to alpha. (#33762)"],"hostmetricsreceiver":[": Add ability to mute all errors (mainly due to access rights) coming from process scraper of the hostmetricsreceiver (#20435)"],"instanaexporter":[": Remove deprecated instanaexporter (#35367)"],"kubeletstats":[": Introduce feature gate for deprecation of container.cpu.utilization, k8s.pod.cpu.utilization and k8s.node.cpu.utilization metrics (#35139)"],"metricsgenerationprocessor":[": Generate metrics even when the second metric's value is 0 (#35533)",": Allow metric calculations to be done on sum metrics (#35428)"],"opampsupervisor":[": Add configurable logging for the supervisor. (#35466)",": Skip executing the collector if no config is provided (#33680)",": Make supervisor runnable as a Windows Service. (#34774)",": Add config option for setting the timeout for the initial bootstrap information retrieval from the agent (#34996)",": Only use TLS config when connecting to OpAMP server if using `wss` or `https` protocols. (#35283)",": Pass config structure instead of file path when using NewSupervisor function (#34379)"],"otelarrowreceiver":[": Add admission control in the otelarrow receiver's standard otlp data path."],"pkg/ottl":[": Add InsertXML Converter (#35436)",": Add GetXML Converter (#35462)",": Add ToKeyValueString Converter (#35334)",": Add RemoveXML Converter (#35301)"],"receiver/prometheusremotewrite":[": Add a new receiver for Prometheus Remote Write."],"receiver/statsd":[": Add support for aggregating on Host/IP."],"receivercreator":[": Validate endpoint's configuration before starting receivers (#33145)"],"sapmreceiver":[": `access_token_passthrough` is deprecated (#35330)"],"signalfxexporter":[": Do not exclude the metric `container.memory.working_set` (#35475)"],"sqlqueryreceiver":[": Fail if value for log column in result set is missing, collect errors (#35068)",": Fix reprocessing of logs when tracking_column type is timestamp (#35194)"],"sqlserverreceiver":[": Add computer name resource attribute to relevant metrics (#35040)"],"sumconnector":[": adds connector and summing logic along with tests (#32669)"],"webhookeventreceiver":[": Fixed a bug where request bodies containing newline characters caused the results to split into multiple log entries (#35028)"],"windowseventlogreceiver":[": The 'raw' flag no longer suppresses rendering info. (#34720)",": Add 'suppress_rendering_info' option. (#34720)",": Move artificial \"remote_server\" field to 'attributes[\"server.address\"]'. (#34720)",": While collecting from a remote windows host, the stanza operator will no longer log \"subscription handle is already open\" constantly during successful collection. (#35520)",": If collecting from a remote host, the receiver will stop collecting if the host restarts. This change resubscribes when the host restarts. (#35175)"]},"v0.112.0":{"awsfirehosereceiver":[": Add support for CloudWatch logs (#35077)",": added OTLP v1 support to Firehose receiver (#34982)"],"awss3receiver":[": Add support for monitoring the progress of ingesting data from an S3 bucket via OpAMP custom messages. (#30750)"],"azureblobreceiver":[": adds support for using azidentity default auth, enabling the use of Azure Managed Identities, e.g. Workload Identities on AKS (#35636)"],"azuredataexplorerexporter":[": Fix compression type for Azure Data Explorer exporter by adding the compression type in ingestion properties. (#35353)"],"azureeventshubreceiver":[": Updates the Azure Event Hub receiver to use the new Resource Logs translator. (#35357)"],"chronyreceiver":[": Move chronyreceiver to beta (#35913)"],"cloudflarereceiver":[": Respond 503 on non-permanent and 400 on permanent errors (#35642)"],"confmap/aesprovider":[": Initial aes encryption provider. Allows configurations to decrypt secrets using AES encryption. (#35550)"],"datadogreceiver":[": Use `Check` name from Service Check structure as metric name rather than hardcoded string `service_check` (#35718)",": Changes response message for `/api/v1/series` and `/api/v2/series` 202 response to be JSON and on par with Datadog API spec (#35743)"],"deltatocumulative":[": fix meter panic on startup (#35685)"],"elasticsearchexporter":[": Enable gzip compression by default (#35865)",": Set body.* for log body in OTel mode (#35771)",": Deprecate retry::max_requests in favor of retry::max_retries (#32344)",": Add hint in error logs for TSDB version_conflict_engine_exception error (#35546)",": Introduce an experimental bodymap mapping mode for logs (#35444)",": Log and drop invalid metrics instead of returning error to avoid upstream retries (#35740)",": Preserve attribute names and metric names on prefix conflict in OTel mapping mode (#35651)",": Make OTel mapping mode send to data streams only (#35839)",": Sanitize datastream routing fields (#34285)"],"exporter/clickhouse":[": Add the ability to override default table names for all metric types. (#34225)"],"filelogreceiver":[": Supports `add_metadata_from_filepath` for Windows filepaths (#35558)",": Suppress errors on EBADF when unlocking files. (#35706)"],"googlecloudexporter":[": Google Cloud exporter is marked as mutating. (#35366)"],"googlemanagedprometheusexporter":[": GMP exporter is marked as mutating. (#35366)"],"hostmetrics receiver":[": Fix duplicate filesystem metrics (#34635, #34512)"],"hostmetricsreceiver":[": Use HOST_PROC_MOUNTINFO as part of configuration instead of environment variable (#35504)"],"k8sobserver":[": Emit endpoint per Pod's container (#35491)"],"kafkareceiver":[": Fixes issue causing kafkareceiver to block during Shutdown(). (#30789)"],"logdedupprocessor":[": Add a `condition` field to the Log DeDuplication Processor. (#35440)"],"metricsgenerationprocessor":[": Introduce functionality to only do metric calculations on data points whose attributes match (#35425)"],"metricstransform":[": The previously removed functionality of aggregating against an empty label set is restored. (#34430)"],"mongodbreceiver":[": Add support for MongoDB direct connection (#35427)"],"mysqlreceiver":[": Add replica metric support for versions of MySQL earlier than 8.0.22. (#35217)"],"ntpreceiver":[": Introduce new receiver reporting the offset between the local machine and a NTP server. (#34375)"],"oidcauthextension":[": Fix a goroutine leak during shutdown. (#30438)"],"opampextension":[": Support using auth extensions for authenticating with opamp servers (#35507)",": Implement `ReportsHealth` capability in OpAMP extension (#35433)",": Report OS description semantic convention (`os.description`) as a part of non-identifying agent description. (#35555)"],"opampsupervisor":[": Allow collector logs to passthrough to supervisor output to facilitate running in a containerized environment. (#35473)"],"otelarrowexporter":[": Adjust defaults from https://opentelemetry.io/blog/2024/otel-arrow-production/ experiments. (#35477)"],"pkg/ottl":[": Add ConvertAttributesToElementsXML Converter (#35328)",": Parsing invalid statements and conditions now prints all errors instead of just the first one found. (#35728)",": Add ParseSimplifiedXML Converter (#35421)",": Add ConvertTextToElements Converter (#35364)",": Allow indexing string slice type (#29441)"],"pkg/status":[": Refactors the extension/healthcheckv2extension/internal/status into pkg/status (#34692)"],"pkg/translator/jaeger":[": Remove error from method signature as it always returns nil (#35560)"],"pkg/translator/prometheusremotewrite":[": Fix metric comparison func in prom translation layer (#35741)",": add FromMetricsV2 (#33661)"],"processor/metricsgeneration":[": Remove \"experimental_\" prefix from metrics generator processor name. (#35426)"],"rabbitmqexporter":[": Allow to configure the name of the AMQP connection in the rabbitmqexporter (#34681)"],"receiver/prometheusremotewrite":[": Add HTTP Server to handler Prometheus Remote Write requests (#35535)",": Add HTTP Server to handler Prometheus Remote Write requests (#35535)"],"receiver/windowseventlog":[": Errors returned when passing data downstream will now be propagated correctly. (#35461)"],"routingconnector":[": Allow routing based on OTTL Conditions (#35731)"],"sapmreceiver":[": Deprecate SAPM receiver (#32125)",": Respond 503 on non-permanent and 400 on permanent errors (#35300)"],"stanza/input/windows":[": Close remote session while resubscribing (#35577)"],"systemdreceiver":[": Introduce the scaffolding of a new component, systemdreceiver (#33532)"],"telemetrygen":[": ensure validate is called (#35745)",": Enable the `--otlp-insecure-skip-verify` flag (#35735)"],"tlscheckreceiver":[": Add TLS Check Receiver component to monitor x.509 certificate expiry (#35423)"]},"v0.113.0":{"awsfirehosereceiver":[": make otlp_v1 a valid record type (#35750, #36125)"],"awss3receiver":[": Mark the AWS S3 receiver as Alpha. (#30750)"],"azuredataexplorerexporter":[": Add new configuration option `use_default_auth` to enable default authentication for Azure Data Explorer. This option allows users to leverage workload identity for authentication. (#33667)"],"connector/routing":[": Add ability to route log records individually using OTTL log record context. (#19738)",": Fix detection of duplicate conditions in routing table. (#35962)"],"datadogreceiver":[": Follow receiver contract based on type of error (#5909)",": Return a json reponse instead of \"OK\" when a trace is received with a newer protocol version. (#35705)",": Changes response message for `/api/v1/check_run` 202 response to be JSON and on par with Datadog API spec (#36027)"],"dbstorage":[": Add postgresql support (#35692)"],"dorisexporter":[": metrics implementation (#33479)"],"exporter/signalfx":[": Enabling retrying for dimension properties update without tags in case of 400 response error. (#36044)"],"extensions/observer/cfgardenobserver":[": Implemented the observer, the second PR in the 3 PR process for new components (#33618)"],"hostmetrics":[": Adjust scraper creation to make it so the scraper name is reported with hostmetrics scraper errors. (#35814)"],"hostmetricsreceiver":[": Add the system.uptime metric in the hostmetrics receiver (#31627)",": Do not set the default value of HOST_PROC_MOUNTINFO to respect root_path (#35990)"],"journaldreceiver":[": adds ability to parse journald's MESSAGE field as a string if desired (#36005)",": allows querying a journald namespace (#36031)",": Restart journalctl if it exits unexpectedly (#35635)"],"k8sobserver":[": Enable observation of ingress objects if the `ObserveIngresses` config option is set to true (#35324)"],"ntpreceiver":[": Move NTP receiver to alpha (#36152)"],"opampsupervisor":[": Makes the Supervisor's OpAmp server port configurable with 'agent::opamp_server_port'. (#36001)",": Supervisor waits for configurable healthchecks to report remote config status. (#21079)"],"opensearchexporter":[": The OpenSearch exporter is now marked as unmaintained and will be removed in 6 months. (#35781)"],"otelarrowreceiver":[": Enable unlimited admission control when request_limit_mib is set to 0. (#36074)",": Simplify receiver admission control logic (#36074)",": Avoid breaking telemetry when admission control fails in OTLP handlers. (#36074)"],"otlpjsonfilereceiver":[": Add support for profiles signal (#35977)"],"pkg/ottl":[": Promote `processor.transform.ConvertBetweenSumAndGaugeMetricContext` feature gate to Stable (#36216)",": Add SliceToMap function (#35256)"],"pkg/stanza":[": Fixed bug causing Operators with DropOnErrorQuiet to send log entries to the next operator. (#35010)",": Handle error of callback function of `ParserOperator.ProcessWithCallback` (#35769)"],"pkg/stanza/operator":[": Retain Operator should propagate the severity field (#35832)"],"pkg/translator/prometheusremotewrite":[": `FromMetricsV2` now transforms attributes into labels. (#33661)"],"prometheusexporter":[": Fixes an issue where the prometheus exporter would not shut down the server when the collector was stopped. (#35464)"],"receiver/filelog":[": fix record counting with header (#35869)"],"receiver/prometheusremotewrite":[": Implement body unmarshaling for Prometheus Remote Write requests (#35624)",": Implement Content-Type negotiation for Prometheus Remote Write requests (#35565)",": Implement body unmarshaling for Prometheus Remote Write requests (#35624)"],"receiver/windowseventlog":[": Fix panic when rendering long event messages. (#36179)"],"routingconnector":[": Add ability to route by request metadata. (#19738)"],"sapmreceiver":[": Remove the deprecated access_token_passthrough from SAPM receiver. (#35972)"],"signalfxexporter":[": Add more default metrics related to Kubernetes cronjobs, jobs, statefulset, and hpa (#36026)"],"simpleprometheusreceiver":[": Support to set `job_name` in config (#31502)"],"solacereceiver":[": Add support to the Solace Receiver to convert the new `Move to Dead Message Queue` and new `Delete` spans generated by Solace Event Broker to OTLP. (#36071)",": The Solace receiver may unexpectedly terminate on reporting traces when used with a memory limiter processor and under high load (#35958)"],"splunkenterprisereceiver":[": Add telemetry around the Splunk Enterprise kv-store. (#35445)",": Add new metrics for Splunk Enterprise dispatch artifacts (#35950)"],"splunkhecreceiver":[": Avoid a memory leak by changing how we record obsreports for logs and metrics. (#35294)"],"testbed":[": `scenarios.createConfigYaml()` and `utils.CreateConfigYaml()` functions now take processor configs as a struct slice argument instead of `map[string]string`. (#33003)"],"webhookeventreceiver":[": Pass the consumer error to EndLogsOp (#35844)"]},"v0.114.0":{"cmd/githubgen":[": Adds a flag to skip checking GitHub organization membership for CODEOWNERS (#36263)"],"connector/otlpjson":[": Throw error on invalid otlp payload. (#35738, #35739)"],"container":[": Set non root group permissions for container image (#35179)"],"datadogexporter":[": Stop prefixing `http_server_duration`, `http_server_request_size` and `http_server_response_size` with `otelcol` (#36265)"],"datadogreceiver":[": Add json handling for the `api/v2/series` endpoint in the datadogreceiver (#36079)"],"elasticsearchexporter":[": Translate `k8s.*.name` resource attributes in ECS mode (#36233)"],"encodingextension":[": Add support for profiles signal to encodingextension (#36008)"],"exporter/loadbalancing":[": Shutdown exporters during collector shutdown. This fixes a memory leak. (#36024)"],"exporter/prometheusremotewrite":[": Deprecate configuration option `export_created metric` (#35003)"],"googlemanagedprometheus":[": Add `CumulativeNormalization` config option to allow users to configure to specify whether to report normalized or un-normalized points. Defaults to normalized. (#36357)"],"k8sattributesprocessor":[": Add support for profiles signal (#35983)"],"k8sclusterreceiver":[": Add support for limiting observed resources to a specific namespace. (#9401)"],"opampextension":[": Add content type to opamp extension when reporting EffectiveConfig (#36327)"],"otelarrowreceiver":[": New admission control metrics are consistent across Arrow and OTLP data paths. (#36334)",": Admission control improvements (LIFO); admission.waiter_limit is deprecated, replaced with admission.waiting_limit_mib. (#36074)",": Add a new LIFO-based bounded queue. (#36074)"],"pkg/datadog":[": Expose an API `TranslatorFromConfig` that creates a new metrics translator (#36300)"],"pkg/ottl":[": Respect the `depth` option when flattening slices using `flatten` (#36161)"],"pkg/stanza":[": Ensure that time parsing happens before entry is sent to downstream operators (#36213)",": Synchronous handling of entries passed from the log emitter to the receiver adapter (#35453)",": Changed signature of `emit.Callback` function in `pkg/stanza/fileconsumer/emit` package by introducing `emit.Token` struct that encapsulates the token's body and attributes. (#36260)"],"processor/k8sattributes":[": Block when starting until the metadata have been synced, to fix that some data couldn't be associated with metadata when the agent was just started. (#32556)"],"processor/spanprocessor":[": Add a new configuration option to keep the original span name when extracting attributes from the span name. (#36120)"],"prometheusexporter":[": Fixes a race condition between the exporter start and shutdown functions. (#36139)",": reject metrics whose types have changed, use pre-existing descriptions when help strings change (#28617)"],"prometheusreceiver":[": Fix prometheus receiver to support static scrape config with Target Allocator (#36062)"],"prometheusremotewriteexporter":[": reduce allocation when serializing protobuf (#35185)"],"resourcedetectionprocessor":[": Introduce support for Profiles signal type. (#35980)"],"routingconnector":[": Add ability to route by metric context (#36236)",": Add ability to route by span context (#36276)"],"splunkenterprisereceiver":[": Add new metrics for Splunk Enterprise dispatch artifacts caches (#36181)"]},"v0.115.0":{"awsemfexporter":[": Add support for 1 second metric resolution in CloudWatch Embedded Metrics Format based on metric attributes (#29506)",": Improvement unit conversion during EMF log translation (#35937)"],"awsfirehosereceiver":[": Follow receiver contract based on type of error (#5909)",": fix timestamp when ingesting logs from CloudWatch through firehose (#36122)"],"azuremonitorexporter":[": Fixes an issue where the Azure Monitor exporter was not sending data to App Insights due to the Telemetry Channel not being flushed. (#35037)"],"clickhouseexporter":[": Fix incorrect Resource Attribute `service.name` translation to ClickHouse ServiceName field for Logs Records (#36349)"],"cmd/opampsupervisor":[": Update default logger output paths to stderr (#36072)",": Support environment variable expansion in the OpAMP supervisor config. (#36269)",": Do not log err if the last received doesn't exist (#36013)"],"datadogexporter":[": Add a configurable `reporter_period` parameter to the Datadog exporter’s host metadata configuration to allow users to specify the frequency at which host metadata is sent to Datadog. (#36450)"],"elasticsearchexporter":[": Respect `flush::bytes` in sync bulk indexer, `flush::bytes` measures uncompressed size, change default `batcher::max_size_items` to `0` (#36163)"],"exporter/prometheusremotewrite":[": Change `exporter.prometheusremotewriteexporter.deprecateCreatedMetric` feature gate from Alpha to Beta version. (#35003)"],"exporter/pulsarexporter":[": Change configuration option `map_connections_per_broker`, rename to `max_connections_per_broker`. (#36579)"],"extension/cgroupruntime":[": Initial implementation for cgroupruntime extension. (#30289)"],"failoverconnector":[": Resolves a bug that prevents proper recovery when disabling max retries (#36587)"],"googlecloudpubsubexporter":[": Fix a goroutine leak during shutdown. (#30438)"],"huaweicloudcesreceiver":[": Introduce new receiver fetching data from huawei Cloud Eye Service. (#34953)"],"internal":[": Remove stable gate `component.UseLocalHostAsDefaultHost` (#36589)"],"k8sattributesprocessor":[": Move k8sattr.fieldExtractConfigRegex.disallow feature gate to Beta. (#25128)"],"loadbalancingexporter":[": Adding sending_queue, retry_on_failure and timeout settings to loadbalancing exporter configuration (#35378, #16826)",": The k8sresolver in loadbalancingexporter was triggering exporter churn in the way the change event was handled. (#35658)"],"netflowreceiver":[": Introduce the netflow receiver (#32732)"],"opampsupervisor":[": Enable strict unmarshalling of the OpAMP Supervisor config file. An error will now be returned if an invalid config key is set. (#35838)"],"opencensusreceiver":[": Do not report error message when OpenCensus receiver is shutdown cleanly. (#36622)"],"pkg/datadog":[": Refactor the API that provides metrics translator (#36474)"],"pkg/ottl":[": Move debug log to `Statement.Execute` so that components using it instead of `StatementSequence` also get debug logs. (#36456)",": Allow indexing []int64, []float64, []bool, and []byte slices (#29441)"],"pkg/stanza":[": Introduce active file grouping mechanism. (#23787)"],"postgresqlreceiver":[": Minimal supported PostgreSQL version updated from 9.6 to 13.0 (#30923)",": Added new postgresql metrics to acheive parity with Telegraf (#36528)"],"processor/k8sattribute":[": fixes parsing of k8s image names to support images with tags and digests. (#36131)"],"receiver/azureeventhub":[": When using a storage extension, the component will call Close on the client during component shutdown. This fixes a bug that resulted in a file potentially remaining locked after component shutdown. (#36238)"],"receivercreator":[": Add support for starting receivers/scrapers based on provided annotations' hints for metrics' collection (#34427)"],"routingconnector":[": Add abiilty to route by 'datapoint' context (#36523)"],"signalfxreceiver":[": Follow receiver contract based on type of error (#5909)"],"signaltometricsconnector":[": New component for generating metrics from raw signals using user defined OTTL expressions. (#35930)"],"sumologicexporter":[": adding new products for auto discovery (#35622)"],"tailsamplingprocessor":[": Adds decision cache for non-sampled trace IDs (#31583)"],"vcenterreceiver":[": The existing code did not honor TLS settings beyond 'insecure'. All TLS client config should now be honored. (#36482)"]},"v0.116.0":{"awss3receiver":[": Add support RFC3339 format for starttime and endtime (#36787)"],"awsxrayexporter":[": Generate url section in xray segment when `net.peer.name` is available (#35375)"],"azureeventhubreceiver":[": support providing one or more time formats for timestamp parsing (#36650)"],"azuremonitorexporter":[": fix bug to remove default config of endpoint which causes failing to parse endpoint correctly. (#36704)"],"clickhouseexporter":[": Exporter now sorts attribute maps' keys during INSERT, yielding better compression and predictable aggregates (#33634)"],"connector/datadog, exporter/datadog, pkg/datadog":[": throw error if datadog API key contains invalid characters (#36509)"],"connector/routing":[": Deprecate `match_once` parameter. (#29882)"],"datadogconnector":[": Flip configs `traces::compute_stats_by_span_kind`, `traces::peer_tags_aggregation` and `traces::peer_service_aggregation` to true by default (#35969)"],"datadogexporter":[": Flip configs `traces::compute_stats_by_span_kind`, `traces::peer_tags_aggregation` and `traces::peer_service_aggregation` to true by default (#35969)",": read response body on pushSketches to allow connection re-use (#36779)"],"dorisexporter":[": Mark the Doris exporter as Alpha. (#33479)"],"elasticsearchexporter":[": Map *.geo.location.{lat,lon} as geo_point field in OTel mode (#36565)"],"exporter/prometheusremotewrite":[": Fix exemplar handling when the exemplar is an integer value. (#36657)"],"fileexporter":[": Add support for profiles signal. (#35978)"],"githubreceiver":[": Update metric names to match VCS Metric Semantic Conventions and scraper key name. (#36714)",": Adds webhook skeleton to GitHub receiver to receive events from GitHub for tracing. (#27460)"],"googlecloudmonitoringreceiver":[": Add metric-specific labels to googlecloudmonitoringreceiver component (#35711)",": Fix \"no validation found\" error if workload is running on Google Cloud Platform (#36607)"],"jaegerreceiver":[": Remove ineffectual warning from jaegerreceiver (#35894)"],"jsonlogencodingextension":[": Change how logs are marshaled. Instead of marshaling just the first log, marshal all logs into a JSON array. (#34064)"],"k8sattributesprocessor":[": Override extracted k8s attributes if original value has been empty (#36373)"],"k8sattributesreceiver":[": Log any errors encountered during kube client initialisation (#35879)"],"kafkaexporter, kafkareceiver":[": Add a new mechanism \"AWS_MSK_IAM_OAUTHBEARER\" for kafka exporter and kafka receiver. This mechanism use the AWS MSK IAM SASL Signer for Go https://github.com/aws/aws-msk-iam-sasl-signer-go. (#19747)"],"kineticaexporter":[": The kineticaexporter is now Unmaintained as it has no active code owners from the vendor (#36808)"],"libhoneyreceiver":[": Introduce the scaffolding of a new component, libhoneyreceiver (#36693)"],"loadbalancingexporter":[": Adds a an optional configuration to the k8s resolver which returns hostnames instead of IPs for headless services pointing at statefulsets (#18412)"],"mongodbatlasreceiver":[": Adds additional metrics to the MongoDB Atlas receiver (#36525)"],"opampextension":[": Use status subscription for fine granular component health reporting (#35856)",": Fix blocking agent shutdown due to unclosed channel (#36764)"],"opampsupervisor":[": avoid nil pointer access when reporting the last received remote config (#36850)"],"parseutils":[": Handle escaped quotes when parsing pairs using SplitString. (#36176)"],"pkg/ottl":[": GetXML Converter now supports selecting text, CDATA, and attribute (value) content. (#36821)",": Add the `ottl.ParserCollection` utility to help handling parsers for multiple OTTL contexts (#29017)"],"pkg/pdatatest":[": Add support for Profiles signal comparison. (#36232)"],"postgresqlreceiver":[": Update the postgresqlreceiver to handle new table schema for the bgwriter metrics in pg17+ (#36784)"],"processor/tailsampling":[": Reverts #33671, allowing for composite policies to specify inverted clauses in conjunction with other policies. This is a change bringing the previous state into place, breaking users who rely on what was introduced as part of #33671. (#34085)"],"purefareceiver":[": Implements support for scraping Pure Storage FlashArray with Purity version 6.6.11+ (#36251)"],"receiver/prometheusreceiver":[": Metric adjuster no longer assumes that all metrics from a scrape come from the same resource (#36477)"],"receiver/prometheusremotewrite":[": Parse labels from Prometheus Remote Write requests into Resource and Metric Attributes. (#35656)"],"routingprocessor":[": Deprecated in favor of the routing connector. (#36616)",": Deprecated in favor of the routing connector. (#36616)"],"s3exporter":[": Upgrading to adopt aws sdk v2 (#36699)"],"signaltometrics":[": Add config validation and custom OTTL functions (#35930)"],"splunkhecexporter":[": Add `otel_attrs_to_hec_metadata/*` config fields to replace `hec_metadata_to_otel_attrs/*` fields. (#35092)"],"sumologicextension":[": Skip likely zombie processes on Windows. (#36481)"],"tesbed":[": add options for retry/storage for filelog sender (#36781)"],"testbed":[": Add batcher performance tests (#36206)"]},"v0.117.0":{"awsemfexporter":[": Split EMF log to multiple log splits when buckets larger than 100. (#36771)"],"awsxrayexporter":[": merge in latest semantic conventions for awsxrayexporter. (#36894)"],"cloudfoundryreceiver":[": Introduce a feature gate enable copying envelope tags to the metrics as resource attributes instead of datapoint attributes. (#34824)"],"cmd/telemetrygen":[": Introduce support for generating histograms in telemetrygen (#36322)"],"exporter/prometheusremotewrite":[": In preparation to re-introducing multiple workers, we're removing a data-race when batching timeseries. (#36601)"],"internal/docker":[": Fix image matching regular expression to properly match SHA256 strings. (#36239)"],"k8s.node.condition_*":[": The condition of a node. e.g. `k8s.node.condition_ready`. The value can be `true`, `false`, `unknown`."],"k8s.pod.phase":[": The phase of a Pod indicates where the Pod is in its lifecycle. E.g. 'Pending', 'Running'"],"k8s.pod.status_reason":[": A brief message indicating details about why the pod is in this state. E.g. 'Evicted'"],"k8sclusterreceiver":[": Add additional attributes to node and pod entities (#35879)"],"k8sobjectsreceiver":[": ensure the `k8s.namespace.name` attribute is set for objects retrieved using the `watch` mode (#36352)"],"libhoneyreceiver":[": Mark the libhoney receiver exporter as Alpha. (#36693)",": Implement log signal for libhoney receiver (#36693)",": Implement trace signal for libhoney receiver (#36693)"],"logzioexporter":[": Remove jaeger dbmodel dependency. (#36972)"],"mongodbatlasreceiver":[": Update the mongoDB Atlas receiver to use the Default HTTP Transport that supports default proxy configuration (#36412)"],"mysqlreceiver":[": Avoid recording a value for the MysqlBufferPoolPages metric when out-of-bounds. (#35495)",": Divide large values directly in SQL queries to avoid int overflows (#35495)"],"opampsupervisor":[": Report an 'Applied' remote config status when an empty config is received. (#36682)"],"opensearchexporter":[": Add Sending Queue to enable persistent queue in case of upstream failure (#33919)"],"ottl":[": Add a new ottl trim function that trims leading and trailing characters from a string (default- whitespace). (#34100)"],"pkg/ottl":[": removed the ability to reference entire parent objects. (#36872)",": fix handling of nested maps within slices in the `flatten` function (#36162)",": Change OTTL contexts to properly handle `ottl.Path` with context (#29017)"],"receiver/azureeventhub":[": Ensure that observed timestamp is set when unmarshaling logs. (#36861)"],"receivercreator":[": Add support for starting logs' collection based on provided k8s annotations' hints (#34427)"],"redisstorageextension":[": Move redis storage extension to alpha (#36778)"],"routingconnector":[": Change default value of `match_once` parameter to `true`. (#29882)"],"sapmexporter":[": Deprecate SAPM exporter (#36028)"],"sigv4authextension":[": Add support for endpoint based names for logs and traces (#36828)"],"sqlqueryreceiver":[": Add instrumentation scope to SQL query receiver metrics and logs (#31028)"],"statsdreceiver":[": Add UDS support to statsdreceiver (#21385)"],"tailsamplingprocessor":[": Support hot sampling policy loading (#37014)"]},"v0.118.0":{"awscloudwatchmetricsreceiver":[": move the component to unmaintained status (#36599)"],"awss3exporter":[": Implement sending queue for S3 exporter (#37274, #36264)"],"cgroupruntimeextension":[": Implement ECS metadata retrieval for cgroupruntime extension. (#36814)"],"clickhouseexporter":[": Fix Nil Pointer Exception on Metrics/Traces export without service.name Resource Attribute (#37030)"],"connector/routing":[": Invalid configuration when using `context` other than `resource` #37410"],"datadogexporter":[": Add a feature gate datadog.EnableReceiveResourceSpansV2. Enabling this gate uses a refactored implementation of OTLP-\u003eDatadog Span translation in datadogexporter and datadogconnector which improves performance by 10%, and deprecates the following functionality: - No longer checks for resource-related values (container, env, hostname) in span attributes. This previous behavior did not follow the OTel spec. (#37171)",": Add a feature gate datadog.EnableOperationAndResourceNameV2. Enabling this gate modifies the logic for computing operation and resource names from OTLP spans to produce shorter, more readable names and improve alignment with OpenTelemetry specifications. (#36419)"],"deltatocumulativeprocessor":[": cap the number of exponential histogram buckets to 160 (#33277)"],"dorisexporter":[": send json lines to doris rather than json array (#36896)"],"elasticsearchexporter":[": Remove Index config, which was deprecated and replace with LogsIndex since v0.60.0 (#37094)",": Remove `dedup` config setting that was deprecated in v0.104.0 (#33773)",": Handle `EventName` for log records in OTel mode (#37011)",": More efficient JSON encoding for OTel mode (#37032)",": Mark OTel mapping mode as stable (#37240)"],"exporter/bmchelix":[": Add a new component for exporting metrics to BMC Helix (#36773)"],"extension/jaegerremotesampling":[": remove dependency on jaeger internal code (#36976)"],"extension/skywalkingencodingextension":[": Support skywalking_encoding extension for skywalking traces. (#28693)"],"githubgen":[": Deprecate githubgen in this repository (#37294)"],"gitlabreceiver":[": Adds webhook skeleton to GitLab receiver to receive events from GitLab for tracing. (#35207)"],"googlecloudmonitoringreceiver":[": set the minimum collection interval as 60s (#36898)"],"googlecloudpubsubreceiver":[": Fix a goroutine leak during shutdown. (#30438)"],"huaweicloudces":[": Move huaweicloudces receiver to alpha (#34953)"],"intervalprocessor":[": Interval Processor is now Alpha stability and is added to the `contrib` and `k8s` distributions (#36514)"],"k8sattributesprocessor":[": For pods with only one container, the `container.id` and `k8s.container.name` are not longer required in the resource attributes to add the container attributes (#34189)",": Ensure the pods gathered by the processor contain the information about their related replica sets and deployments after the initial sync (#37056)"],"logdedupprocessor":[": Add 'include_fields' option to deduplicate log records via body or attribute fields. (#36965)",": Fix config validation not working when creating a processor. (#37278)"],"mysqlreceiver":[": Add delete_multi, update_multi metrics to mysql.commands for mysqlreceiver (#37301)"],"pkg/ottl":[": Support dynamic indexing of maps and slices. (#36644)",": Add the `Nanosecond` converter to return the nanosecond component from the specified time.Time (#37042)",": Add the `Second` converter to return the second component from the specified time.Time (#37042)",": Enhanced error messages for invalid cache access and introduced options to configure their values within the OTTL contexts. (#29017)",": Add the `FormatTime` function to convert `time.Time` values to human-readable strings (#36870)",": Fix bug with `replace_all_matches` and `replace_all_patterns` that caused non-string values to be changed to empty string when matching against empty string. (#37071)",": Enhanced error messages for invalid cache access and introduced options to configure their values within the OTTL contexts. (#29017)",": Add value expression parser that enables components using ottl to retrieve values from the output of an expression (#35621)"],"pkg/stanza":[": Move `filelog.container.removeOriginalTimeField` feature gate to stable (#33389)"],"prometheusremotewriteexporter":[": Only append label values if they are different for colliding OTel attributes (#35896)",": Re allows the configuration of multiple workers (#36134)"],"receiver/prometheusremotewrite":[": Check if Scope is already present comparing with the received labels (#36927)"],"resourcedetectionprocessor":[": This enhancement detects AWS EKS cloud account ID (#37179)",": Introduce kubeadm detector to retrieve local cluster name. (#35116)"],"routingconnector":[": Disconnect `match_once` parameter from functionality. (#29882)",": Change `match_once` parameter from `bool` to `*bool`. (#29882)"],"signalfxexporter":[": Prioritize retrieving token from context when accesstokenpassthrough is enabled (#37102)",": Honor access_token_passthrough config option for sending events (#37102)"],"signaltometrics":[": Adds resource attributes based on telemetry settings to the connector to ensure single writer (#35930)"],"signaltometricsconnector":[": Add core logic for the signal to metrics connector to make it functional. (#35930)"],"tailsamplingprocessor":[": Added debug logging to the sampling decision caches. (#37038)",": Improved not sampled decision cache usage and deleting traces from the internal map when they are in a decision cache. (#37189)",": Fixed sampling policy evaluation debug logging batch metrics (e.g. sampled). (#37040)",": Late span age histogram should include sampled traces. (#37180)"],"telemetrygen":[": Remove go-grpc-middleware dependency (#37103)"],"vcenterreceiver":[": Adds vCenter memory capacity for hosts and memory granted metric for VMs. (#37257)"]},"v0.119.0":{"awss3exporter":[": Add support for S3 Storgeclass (#35173)"],"connector/routing":[": Fix config validation with context other than `resource` (#37410)"],"cumulativetodeltaprocessor":[": Add metric type filter for cumulativetodelta processor (#33673)"],"datadogconnector":[": Support obfuscating sql queries in APM stats (#37457)"],"datadogexporter":[": Remove stable feature gate `exporter.datadog.hostname.preview` (#37561)"],"deltatocumulativeprocessor":[": In order to cap number of histogram buckets take the min of desired scale across negative and positive buckets instead of the max (#37416)"],"elasticsearchexporter":[": Consistently store the structured body of logs and events in `body.structured` in `otel` mode (#37387)",": Group data points into a single document even if they are from different but equal resources (#37509)",": Add config `logs_dynamic_id` to dynamically set the document ID of log records using log record attribute `elasticsearch.document_id` (#36882)",": Declare MutatesData: false (#37234)"],"envoyalsreceiver":[": Add a new receiver for the Envoy ALS (Access Log Service). (#36464)"],"exporter/clickhouse":[": Adding missing examples of DDL created by the clickhouse exporter (#35903)"],"exporter/prometheusremotewrite":[": Change `exporter.prometheusremotewriteexporter.deprecateCreatedMetric` feature gate from Beta to Stable version. (#35003)"],"exporter/sematext":[": Add a new component for exporting metrics and logs to Sematext (#36465)"],"filelogreceiver":[": Fix issue where flushed tokens could be truncated. (#35042)"],"githubgen":[": Switch over all usages of githubgen to the new tool location, since the old tool was deprecated (#37412, #37294)"],"googlecloudpubsubreceiver":[": Added support for encoding extensions. (#37109)"],"hostmetrics/process":[": Added support for tracking process.uptime (#36667)"],"httpcheckreceiver":[": Added support for specifying multiple endpoints in the `httpcheckreceiver` using the `endpoints` field. Users can now monitor multiple URLs with a single configuration block, improving flexibility and reducing redundancy. (#37121)"],"jaegerreceiver":[": Log the endpoints of different servers started by jaegerreceiver (#36961)"],"k8sattributesprocessor":[": Wait for the other informers to complete their initial sync before starting the pod informers (#37056)"],"metricsgenerationprocessor":[": Generated metric name may not match metric being scaled (#37474)"],"metricstarttimeprocessor":[": Add the initial skeleton for the metricsstarttimeprocessor (#37186)",": Add the initial skeleton for the metricsstarttimeprocessor (#37186)"],"netflowreceiver":[": Adds the implementation of the netflow receiver (#32732)"],"opampsupervisor":[": add support for headers configuration for reporting own telemetry (#37353)",": report own metrics via OTLP instead of prometheus receiver (#37346)"],"otlpjsonfilereceiver":[": Include file attributes and append it to the log record (#36641)"],"pkg/stanza":[": Fix default source identifier in recombine operator (#37210)"],"processor/transformprocessor":[": Add support for flat configuration style. (#29017)",": Replace parser collection implementations with `ottl.ParserCollection` and add initial support for expressing statement's context via path names. (#29017)"],"prometheusreceiver":[": Add `receiver.prometheusreceiver.UseCollectorStartTimeFallback` featuregate for the start time metric adjuster to use the collector start time as an approximation of process start time as a fallback. (#36364)"],"receiver/cloudfoundry":[": Promote `cloudfoundry.resourceAttributes.allow` feature gate to beta (#34824)"],"resourcedetectionprocessor":[": Expose additional configuration parameters for the AWS metadata client used by the EC2 detector (#35936)",": Add `fail_on_missing_metadata` option on EC2 detector (#35936)",": The `gcp` resource detector will now detect resource attributes identifying a GCE instance's managed instance group. (#36142)"],"routingconnector":[": The connector splits the original payload so that it may be emitted in parts to each route. (#37390)"],"signalfxexporter":[": Warn on dropping metric data points when they have more than allowed dimension count (#37484)"],"signalfxreceiver":[": `access_token_passthrough` is deprecated (#37575)"],"signaltometricsconnector":[": Move signal to metrics connector to alpha stability (#35930)"],"solacereceiver":[": Update validation step to allow only one auth method. (#36386)"],"tailsamplingprocessor":[": Reworked the consume traces, sampling decision, and policy loading paths to improve performance and readability (#37560)",": Fixed sampling decision metrics `otelcol_processor_tail_sampling_sampling_trace_dropped_too_early` and `otelcol_processor_tail_sampling_sampling_policy_evaluation_error_total`, these were sometimes overcounted. (#37212)"]},"v0.120.0":{"activedirectorydsreceiver":[": Fixed typo in the attribute `distingushed_names`, renaming it to `distinguished_names`. (#37606)"],"all":[": Added support for go1.24, bumped minimum version to 1.23 (#37875)"],"awscontainerinsightreceiver":[": Add support for HOST_PROC environment variable in AWS Container Insight Receiver. (#35862)",": Fix race condition in shutdown of AWS Container Insight receiver (#37695)"],"awsfirehosereceiver":[": Refactor unmarshallers to implement pdata unmarshaler interfaces (#37361)"],"azureeventhubreceiver":[": Fix bug where persisted offset would be ignored after restart (#37157)"],"bearertokenauthextension":[": Load token lazily for gRPC AUTH to fix token refresh issue (#36749)"],"bmchelixexporter":[": Mark the BMC Helix exporter as Alpha. (#36773)",": metrics implementation (#36773)"],"datadogexporter":[": Add a gauge metric datadog.otel.gateway which is 1 if the collector is used as a gateway or 0 otherwise. (#37499)"],"datadogreceiver":[": Implement support for span links (#37449)"],"dbstorageextension":[": Add DB Transactions to dbstorage.Batch() method as it is expected by Storage API (#37805)"],"elasticsearchexporter":[": Use go-elasticsearch/v8, require minimum version of ES 7.17.x or 8.x (#32454)",": Remove dedot config. ECS mode now always dedots, no others dedot at all. (#33772)",": Syncs support for compression level on elasticsearch exporter with confighttp. The default compression level is 1 if not set. (#37260)",": Add profiles support to elasticsearch exporter (#37567)",": Fix data loss caused by incorrect metric grouping in ECS and OTel mode (#37898)"],"exporter/logzioexporter":[": Remove dependency on Jaeger pkg/cache (#37833)"],"extension/oauth2clientauth":[": Add `expiry_buffer` config to `oauth2client` extension, allowing token refresh before expiration with a default buffer of 5 minutes. (#35148)"],"githubreceiver":[": The `required_header` configuration option for the trace receiver has been changed to `required_headers`. (#37578)",": add support for GitHub Actions workflow run events using deterministic Trace and Root Span IDs. (#37578)"],"googlecloudlogentryencodingextension":[": Introduce the scaffolding of a new component, googlecloudlogentryencodingextension (#37531)"],"googlecloudmonitoringreceiver":[": support use [monitoring filters](https://cloud.google.com/monitoring/api/v3/filters) to filter metrics (#36898)"],"googlecloudpubsubreceiver":[": Turn noisy `warn` log about Pub/Sub servers into `debug`, and turn the reset count into a metric (#37571)"],"internal/datadog":[": create new package `github.com/open-telemetry/opentelemetry-collector-contrib/pkg/datadog/hostmetadata` which exposes `GetSourceProvider` from `github.com/open-telemetry/opentelemetry-collector-contrib/internal/datadog/hostmetadata` (#37668)"],"k8sattributes":[": Fix bug where `Filters.Labels` failed with when the `exists` or `not-exists` operations were used. (#37913)"],"k8sclusterreceiver":[": Adds new descriptive attributes/metadata to the k8s.namespace and the container entity emitted from k8sclusterreceiver. (#37580)"],"kafkatopicsobserver":[": Adding new kafka topics observer extension (#37665)"],"opampsupervisor":[": The OnConnectionClose was not correctly connected for the supervisor. (#37761)"],"opencensusexporter":[": Deprecate the OpenCensus exporter (#36791)"],"opencensusreceiver":[": Deprecate the OpenCensus receiver (#36791)"],"pkg/datadog":[": Expose the internal Zaplogger implementation (#37939)"],"pkg/ottl":[": Introduce ToLowerCase converter function (#32942)",": Introduce ToSnakeCase converter function (#32942)",": Introduce ToUpperCase converter function (#32942)",": Introduce ToCamelCase converter function (#32942)"],"pkg/stanza":[": Allow users to configure initial buffer size (#37786)",": Remove deprecated `flush.WithPeriod`. (#37784)",": Remove deprecated func BuildWithSplitFunc from stanza/fileconsumer (#37723)",": Deprecate all functions in stanza/decode (#37734)"],"pkg/translator/jaeger/internal/jaeger":[": Remove jaeger model/converter/thrift/jaeger dependency (#37820)"],"pkg/translator/prometheusremotewrite":[": add support for metric type sum in FromMetricsV2 (#33661)"],"pkg/translator/zipkin/internal/zipkin":[": Remove jaeger model/converter/thrift/zipkin dependency (#37795)"],"processor/redaction":[": Introduce 'allowed_values' parameter for allowed values of attributes (#35840)"],"processor/tailsampling":[": Adds support for optionally recording the policy (and any composite policy) associated with an inclusive tail processor sampling decision."],"processor/transformprocessor":[": Add support for global conditions and error mode overrides. (#29017)"],"prometheusreceiver":[": Start time metric adjuster now handles reset points correctly (#37717)"],"prometheusremotewriteexproter":[": Resolves a deadlock in the WAL by temporarily releasing a lock while waiting for new writes to the WAL."],"receiver/hostmetrics":[": Remove receiver.hostmetrics.normalizeProcessCPUUtilization feature gate (#34763)"],"receiver/prometheus":[": Prometheus receiver now uses scrapers in Prometheus 3.0. (#36873)"],"receiver/zipkinreceiver":[": Remove zipkinreceiver dependency on Jaeger (#37795)"],"resourcedetectionprocessor":[": add the Dynatrace detector to the resource detection processor (#37577)"],"routingconnector":[": Remove `match_once` configuration parameter. (#36824)",": Avoid unnecessary copy of the data in routing connector (#37946)"],"s3provider":[": Delete deprecated `New` factory function. Use `NewFactory` instead. (#37921)"],"secretsmanagerprovider":[": Delete deprecated `New` function, use `NewFactory` instead (#37923)"],"splunkenterprisereceiver":[": Added a new `splunk.health` metric. (#36695)"],"stefexporter":[": Add basic STEF exporter implementation (#37759)"],"syslogreceiver":[": Support setting `on_error` config for syslog receiver. (#36906)"],"tailsamplingprocessor":[": Fix the decision timer metric to capture longer latencies beyond 50ms. (#37722)",": makes the `numeric_attribute` more flexible and allows to set only `min_value` or `max_value`, without the need to set both (#37328)",": Add support for external caches when using the Tailsampling Processor in code. (#37035)"],"telemetrygen":[": Exported the API for telemetrygen for test uses. Additionally added new E2E tests and fixed race condition (#36984)"],"testbed":[": Include the specified resource limits for CPU and memory in the benchmark results (#36720)"],"textutil":[": Remove unnecessary copy while decoding and constructing string (#37734)"],"vcenterreceiver":[": Adds three more vCenter virtual machine performance metrics (#37488)"]},"v0.120.1":{"receiver/prometheus":[": Fix Collector failing to start up if Prometheus receiver is present in config without 'fallback_scrape_protocol'. (#38018)"]},"v0.121.0":{"aesprovider":[": Promote to alpha stability (#38252)"],"awscontainerinsightreceiver":[": Remove high cardinality attribute `Timestamp` from metrics generated by `awscontainerinsightreceiver` (#35861)",": Remove high cardinality attribute `Timestamp` from metrics generated by `awscontainerinsightreceiver` (#35861)"],"awsfirehosereceiver":[": Add `cloud.provider`, `aws.log.group.names` and `aws.log.stream.names` resource attributes to logs and set scope name and version of logs and metrics ingested by awsfirehosereceiver. (#37968)",": Add support for encoding extensions (#37113)"],"awss3exporter":[": Replaced the `s3_partition` option with `s3_partition_format` to provide more flexibility to users. (#37915, #37503)",": Added `acl` option (#37935)"],"azureblobexporter":[": Add new exporter for sending telemetry to Azure Storage Blob (#35717)"],"azuremonitorreceiver":[": Fix bug where the time grain wasn't honored (#37337)"],"azuretranslator":[": Map application-defined properties for trace signals (#35402)"],"clickhouseexporter":[": Add client info to queries (#34915, #37146)"],"cloudflarereceiver":[": Ingest all attributes by default when attributes map is empty (#37720)"],"cmd/opampsupervisor":[": Allow configuring Collector process execution via environment variables, custom config files and additional arguments (#24324)"],"confmap/provider/s3":[": Promote to alpha stability (#38227)"],"coralogixexporter":[": Add support for profiles to the Coralogix exporter. (#38011)",": Add new batching capabilities to the Coralogix exporter. (#38081)",": Partial success response from Coralogix (#38022)"],"datadogexporter":[": Add supports for HTTP_PROXY, HTTPS_PROXY and NO_PROXY for logs (#36292)"],"dorisexporter":[": add new config: log_response, label_prefix, headers, log_progress_interval (#38162)",": optimize schema: add 'service_instance_id', add materialized views, add trace_graph table and trace_graph job. (#38229)"],"ecsobserver":[": Fixed ecs task tags not being included in metadata labels (#38278)"],"elasticsearchexporter":[": drop support for metrics for none, raw, and bodymap mapping modes (#37928)",": Deprecate `batcher::min_size_items` and `batcher::max_size_items` in favor of `batcher::min_size` and `batcher::max_size`. (#38243)",": Add `_metric_names_hash` field to metric documents in `otel` mode to avoid metric rejections (#37511)",": Support specifying mapping mode via client metadata (#36092)",": Add support for `data_stream.type` attribute to create dynamic index in bodymap mode. (#38000)",": Fixes the getLocations() function. It only worked with a location start of 0, which is very unlikely when a profile contains more than one sample. (#38274)",": Reintroduce schema_url fields to otel-mode metric docs (#38045)"],"envoyalsreceiver":[": Mark `envoyalsreceiver` as an alpha receiver. (#36464)",": Add node and log identifier resource attributes (#37800)"],"exporter/splunk_hec":[": Do not pass errors from draining the response body to the pipeline as a export failure. (#38118)"],"extension/sumologicextension":[": Sanitize the version before it is used to send data to SumoLogic (#37689)"],"failoverconnector":[": Refactors the failover logic and changes the retry mechanism to sample data points (#38064)"],"googlecloudexporter":[": Updated `opentelemetry-operations-go` to v0.51.0 (#38116)"],"googlecloudpubsubexporter":[": Add support for exporting ordered messages to GCP Pub/Sub (#32850)"],"iisreceiver":[": Added state and uptime metrics for application pools (#34924)"],"kafkametricsreceiver":[": Fix incorrect cluster admin initialization in consumer scraper (#36818)"],"kafkareceiver":[": Add error backoff configuration to kafka receiver which allows to wait and retry a failed message when the next consumer returns some errors. (#37009)"],"kafkatopicsobserver":[": Adding implementation and tests of the component's logic. (#37665)"],"metricstarttimeprocessor":[": add true_reset_point strategy for setting the start timestamp of cumulative points. (#37186)",": add true_reset_point strategy for setting the start timestamp of cumulative points. (#37186)"],"mongodbreceiver":[": Added mongodb replica metrics and routing logic for multiple mongodb instances (#37517)"],"netflowreceiver":[": Promote the NetFlow Receiver to alpha stability (#38255)"],"opampextension":[": Support retrieval of available components via the OpAMP extension. (#37246)"],"opampsupervisor":[": Support retrieval of available components via the OpAMP supervisor. (#37247)",": Allow configuring additional telemetry settings for the Supervisor's own telemetry (#35582)"],"otelcol_exporter_prometheusremotewrite_consumers":[": The total number of consumers that are currently sending data to the remote write endpoint."],"otelcol_exporter_prometheusremotewrite_sent_batches":[": The total number of batches sent to the remote write endpoint."],"pkg/datadog":[": StaticAPIKeyCheck available in pkg/datadog to validate Datadog api is key not empty and no invalid characters (#38223)"],"pkg/ottl":[": Support dynamic indexing of math expressions in maps and slices (#37644)",": Add `event_index` to the available paths of the span event context (#35778)",": Introduce Weekday() converter function (#38126)",": Change the `ottlmetric` context to properly display the `TransformContext` value in debug logs (#38103)",": Remove ottl\u003ccontext\u003e.Option in favor of ottl.Option[ottl\u003ccontext\u003e.TransformContext] (#38247)"],"pkg/stanza":[": Add entry's timestamp and attributes to errors logs from log transformers processors (#37285)",": Add method `ProcessBatch` to `Operator` interface in `pkg/stanza/operator` package to support batch processing. (#35455)",": Change signature of `emit.Callback` function in `pkg/stanza/fileconsumer/emit` package to emit multiple tokens. (#35455)"],"processor/k8sattributes":[": Move k8sattr.fieldExtractConfigRegex.disallow feature gate to stable (#25128)"],"processor/redaction":[": Introduce 'blocked_key_patterns' parameter (#35830)"],"processor/resourcedetection":[": Introduce retry logic for failed resource detection. (#34761)",": Add k8s.cluster.uid to kubeadm detector (#38207)",": Add a feature flag to allow the processor (and collector) to fail if resource detection fails (#37961)"],"prometheusreceiver":[": Deprecate metric start time adjustment in the prometheus receiver. It is being replaced by the metricstarttime processor. (#37186)",": Make use of creation timestamp from prometheus (#36473)"],"prometheusremotewriteexproter":[": Adds additional metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"receiver/kafkametricsreceiver":[": Add `refresh_frequency` config to `kafkametricsreceiver`, to configure custom duration for cluster metadata refresh (#37896)"],"receiver/prometheusremotewrite":[": Add value and timestamp handling in the Prometheus Remote Write receiver by using SetDoubleValue and SetTimestamp (#37277)"],"receiver/sqlquery":[": Add support for SapASE (sybase) database connections (#36328)"],"receiver/sqlserverreceiver":[": Add `server.address` and `server.port` resource attributes to SQL server receiver. (#35183)"],"receiver/statsd":[": Make all types within the config struct public (#38186)"],"receiver/webhookeventreceiver":[": Allow the request body to have multiple log lines using line breaks (#38042)"],"redactionprocessor":[": Fix redaction processor to redact span event attributes (#36633)"],"redisreceiver":[": Collect keyspace metrics even if reported dbs are nonsequential (#38135)"],"secretsmanagerprovider":[": Promote to alpha stability (#38251)"],"server.address":[": The address of the SQL server host, disabled by default."],"server.port":[": The port of the SQL server host, disabled by default."],"signalfxexporter":[": Remove the deprecated configuration option `translation_rules` (#35332)"],"signaltometricsconnector":[": `get` OTTL function is removed and expressions are now parsed using `ParseValueExpression` (#38098)"],"stefexporter":[": Mark STEF exporter as Alpha (#37759)",": Fix incorrectly implemented STEF exporter zstd compression option. (#38088)"],"telemetrygen":[": Update attribute of generated traces from `net.peer.ip` to `net.sock.peer.addr` to bring it in line with new semconv. (#38043)",": Support `--service` for all signal types, rather than just traces (#38044)",": Add support for `aggregation-temporality` flag in telemetrygen.  Supported values (delta or cumulative) (#38073)"],"testbed":[": Fix batch interval calculation to avoid possible division by zero (#38084)"],"windowsservicereceiver":[": Adding a wireframe for a new receiver: windowsservicereceiver (#31377)"]},"v0.122.0":{"attributesprocessor":[": Validate metrics configuration parameters before processing (#36077)"],"awscloudwatchencodingextension":[": Introduce new encoding extension for AWS CloudWatch Metric Streams (#37870)"],"awscloudwatchlogsexporter, awsemfexporter, awsxrayexporter":[": Adding external id support when assuming a role for AWS credentials. (#36725)"],"awscloudwatchmetricstreamsencodingextension":[": Add unmarshaler for JSON cloudwatch metric stream (#38407)",": Add support for opentelemetry1.0 format (#38408)"],"awsecscontainermetricsreceiver":[": Upgrading to aws sdk v2 (#38479)"],"awsfirehosereceiver":[": Fix cwlogs encoding to not consider CONTROL_MESSAGE records invalid (#38433)",": Remove error log when gzip reader type assertion fails due to nil value (#38352)"],"azureblobexporter":[": implementation of azure blob exporter (#34319)"],"azuremonitorexporter":[": support sending to multiple azure monitor exporters (#34188)",": support custom event for logs for azure monitor exporter (#37422)",": Fix flushes on each single Span (#37214)"],"azuremonitorreceiver":[": Adds filtering by metric and/or aggregation (#37420)"],"bearertokenauthextension":[": Add the ability to configure multiple bearer tokens for the same endpoint. (#38148)",": Add the ability to configure multiple bearer tokens for the same endpoint. (#38148)"],"cloudflarereceiver":[": Add missing telemetry for Cloudflare receiver (#38447)"],"collectdreceiver":[": apply fieldalignment to collectd records to reduce memory allocation (#37321)"],"datadogconnector":[": Remove `datagodconnector.TracesConfig`, use `datadogconfig.TracesConnectorConfig` instead (#38661)"],"datadogexporter":[": Add support for exporting metrics to Datadog using the Datadog serializer. Enable feature gate `exporter.datadogexporter.metricexportserializerclient` to send metrics with the Datadog serializer."],"datadogsemanticsprocessor":[": Add datadogsemanticsprocessor, which transforms OpenTelemetry semantic conventions to Datadog semantic conventions (#35304)"],"dbstorageextension":[": Change SQLite driver to non-CGO version (#35280)",": Optimize dbstorage.Batch() performance for single-type Operations set call (#38026)"],"deltatocumulative":[": removes legacy and clean up existing metrics (#38079)"],"elasticsearchexporter":[": Dynamically route documents by default unless `{logs,metrics,traces}_index` is non-empty (#38361)",": Change default `mapping::mode` config to `otel` (#37241)",": Add stratified downsampling to the profiles support in the elasticsearch exporter (#37893)",": Add config `logs_dynamic_pipeline` to dynamically set the document pipeline to the value of the attribute `elasticsearch.ingest_pipeline`, this only applies to logs. (#37419)"],"examples/demo":[": Remove examples/demo (#38488)"],"exporter/kafka":[": do not ask for user and password if auth mechanism is set to AWS IAM (#37417)"],"exporter/loadbalancing":[": Add support for route with composite keys (#35320)"],"extension/observer/kafakatopicsobserver":[": add support for client_id and metadata config (#38411)"],"faroexporter":[": Add Faro exporter package (#35319)"],"faroreceiver":[": Introduce a new receiver to recieve faro data (#19180)"],"filelogreceiver":[": Extend container parser log file path pattern to include rotated files. (#35137)"],"geoipprocessor":[": Add the `attributes` parameter and consider both `source.address` and `client.address` by default (#37008)"],"githubreceiver":[": add GitHub workflow job spans (#38016)",": Fixes a bug where Job Step Spans did not have the correct Parent SpanID. (#38647)"],"googlecloudexporter":[": Adds a featuregate to support user defined mapping from OTel resources to Monitored Resources (#38102)"],"headersetterextension":[": Add support for setting headers based on authentication data (#38441)"],"healthcheckv2extension":[": Fix the deadlock in healthcheckv2 extension in case of an error in the healthcheckv2 Start function. (#38269)"],"hostmetricsreceiver":[": Added the `system.linux.memory.dirty` and `system.memory.page_size` metrics. (#38672)"],"jaegerreceiver":[": Remove dependency on jaeger/cmd/agent (#38655)"],"k8sleaderelector":[": allows single instance of the receiver/exporter to be active via kubernetes leader election mechanism (#34460)"],"kafka":[": Upgrading to aws sdk v2 (#38478)"],"kafkatopicsobserver":[": Remove session_timeout and heartbeat_interval config (#38414)",": Change stability level of kafkatopicsobserver to alpha (#37665)"],"metricstarttimeprocessor":[": Decouples the cache from the strategies for adjusting (#38382)",": Add the subtract_initial_point strategy skeleton (#37186, #38379)",": Use a hash of resource attributes to cache start times for metrics (#38286)"],"mongodbreceiver":[": Added new mongodb metrics to achieve parity with Telegraf (#37227)"],"mysqlreceiver":[": Fixed issue where the system attempted to convert string value '0.0000' (stored as []uint8) to int64 type, which was causing an invalid syntax error. (#38276)"],"opampsupervisor":[": add ability to report own traces/logs (#38360)",": Support HTTP endpoint for opampsupervisor (#38654)",": Add support for configuring the Logs SDK (#38477)",": Use OwnLogsConnSettings along with Metrics \u0026 Traces settings to evaluate if configuration changed on message. (#38409)"],"otelcol_deltatocumulative.datapoints.dropped":["to `otelcol_deltatocumulative_datapoints{error=\"...\"}`"],"otelcol_deltatocumulative.datapoints.processed":["to `otelcol_deltatocumulative_datapoints`"],"otelcol_deltatocumulative.max_stale":["to `otelcol_deltatocumulative_max_stale`"],"otelcol_deltatocumulative.streams.limit":["to `otelcol_deltatocumulative_streams_limit`"],"otelcol_deltatocumulative.streams.tracked":["to `otelcol_deltatocumulative_streams_tracked`"],"otlpjsonfilereceiver":[": Fix nil pointer dereference due to empty token (#38289)"],"pkg/ottl":[": Enhance flatten() editor to resolve attribute key conflicts by adding a number suffix to the conflicting keys. (#35793)",": Add `IsValidLuhn()` checksum verification function (#37880)",": Add ability to compare maps in Boolean Expressions (#38611)",": Add `Murmur3Hash`and `Murmur3Hash128` functions to convert the `target` string to Murmur3 hash in hexadecimal string format (#34077)",": Fix limitation of map literals within slice literals not being handled correctly (#37405)",": Add support for parsing OTTL conditions to the `ottl.ParserCollection`. (#37904)"],"pkg/pdatatest":[": Add ValidateProfile() function to validate pprofile.Profile. (#38452)",": Simplify generating profiles for testing by transforming Go structs to profiles. (#38430)"],"pkg/stanza":[": Add 'regex_replace' operator (#37443)",": Prevent data loss in Stanza-based receivers on ungraceful shutdown of the collector (#35456)"],"pprofreceiver":[": Introduce a new receiver to report pprof profiles (#38260)"],"probabilisticsampler":[": Logs priority sampling behavior applies only when the priority attribute is present. (#38468)"],"processor/redaction":[": Support hashing instead of masking values via 'hash_function' parameter (#35830)"],"prometheusremotewriteexproter":[": Adds the `endpoint` label to remote write exporter metrics to help identify the remote write endpoint within the metrics. (#38397)"],"prometheusremotewritereciever":[": Handle `otel_scope_name` and `otel_scope_version` labels in Prometheus Remote Write receiver properly if not present (#37791)"],"rabbitmqreceiver":[": Enhance the RabbitMQ receiver to collect and report node-level metrics (`rabbitmq.node.disk_free`, `rabbitmq.node.fd_used`, `rabbitmq.node.mem_limit`, and `rabbitmq.node.mem_used`). This provides additional observability into the state and resource usage of RabbitMQ nodes. (#36925)"],"receiver/awscloudwatchreceiver":[": Upgrading to adopt AWS SDK v2 (#36699)"],"receiver/azuremonitorreceiver":[": Add dimensions.enabled and dimensions.overrides which allows to opt out from automatically split by all the dimensions of the resource type (#36611)"],"receiver/prometheus":[": Adds the Prometheus API server to more easily debug the Prometheus config, service discovery, and targets. (#32646)",": Adds the Prometheus API server to more easily debug the Prometheus config, service discovery, and targets. (#32646)"],"receiver/sqlserverreceiver":[": SQL Server receiver now requires a positive serial number for X509 certificates. (#38099)"],"receiver/webhookeventreceiver":[": Add option to include headers as log attributes (#37815)"],"redisstorageextension":[": allow redis key prefix to be specified in extension config (#37677)"],"resourceprocessor":[": Add support for profile signal type (#359979)"],"routingconnector":[": Adds Standard Converter functions to routing connector. (#38282)"],"saphanareceiver":[": Promote to alpha stability (#38257)"],"schemaprocessor":[": Adds functionality to transform logs (#38615)",": Adds functionality to transform traces (#38486)"],"secretsmanagerprovider":[": Allow for default values when the selector is empty or the JSON key is not found (#37535)"],"sematextexporter":[": Advanced metrics implementation (#36465)",": basic metrics implementation (#36465)"],"servicegraphconnector":[": Change the default value of `metrics_flush_interval` to 60s to avoid excessive metric data point generation with default settings."],"splunkhecreceiver":[": splunk hec receiver accepts metrics with empty string Event field (#38464)"],"sqlqueryreceiver":[": Allow users to specify the maximum number of concurrent open connections to DB server using `max_open_conn` config parameter (#36752)"],"sqlserverreceiver":[": Add new performance-related metrics (#37884)"],"syslogexporter":[": Fixes handling of multiple structured data elements (#33300)"],"tcpcheckreceiver":[": Introducing new component tcpcheck receiver (#34414)",": Promote to alpha stability (#38442)"],"telemetrygen":[": Support integer values in `--telemetry-attributes` and `--otlp-attributes` flags (#38392)"],"tlscheckreceiver":[": Implement TLS Check Receiver for host-based checks (#35842)",": Promote to alpha stability (#38460)"]},"v0.123.0":{"awscloudwatchencodingextension":[": Increase component stability to Alpha (#37870)"],"awscloudwatchmetricstreamsencodingextension":[": Return errors when extracting the metrics from the record instead of logging them. (#38596)"],"awsecscontainermetrics":[": Ensure that the storage.read_bytes and storage.write_bytes metrics include i/o counts from all devices (#38301)"],"awsfirehosereceiver":[": Fixes unmarshal error when request is larger than the buffer limit of bufio.Scanner (#38736)"],"awslogsencodingextension":[": Add AWS Logs Encoding Extension to support decoding logs produced by AWS services (#38627)",": Add support for cloudwatch logs coming from subscription filters. (#38820)"],"awss3exporter":[": Implement timeout for S3 exporter (#36264)"],"axw:prometheusremotewritereceiver-fix-tests":[": wait for listening port to be closed before shutting down receiver (#38705)"],"azureauthextension":[": Add new authenticator extension for Azure. (#38908)",": Implement extensionauth.Server and azcore.TokenCredential. (#39012)"],"azuremonitorexporter":[": support span links for traces for azure monitor exporter (#35855)"],"bearertokenauthextension":[": Allow the header name to be customized in the bearerauthtoken extension (#38793)"],"elasticsearchexporter":[": Remove deprecated fields [min|max]_size_items from batch config (#38836)",": Enable native frame symbolization for Universal Profiling via the symbolization queue indices. (#38577)",": Remove deprecated fields [min|max]_size_items from batch config (#38836)"],"farotranslator":[": Add Faro translator package (#19180, #35319)"],"hostmetricsreceiver":[": Reduced the cost of retrieving number of threads and parent process ID on Windows. Disable the featuregate `hostmetrics.process.onWindowsUseNewGetProcesses` to fallback to the previous implementation.",": Reduced the CPU cost of collecting the `process.handles` metric on Windows. (#38886)"],"include_instrumentation_scope":[": A list of instrumentation scope names to include from the traces."],"k8sattributesprocessor":[": Remove stable feature gate `k8sattr.rfc3339` (#38810)"],"k8slogreceiver":[": Add the skeleton for the new k8slogreceiver in development. (#23339)"],"kafkaexporter":[": change default client_id to \"otel-collector\" (#38411)",": Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kafkametricsreceiver":[": change default client_id to \"otel-collector\", deprecate \"refresh_frequency\" (#38411)",": Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kafkareceiver":[": Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)",": make calls to error backoff thread-safe and add logging (#38941)",": Disable exposing factory options programmatically on NewFactory. (#38874)"],"kafkatopicsobserverextension":[": Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kakfaexporter":[": Disable exposing factory options programmatically on NewFactory. (#38874)"],"lokiexporter":[": Add lokiexporter component to the contrib distribution (#38993)"],"metricstarttimeprocessor":[": Add reset detection for histograms (#38582)"],"opampsupervisor":[": Allow controlling Collectors that don't include the nopreceiver and nopexporer (#38809)",": Report the reception of an unexpected UID during bootstrapping (#29864)"],"oracledbreceiver":[": Add support for additional read/write metrics (#37814)"],"pkg/ottl":[": Enhance the Decode OTTL function to support all flavors of Base64 (#38854)",": Fix the `ottl.ParserCollection` to properly infer the OTTL context when using the `ParseConditions` function. (#38755)"],"pkg/pdatatest":[": Change type of attribute values from string to any. (#39006)"],"pkg/stanza":[": Add retries when calls to retrieve Windows event via `EvtNext` fail with error RPC_S_INVALID_BOUND (1734). (#38149)"],"prometheusremotewriteexporter":[": Remove `export_created_metric` config option (#35003)",": Adds logic to convert from the internal OTEL Metrics unit format to Prometheus unit format and emit unit as part of Prometheus metadata. (#29452)",": Disallow users from setting compression type other than snappy (#37232)",": Adds logic to convert from the internal OTEL Metrics unit format to Prometheus unit format and emit unit as part of Prometheus metadata. (#29452)"],"prometheusremotewritereceiver":[": Use Created Timestamps to populate Datapoint's StartTimeUnixNano (#37277)"],"prometheusremotewritereciever":[": Add help ref attribute to metric (#37277)",": Separate timeseries with the same labels are now translated into the same OTLP metric. (#37791)"],"rabbitmqreceiver":[": Enhance the RabbitMQ receiver to collect and report additional node-level metrics: `rabbitmq.node.disk_free`, `rabbitmq.node.disk_free_limit`, `rabbitmq.node.disk_free_alarm`, `rabbitmq.node.disk_free_details.rate`, `rabbitmq.node.mem_used`, `rabbitmq.node.mem_limit`, `rabbitmq.node.mem_alarm`, `rabbitmq.node.mem_used_details.rate`, `rabbitmq.node.fd_used`, `rabbitmq.node.fd_total`, `rabbitmq.node.fd_used_details.rate`, `rabbitmq.node.sockets_used`, `rabbitmq.node.sockets_total`, `rabbitmq.node.sockets_used_details.rate`, `rabbitmq.node.proc_used`, `rabbitmq.node.proc_total`, `rabbitmq.node.proc_used_details.rate`. These provide additional observability into the state and resource usage of RabbitMQ nodes. (#38976)",": Enhance the RabbitMQ receiver to collect and report additional node-level metrics across multiple categories. These include metrics related to memory, file descriptors, sockets, processes, disk, uptime, scheduling, garbage collection (GC), I/O, message store, connections, clustering, configuration, application info, and context switches. This significantly improves visibility into the performance, state, and resource usage of RabbitMQ nodes. (#38997)"],"receiver/azuremonitorreceiver":[": multi subscriptions support and automatic discovery (#36612)"],"receiver/sqlserver":[": the current metric scraper would report error when parsing value, the value was parsed as int but actually it should be a float (#38823)",": Ensure all enabled metrics are emitted (#38839)",": Remove warning that `server.address` and `server.port` resource attributes will be enabled (#38831)"],"redisstorageextension":[": fix missing redis prefix in Batch method (#38877)"],"resourcedetection":[": Adding the os.version resource attribute to system resourcedetection processor (#38087)"],"schemaprocessor":[": Add functionality to transform metrics for the schema processor."],"spanmetricsconnector":[": Add instrumentation scope to span metrics connector. (#23662)"],"splunkhecreceiver":[": Splunk HEC timestamp accepts nanoseconds, microseconds, milliseconds, and seconds epoch. (#36571)"],"sqlserverreceiver":[": support sqlserverreceiver to record every executing query (#36462)",": Support query-level log collection (#36462)"],"stefexporter":[": Avoid embedding the QueueConfig, avoids potential conflicts (#38887)"],"stefreceiver":[": Add structure of new receiver (#38979)"],"tcpcheckreceiver":[": Fixed typo in \"Metric configuration\". (#38889)"],"telemetrygen":[": Fixes invalid HistogramDataPoint messages generated by telemetrygen. (#39025)"],"tlscheckreceiver":[": Add file-based TLS certificate checks (#38906)",": add `tlscheck.x509.san` attribute (#38872)"],"tpmextension":[": Add scaffolding for Trusted Platform Module extension. (#38682)"],"workflow":[": Remove path parts from component label suffixes (#38527)"]},"v0.124.0":{"alertmanagerexporter":[": Add alert labels based on event attribute list in alermanager exporter (#38063)",": Add support for api version in Alertmanager endpoint, default is v2 (#38694)"],"awslogs_encoding":[": Add support for VPC flow logs sent to S3 in plain text format. (#38896)"],"awslogsencodingextension":[": Rename aws.eni.id attribute to network.interface.name and update README (#39051)",": Add support for ECS fields. (#39241)",": Improve performance when unmarshalling plain-text VPC flow logs. (#39043)"],"awss3exporter":[": Fixes an issue where the AWS S3 Exporter was forcing an ACL to be set, leading to unexpected behavior in S3 bucket permissions (#39346)"],"azureauthextension":[": Add implement for extensionauth.HTTPClient and extensionauth.Server interface functions. (#39178)",": Use credentials to handle the access token. (#39057)"],"azureblobexporter":[": support for append blob in azure blob storage exporter (#39075)",": change to alpha for azure blob exporter (#39272)"],"azuremonitorreceiver":[": Add subscription name resource attribute (#39029)",": Allow to use metrics:getBatch API (Azure Monitor Metrics Data Plane) (#38651)"],"clickhouseexporter":[": use a more precise conversion function to create TTL (#38942)"],"connector/spanmetrics":[": This change proposes moving the start timestamp (and last seen timestamp) from the resourceMetrics level to the individual metrics level. This will ensure that each metric has its own accurate start and last seen timestamps, regardless of its relationship to other spans. (#35994)"],"datadogexporter":[": Deprecate config `host_metadata::first_resource` (#39069)",": Deprecate feature gate `exporter.datadogexporter.metricexportnativeclient`. Datadog exporter now uses the serializer to send metrics by default. (#39148)",": Move feature gate `exporter.datadogexporter.metricexportserializerclient` to beta. Datadog exporter now uses the serializer to send metrics by default. (#39148)",": Fix a bug on missing APM stats when feature gate `exporter.datadogexporter.metricexportserializerclient` is enabled. (#39148)",": Fix a bug on `instrumentation_scope_metadata_as_tags` not being honored when feature gate `exporter.datadogexporter.metricexportserializerclient` is enabled. (#39148)",": Remove deprecated exporter configs. The exporter now uses pkg/datadog/config (#39104)"],"elasticsearchexporter":[": Add `telemetry::log_failed_docs_input` and `telemetry::log_failed_docs_input_rate_limit` config to facilitate debugging of failed bulk request items (#39205)",": Handle edge cases in metrics grouping causing TSDB version_conflict_engine_exception (#38083)"],"extension/headerssetter":[": Change `DefaultValue` to use `configopaque.String` type. (#39127)",": Change `DefaultValue` to use `configopaque.String` type. (#39127)"],"faroexporter":[": Completes the implementation of the Faro exporter. (#35319)"],"farotranslator":[": Adds support for user actions in the Faro translator. (#39141)"],"googlecloudlogentryencodingextension":[": Add Google Cloud LogEntry Encoding Extension to support decoding logs produced by Google Cloud services (#37531)"],"k8sattributesprocessor":[": Add option to configure automatic resource attributes - with annotation prefix (#37114)"],"k8sclusterreceiver":[": Add missing attributes to entities in experimental entity feature (#39038)"],"kafkaexporter":[": Deprecate `auth::tls` and introduce `tls` config (#37776)",": deprecate `topic` and `encoding`, introduce signal-specific configuration (#35432)",": Propagate metadata keys as headers (#39130)",": enable partitioning for all encodings (#39001, #38999)"],"kafkametricsreceiver":[": Deprecate `auth::tls` and introduce `tls` config (#37776)"],"kafkareceiver":[": Deprecate `auth::tls` and introduce `tls` config (#37776)",": Add signal-specific topic and encoding config, deprecate existing topic/encoding config. (#32735)",": Propagate Kafka headers as metadata (#39129)"],"kafkatopicsobserverextension":[": Deprecate `auth::tls` and introduce `tls` config (#37776)"],"metricstransformprocessor":[": Fix aggregation of exponential histograms in metricstransform processor. (#39143)"],"opampsupervisor":[": add support for including local configuration files (#37886)"],"oracledbreceiver":[": Add support for parallel operations metrics (#39215)"],"ottlprofile":[": Add OTTL support for profiles. (#36104)"],"pkg/ottl":[": Fix OTTL context inference order to prioritize the `scope` context over `resource`. (#39155)",": Fix so replace_all_patterns can replace keys using optional function (#32896)",": Remove experimental transform context option `WithCache` from all OTTL contexts. (#39338)"],"pkg/pdatatest":[": Introduce IgnoreExemplars, IgnoreExemplarSlice and ChangeDatapointAttributeValue to CompareMetricsOption (#39004)"],"pkg/stanza":[": Use buffer pool for the read buffers to limit allocations\" (#39373)",": Remove unnecessary slice allocation to track errors (even nil) (#39367)"],"postgresqlreceiver":[": add top query collection to help end user identify which query were executed in the postgresql database. (#39311)"],"processor/transform":[": Fix Basic Config style to properly handle `cache` access. (#38926)"],"receiver/filelog":[": names of files are printed repeatedly to `stdout` #39414"],"receiver/kubeletstats":[": support user defined CA path for service account using the configtls option `ca_file` (#39291)",": support user defined CA path for service account using the configtls option `ca_file` (#39291)"],"receivercreator":[": Add kafkatopicsobserver to the receivercreator configuration (#37665)"],"servicegraphconnector":[": Change database_name_attribute to accept a list of values. (#37777)",": Metrics for spans with extra dimensions configured are incorrectly being aggregated together despite the dimension values being different. (#39160)",": Fix collectClientLatencyMetrics method bug (#39184)"],"signalfxexporter":[": Errors will now include the URL that it was trying to access (#39026)"],"signaltometricsconnector":[": Allow to configure `optional` attributes which are copied as-is to the output metric. (#38600)"],"sigv4auth":[": Added support for authenticating with AssumeRoleWithWebIdentity API (#103107)"],"spanmetricsconnector":[": Initialise new calls_total metrics at 0 (#38537)"],"splunkenterprisereceiver":[": added new attributes to the receiver and modified config (#36330)",": disabled default metrics except for splunkHealth to ensure scrapes run on Splunk instance are opt-in (#39068)",": Fixes `otelcol_scraper_errored_metric_points` metric, which was not incrementing properly (#38691)"],"splunkhecexporter":[": Errors will now include the URL that it was trying to access (#39026)"],"sqlserverreceiver":[": update the unit of `db.lock_timeout` attribute from millisecond to second. this attribute is part of the emitted query sample collection. (#39042)",": Allow full control of the \"connection string\" via the `datasource` configuration option (#39235)"],"stefreceiver":[": Make the receiver initially code complete (#38979)"],"telemetrygen":[": Fix flaky test TestTemporalityStartTimes (#39219)",": fix startTimestamp when generating cumulative temporality datapoints. (#38232)"],"testbed":[": Specify `storage` parameter for filelog receiver in benchmarks (#39217)"]},"v0.124.1":{"receiver/filelog":[": Remove printing to console the names of files which are read by File Log receiver (#39414)"]},"v0.125.0":{"awscloudwatchlogsexporter":[": Add dynamic log_group_name and log_group_stream naming, based on awsemfexporter (#31382)"],"awscloudwatchreceiver":[": Adds option to set storage for AWS CloudWatch receiver (#32231)"],"awslogsencodingextension":[": Add support for S3 Access Logs. (#39161)"],"awss3exporter":[": add configuration field `resource_attrs_to_s3/s3_prefix` to support mapping s3 bucket prefix to OTel resource attributes (#37858)",": add configuration field `resource_attrs_to_s3/s3_prefix` to support mapping s3 bucket prefix to OTel resource attributes (#37858)"],"azureauthextension":[": Update stability to alpha. (#39574)"],"azureblobexporter":[": Add SerialNumBeforeExtension option to BlobNameFormat in Azure Blob exporter as an option to avoid breaking file extension (#39593)"],"countconnector":[": Add profiles support (#39577)"],"datadogexporter":[": Fix a race condition in metric serializer exporter where the exporter may not be fully initialized when it receives metrics (#39669)"],"datadogextension":[": Introduce framework for Datadog Extension (#39589)"],"deltatocumulative":[": fixes misuse of xsync, leading to bad mutex unlock (#39106)"],"dnslookupprocessor":[": Add structure of new processor (#34398)"],"elasticsearchexporter":[": Add support for include_source_on_error, which configures whether bulk index responses should include source document on error (#39211)",": Introduce LRU cache for profiles (#38606)",": Add support for extracting mapping mode from a scope attribute. (#39110)"],"filelogreceiver":[": Fix frozen receiver when max_concurrent_files is 1 (#39598)"],"geoipprocessor":[": Close providers readers on shutdown (#38961)"],"githubreceiver":[": add dedicated job queue spans with cicd.pipeline.run.queue.duration attribute (#39081)",": Fix span end times for skipped and cancelled workflows (#39020)"],"hostmetricsreceiver":[": Possible to enable the process scraper under FreeBSD in the hostmetrics receiver. (#39622)"],"k8sclusterreceiver":[": add support for k8s leader election in k8s cluster receiver (#38429)"],"k8sobjectsreceiver":[": Check for K8s API objects existence on receiver startup and not during config validation. (#38803)",": Introduces `error_mode`, so users can choose between propagating, ignoring, or silencing missing objects. (#38803)"],"kafkareceiver":[": Add support for configuring Kafka consumer rebalance strategy and group instance ID (#39513)",": Added a new 'topic' attribute to all existing internal consume-claim metrics. (#35336)",": Add `max_fetch_wait` config setting (#39360)",": `name` label will be correctly set in receiver metrics (#39483)"],"kubeletstatsreceiver":[": Adds support for collecting Node and Pod network IO/error metrics for all network interfaces (#30196)"],"opampextension":[": Introduces a new config field `include_resource_attributes` which allows the extension to copy the agent's resource attributes to the non-identifying attributes in the agent description. (#37487)",": Skips loading TLS config for insecure endpoints (#39515)"],"opampsupervisor":[": Add support for the opampsupervisor to be able to start with only local config (#38794)",": Supervisor will no longer report a config status of \"applying\" if the config has not changed (#39500)",": fixes OpAMP Supervisor macOS example config (#39492)"],"pkg":[": Improve performance of azure logs translator. (#39340)"],"pkg/golden":[": Expose methods to write data to file outside of the scope of a test (#39673)"],"pkg/ottl":[": Add `ottl.WithContextInferenceConditions` option to allow configuring extra context inferrer OTTL conditions (#39455)",": Add PMapGetSetter interface and StandardPMapGetSetter type. (#39657)"],"processor/k8sattributes":[": Change processor/k8sattributes to return error if unset envvar is used for `node_from_env_var` (#39447)"],"prometheusreceiver":[": When a histogram metric has both classic and native histogram buckets, keep both, instead of throwing away the native histogram buckets. (#26555)"],"prometheusremotewritereceiver":[": Cache `target_info` metrics so it can be used to populate metrics' Resource Attributes. (#37277)"],"receiver/kubeletstats":[": Move receiver.kubeletstats.enableCPUUsageMetrics feature gate to beta (#39487)"],"receiver_creator":[": Fix kafkametrics receiver instantiation (#39313)"],"receivercreator":[": Fix how escaped backticks are handled in receiver creator templates (#39163)"],"resourcedetectionprocessor":[": change the EKS cluster identifier and check the cluster version instead of the existence of aws-auth configmap (#39479)",": change the EKS cluster identifier and check the cluster version instead of the existence of aws-auth configmap (#39479)"],"sematextexporter":[": basic logs implementation (#36465)"],"signaltometricsconnector":[": Add profiles support (#39609)",": Fix incorrect result for metrics configured with same name but different type (#39442)"],"spanmetricsconnector":[": Deprecate the unused configuration `dimensions_cache_size` (#39646)",": Add new `aggregation_cardinality_limit` configuration option to limit the number of unique combinations of dimensions that will be tracked for metrics aggregation. (#38990)"],"splunkhecexporter":[": Use ObservedTimestamp if Timestamp is empty. (#39221)"],"sqlqueryreceiver":[": respect `max_open_conn` configuration for multiple queries (#39270)"],"sqlserverreceiver":[": `host.name`, `sqlserver.computer.name`, and `sqlserver.instance.name` are now resource attributes instead of log attributes. We used to report `computer_name` and `instance_name` in the log attributes for top query collection and they are now deprecated. Now we report the three resources attributes in both top query collection and sample query collection. (#39449)",": Accept `context_info` with `traceparent` format in query sample collection, setting log record with correct traceId and spanId. (#39539)"],"statsdreceiver":[": Add new config to customize socket permissions when transport is set to `unixgram`. (#37807)"],"tcpcheckreceiver":[": Fix tcpcheck.error to report as a cumulative value instead of always being 1. (#39234)"],"tcplogreceiver":[": Ignore SplitFuncBuilder field to prevent panic during config marshaling (#39474)"],"transformprocessor":[": Fix the context inferrer to also take into consideration the global OTTL conditions configuration. (#39455)",": Fix the context inferrer to also take into consideration the global OTTL conditions configuration. (#39455)"]},"v0.126.0":{"awsfirehosereceiver":[": support all possible quantile values of CloudWatch metrics in addition to quantile 0 (min) and 1 (max) (#39687)"],"azuremonitorexxporter":[": support logging exceptions for azuremonitor exporter (#38432)"],"azuremonitorreceiver":[": Renamed the `auth` field to `credentials` in the azuremonitorreceiver configuration. (#39738)"],"carbonreceiver":[": Support unnamed groups in carbon receiver regex parser (#39137)"],"clickhouseexporter":[": clickhouseexporter doesn't set the database name in the dsn of the query that creates the database (#38829)"],"cmd/golden":[": Add a docker image for golden (#39662)"],"cmd/opampsupervisor":[": Fix slice merging when using local configuration files (#39947)"],"confmap/googlesecretmanager":[": Mark the Google Secret Manager provider as alpha stability. (#39665)",": Update scheme to use googlesecretsmanager instead of googlesecretmanagerprovider. (#39971)"],"confmap/googlesecretmanagerprovider":[": Initial implementation of secrets manager provider. Allows fetch secrets from Google Secrets Manager (#39665)"],"coralogixexporter":[": Remove deprecated batcher config for coralogixexporter, use sending_queue::batch (#39960)"],"datadogexporter":[": Enable instrumentation_scope_metadata_as_tags by default in datadogexporter. Scope attributes are now added as tags to metrics. (#39767)",": Fixes a memory leak in the Datadog exporter caused by an uninitialized logger. (#39959)"],"datadogreceiver":[": Support 128 bits TraceIDs coming from Datadog (#36926)"],"dockerstatsreceiver":[": Returns Docker client options, using the DOCKER_HOST environment variable if no endpoint is configured. (#35779)"],"elasticsearchexporter":[": Report Elasticsearch request success / failure via componentstatus (#39562)"],"eventlogreceiver":[": add raw XML query filtering option (#38517)",": add raw XML query filtering option (#38517)"],"faroreceiver":[": Completes the implementation of the Faro receiver. (#19180)"],"fileconsumer":[": Support \"`compression:auto`\" which automatically detects file compression type and ingests data. Currently, only gzip compressed files are auto detected. This allows for mix of compressed and uncompressed files to be ingested with the same filelogreceiver. (#37772)"],"fluentforwardreceiver":[": Unexport AckResponse (#39831)"],"githubreceiver":[": fix queue span lengths caused by GitHub event timestamp bug (#39824)"],"golden":[": Add a new CLI, golden, to run comparison of expected payloads over OTLP. (#39662)"],"googlecloudexporter":[": Updated the exporter.googlecloud.CustomMonitoredResources featuregate to support user defined mapping from OTel resources to Monitored Resources for logging (#40001)"],"googlecloudlogentryencodingextension":[": Update stability to alpha. (#37531)"],"googlecloudpubsubreceiver":[": Add `ignore_encoding_error` configuration to ignore decoding failures from the configured encoder (#38164)",": Add deprecation warning for the build-in encoders (#39371)"],"k8sobjectsreceiver":[": k8sobject receiver support leader election (#39054)"],"kafkaexporter":[": Add compression level in kafka producer. (#39772)",": Make Sarama's ConfigurationError as permanent to prevent retries (#38604)",": fix the default topic configuration, and default message partitioning (#39810, #39816)"],"kafkareceiver":[": Fix support for built-in text encodings with hyphens in the encoding name (#39793)"],"metricstarttimeprocessor":[": Implementation of the subtractinitial strategy (#38379)"],"mongodbatlasreceiver":[": Add support for setting custom base URL for the MongoDB Atlas API (#39345)"],"netflowreceiver":[": Add `send_raw` option to send logs as a raw string in the log body instead of parsed into attributes. (#38920)"],"oidcauthextension":[": Add ignore_audience config option for ignoring oidc audience (#36568)"],"opampsupervisor":[": Remnove `agent.health_check_port`. (#39908)",": Update supervisor to forward the agent's ComponentHealth message to the server whenever it is received. (#39890)"],"pkg":[": Remove the fields from category AzureCdnAccessLog from the body log record and place them as log record attributes. (#39811)",": Fix empty resource attributes in the azure logs translator (#39571)"],"pkg/datadog":[": Switch feature gate datadog.EnableOperationAndResourceNameV2 to beta. This gate affects exporter/datadog and connector/datadog. It modifies the logic for computing operation names from OTLP spans to produce shorter, more readable names and improve alignment with OpenTelemetry specifications. (#39895)"],"pkg/ottl":[": Add support for HasPrefix and HasSuffix functions (#39825)",": Add the OTTL function ProfileID() (#39587)",": OTTL is now officially considered Beta stability (#39910)"],"pkg/stanza/fileconsumer":[": Mute new reader log when the noStateTracker is used (#39855)"],"pkg/winperfcounters":[": Add methods to scrape raw values from Windows performance counters. (#39835)"],"postgresqlreceiver":[": Reduce component footprint by removing the loading of unnecessary SQL drivers (#39918)",": we introduced the top query collection to postgresql receiver. this will collect the queries from `pg_stat_statements` and report the related metrics. this will help the end user to identify which queries are most executed, and resources most used. (#39573)"],"processor/metricstarttime":[": Upgrade the stability to `Alpha` (#39857)"],"processor/redaction":[": Apply redaction to log.body (#37239)"],"processor/tailsampling":[": The invert decisions (InvertSampled and InvertNotSampled) have been deprecated, please make use of drop policy to explicitly not sample select traces. (#39833)",": New policy type to explicitly drop traces regardless of other policy decisions. (#39668)"],"processor/transform":[": The transformprocessor is now officially considered Beta stability (#39928)"],"prometheusreceiver":[": Add 'fallback_scrape_protocol' to entries obtained through Target Allocator, unless already defined. (#39672)",": Convert ms to s when setting start time on the metric (#39912)"],"prometheusremotewriteexporter":[": Add `exporter.prometheusremotewritexporter.enableSendingRW2` feature gate and configuration to the exporter to send Prometheus remote write 2.0 version. (#33661)",": Add `exporter.prometheusremotewritexporter.enableSendingRW2` feature gate and configuration to the exporter to send Prometheus remote write 2.0 version. (#33661)"],"receiver/hostmetricsreceiver":[": Migrated `hostmetricsreceiver` to use `pkg/winperfcounters` when retrieving Windows performance counters. (#38858)"],"receiver/k8scluster":[": Add node name to pod metadata (#37454)"],"receiver/ntp":[": Move ntpreceiver to beta stability (#39897)"],"receiver/prometheus":[": Upgrade `receiver.prometheusreceiver.RemoveLegacyResourceAttributes` feature gate to `beta` stability (enabled by default) (#32814)"],"receiver/sqlserver":[": Properly parse numbers stored in scientific notation to integers (#39124)"],"signaltometricsconnector":[": Fix same metric name, unit, and type with different description ignoring description (#39736)"],"spanmetricsconnector":[": Separate Dimensions for calls and duration metrics (#36805)"],"splunkenterprisereceiver":[": adds `splunk.indexer.rollingrestart.status` metric (#39023)",": Added a new `splunk.search.initiation`, `splunk.search.duration`, `splunk.search.status`, and `splunk.search.success` metrics. (#39566)",": Unexport InfoEntry and InfoContent (#39830)"],"sqlserverreceiver":[": Update event properties (#39868)"],"stefexporter":[": Implement async exporting (#39958)"],"tailsamplingprocessor":[": Fix the misleading decision timer latency metric (#38502)"]},"v0.127.0":{"awsfirehosereceiver":[": Parse encoding as a component ID, not just type, allowing for named encodings. (#39808)",": Fix decoding for OTLP-formatted metrics. (#39462)"],"awss3exporter":[": Add the retry mode, max attempts and max backoff to the settings (#36264)"],"awss3receiver":[": Add SQS support to the awss3receiver component (#36315)"],"azuremonitorreceiver":[": Add support for azureauthextension as a token provider for azuremonitorreceiver. (#39048)",": use ``metrics`` aggregation filter when ``use_batch_api: true`` (#40079)"],"cloudfoundryreceiver":[": Unexport EnvelopeStreamFactory and UAATokenProvider (#40270)"],"cmd/opampsupervisor":[": Fix race condition where the Supervisor could report the wrong health status (#40207)"],"coralogixexporter":[": Added a mechanism to drop telemetry data when rate limit, quota or authorization errors are encountered. (#40074)",": Print metrics causing the partial success response from the backend. (#40199)"],"datadogreceiver":[": Address semantic conventions noncompliance and add support for http/db (#36924)"],"datdogexporter, datadogconnector":[": Graduate the datadog.EnableReceiveResourceSpansV2 feature gate to beta. (#40083)"],"duration":["is the duration of the rate limit window (default: 1 minute)."],"elasticsearchexporter":[": Fix panic when encoding non-string scope attributes. (#37701)"],"enabled":["is a boolean flag to enable the rate limiter mechanism."],"exporter/datadog":[": Correctly treat summary counts as cumulative monotonic sums instead of cumulative non-monotonic sums (#40176)"],"faroreceiver, faroexporter":[": Stability level changed from development to alpha. (#40000)"],"filelogreceiver":[": Introduce `utf8-raw` encoding to avoid replacing invalid bytes with \\uFFFD when reading UTF-8 input. (#39653)"],"fluentforwardreceiver":[": Unexport all structs in fluentforward receiver. (#40108)"],"gitlabreceiver":[": add GitLab pipeline tracing functionality (#35207)"],"golden":[": Return an error on timeout without receiving any data (#40076)"],"googlecloudexporter":[": Update the MapMonitoredResource mapping when the exporter.googlecloud.CustomMonitoredResources feature flag is used (#40186)"],"internal/splunk":[": Treat HTTP 403 Forbidden as a permanent error. (#39037)"],"k8sattributesprocessor":[": Add option to configure automatic service resource attributes (#37114)"],"k8sobserver":[": Add namespaces setting for scoping k8s client to specific namespaces (#39677)",": Unexport RunningContainer (#40228)"],"kafkaexporter":[": Allow kafka exporter to produce to topics based on metadata key values (#39208)"],"kafkareceiver, kafkaexporter":[": Add support for named encoding extensions in kafkareceiver and kafkaexporter (#40142)"],"libhoneyreceiver":[": Handle paths without slashes at the end by adding them (#40070)"],"lokireceiver":[": Add support for structured metadata in lokireceiver (#40095)"],"netflowreceiver":[": Unexport OtelLogsProducerWrapper (#40269)"],"opampsupervisor":[": Fix bug in order of configuration composition and server start (#39949)",": If there is a remote config, the supervisor now reports the remote config as applied and the correct hash on startup. (#40233)"],"otelcol_exporter_prometheusremotewrite_wal_writes":[": The total number of WAL writes."],"otelcol_exporter_prometheusremotewrite_wal_writes_failures":[": The total number of WAL write failures."],"pkg/experimentalmetricmetadata":[": Add missing otel.entity.type field to the delete events (#40279)"],"postgresqlreceiver":[": fix too many top query got reported. top query should only report those queries were executed during the query interval (#39942)",": Unexport Item (#40265)"],"processor/tailsampling":[": Add first policy match decision to tailsampling processor (#36795)"],"prometheusremotewriteexproter":[": Adds wal metrics to the Prometheus Remote WRite Exporter. The new metrics are:"],"receiver/k8sclusterreceiver":[": Added new resource attributes `k8s.hpa.scaletargetref.kind`, `k8s.hpa.scaletargetref.name`, and `k8s.hpa.scaletargetref.apiversion` to the `k8s.hpa` resource.  These attributes are disabled by default. (#38768)"],"receiver/netflow":[": Adds additional common EtherTypes for `network.type`. (#40219)"],"receiver/sqlserver":[": Add new metric for disk IO rate on a resource pool (#39977)",": Add new metric `sqlserver.lock.wait.count` (#39892)",": Add new metric to track OS wait times (#39977)",": Enable `sqlserver.page.life_expectancy` metric for all configurations (#39940)"],"receiver/vcenter":[": unexport struct DatacenterStats (#40109)"],"signaltometricsconnector":[": Add support for parsing gauge metrics from any signal types (#37093)"],"spanmetricsconnector":[": Fix bug causing span metrics calls count to be always 0 when using delta temporality (#40139)"],"sqlserverreceiver":[": Zero values in delta attributes will be reported in top query collection. (#40041)",": Add configuration option `top_query_collection.collection_interval` for top query collection to make the collection less frequent. (#40002)",": Use generated structured event functions in mdatagen (#40041)"],"stefreceiver":[": Update stability of STEF receiver to Alpha. (#40062)",": Correctly handle Shutdown request (#40082)"],"stefreceiver, stefexporter":[": Updated to STEF 0.0.6, which had a breaking change in the format from 0.0.5 (#40058)"],"sumologicexporter":[": Change how infinity bounds are represented in histogram buckets so that the Sumologic backend can properly handle them. (#39904)"],"tcpcheckreceiver":[": Unexport TCPConnectionState (#40271)"],"threshold":["is the number of errors to trigger the rate limiter mechanism (default: 10)."],"wavefrontreceiver":[": Unexport WavefrontParser struct (#40105)"]},"v0.128.0":{"azureauthextension":[": Fix the scope retrieval issue for the client authentication of AzureAuthExtension. (#40032)"],"azureblobexporter":[": Delete type alias Container (#40268)"],"coralogixexporter":[": Fix Authorization header not being set in metadata. (#40330)"],"countconnector":[": Upgrade profiles proto to 1.7.0 (#40285)"],"datadogexporter":[": Add support for host aliasing via resource attribute `datadog.host.aliases` (#40409)",": Fix automatic intial point dropping when converting cumulative monotonic sum metrics (#40426)",": Send host metadata on new hosts. (#40409)",": config `tls::insecure_skip_verify` is now taken into account in metrics path. (#40507, #40085)"],"elasticsearchexporter":[": Upgrade profiles proto to 1.7.0 (#40285)",": Fix a bug where unset span status code was being serialized as 'Unset' instead of being ignored (#39498)"],"exporter/datadog":[": Adds `hostname_detection_timeout` configuration option for Datadog Exporter and sets default to 25 seconds. (#40373, #40377)"],"filelogreceiver":[": The fingerprint of gzip compressed files is created by decompressing and reading the first `fingerprint_size` bytes. (#37772)"],"golden":[": Upgrade profiles proto to 1.7.0 (#40285)"],"headersetterextension":[": Unexport Header (#40542)"],"intervalprocessor":[": Unexport Processor (#40273)"],"k8slogreceiver":[": Unexport DockerConfig and CRIConfig (#40274)"],"kafkaexporter":[": Add an Alpha feature gate `exporter.kafkaexporter.UseFranzGoClient` to use franz-go in the Kafka exporter for better performance. (#40364)",": Fix Snappy compression codec support for the Kafka exporter (#40288)"],"kafkareceiver":[": enforce a backoff mechanism on non-permanent errors, such as when the queue is full (#39580)",": Don't restart the Kafka consumer on failed errors when message marking is enabled for them. (#39909)"],"libhoneyreceiver":[": Fix response encoding for msgpack (#40413)"],"opampsupervisor":[": Update passthrough logging to use Error for stderr pipe. (#40491)",": Supervisor now persists the remote config status to disk. This allows more accurate reporting of the remote config status. Also reports healthy status when not running the agent due to empty config (previous performance optimization). (#40467)"],"otelarrowexporter":[": Configure the combined queue-batch facility, modifies the defaults `sending_queue` settings. (#40211)"],"otelcol_exporter_prometheusremotewrite_wal_reads":[": The total number of WAL reads."],"otelcol_exporter_prometheusremotewrite_wal_reads_failures":[": The total number of WAL reads failures."],"ottl":[": Upgrade profiles proto to 1.7.0 (#40285)"],"pkg":[": Remove the fields from category FrontDoorWebApplicationFirewallLog from the body log record and place them as log record attributes. (#39993)"],"pkg/ottl":[": Remove access to the profile lookup tables (#40227)",": Add `event_name` path to the OTTL Log context (#40230)",": Add metric.metadata as a valid OTTL path (#40214)",": Add ability to compare slices/pcommon.Slice in OTTL Boolean Expressions (#40370)",": Improve time parsing error messages by including the ctime directive instead of the go time layout (#35176)",": Add `ottl.ValueComparator` API to allow comparing values using the OTTL comparison rules (#40370)"],"pkg/translator/prometheusremotewrite":[": Fix bug where metric metadata was sent with incorrect metric name if configuration includes 'namespace' (#39826)",": Fix bug where metric metadata was sent with incorrect metric name if configuration includes 'namespace' (#39826)"],"postgresqlreceiver":[": add the ability to obtain query plan for top n queries (#39995)"],"processor/k8sattributes":[": Support extracting labels and annotations from k8s Deployments (#37957)"],"processor/resourcedetection":[": add `host.interface` resource attribute to `system` detector (#39419)"],"prometheusexporter":[": Expose Scope Name, Version, Schema URL, and Attributes as labels. (#40004)"],"prometheusrecevier":[": Add feature gate to allow enabling and disabling the Prometheus created timestamp zero ingestion feature flag. (#40245)"],"prometheusremoteexporter":[": Delete unused struct `CreatedMetric` (#40266)"],"prometheusremotewriteexproter":[": Adds wal metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"prometheusremotewritereceiver":[": Improve observability about data ingestion (#37277)",": Add LRU cache for resource metrics in prometheusremotewritereceiver. (#37277)",": Add a count of all successfully written samples when elements were processed. (#37277)"],"receiver/cloudflare":[": Enable the receiver to consume fields from Cloudflare containing a map (#40318)"],"receiver/faro":[": Ensure that the Faro receiver waits for http server shutdown to complete before exiting. (#40331)"],"receiver/hostmetrics":[": Mark `hostmetrics.process.onWindowsUseNewGetProcesses` feature gate as stable (#32947)"],"receiver/k8s_cluster":[": Add onDelete handler to emit the experimental entity delete events (#40278)"],"receivercreator":[": Add an option to set default annotations to override the discovery logic (#37436)"],"redisstorageextension":[": Add TLS support (#40185)"],"resourcedetectionprocessor":[": Add the option to retrieve resource attributes from the K8s API server and EC2 api when the IMDS service is not available. (#39503)",": Add additional OS properties to resource detection: `os.build.id` and `os.name` (#39941)"],"several":[": Rename fields named `TLSSetting` to `TLS` for consistency with the core repository. (#40452)"],"signalfxexporter":[": Fix invalid and missing host metadata when the collector is deployed in a containerized environment and | the host root filesystem is mounted to non-standard location. (#40218)"],"signaltometricsconnector":[": Upgrade profiles proto to 1.7.0 (#40285)"],"splunkenterprisereceiver":[": Add search artifact size metrics to the existing search dispatch collection, which uses the /services/server/status/dispatch-artifacts API. (#40383)",": Unexport Info (#40267)"],"sqlserverreceiver":[": Rename flags for enabling top query collection and query sample collection. (#40416)",": add one attribute for performance_counter.object_name to deduplicate data (#40359)",": Fix incorrect attribute name for database system name in the top query event collection. (#40361)",": Fix scraping failure on SQL obfuscation on top query collection and query sample collection. (#40347)"],"sumologicextension":[": Be more tolerant of process discovery failures. (#40252)"],"tlscheckreceiver":[": Do not crash on target validation \u0026 implement better scrape errors (#40341)"],"windowseventlogreceiver":[": Add a boolean option to include the `log.record.original` attribute of each event record. (#40365)"]}}}
