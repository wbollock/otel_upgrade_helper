{"generatedAt":"2025-07-22T20:37:25Z","data":{"otelcol":{"cmd/builder/v0.106.1":{},"v0.106.0":{"(general)":["connector.CreateSettings -\u003e connector.Settings","connectortest.NewNopCreateSettings -\u003e connectortest.NewNopSettings","exporter.CreateSettings -\u003e exporter.Settings","exportertest.NewNopCreateSettings -\u003e exportertest.NewNopSettings","extension.CreateSettings -\u003e extension.Settings","extensiontest.NewNopCreateSettings -\u003e extensiontest.NewNopSettings","processor.CreateSettings -\u003e processor.Settings","processortest.NewNopCreateSettings -\u003e processortest.NewNopSettings","receiver.CreateSettings -\u003e receiver.Settings","receivertest.NewNopCreateSettings -\u003e receivertest.NewNopSettings"],"client":["Create a new go module `go.opentelemetry.io/collector/client` (#9804)"],"component":["Adds restrictions on the character set for component.ID name. (#10673)","Deprecates Host.GetFactory. (#10709)","Document status enums and New constructors (#9822)"],"component/componentprofiles":["Add componentprofiles module. (#10525)"],"component/componenttest":["Add optional ...attribute.KeyValue argument to TestTelemetry.CheckExporterMetricGauge. (#10593)"],"configauth":["removing deprecated methods GetServerAuthenticatorContext and GetClientAuthenticatorContext (#9808)"],"configgrpc":["gRPC auth errors now return gRPC status code UNAUTHENTICATED (16) (#7646)"],"confighttp":["Delete `ClientConfig.CustomRoundTripper` (#8627)","Add option to include query params in auth context (#4806)","Auth data type signature has changed (#4806)","Add `confighttp.NewDefaultServerConfig()` to instantiate the default HTTP server configuration (#9655)"],"confighttp, configgrpc":["Remove the experimental comment on `IncludeMetadata` in confighttp and configgrpc (#9381)"],"confmap":["When passing configuration for a string field using any provider, use the verbatim string representation as the value. (#10605, #10405)","Increase the amount of recursion and URI expansions allowed in a single line (#10712)","üêû Fix wrong expansion of environment variables escaped with `$$`, e.g. `$${ENV_VAR}` and `$$ENV_VAR`. (#10713)"],"connector,exporter,receiver,extension,processor":["Remove deprecated funcs/structs (#10423)"],"consumer/consumertest":["Allow testing profiles with consumertest. (#10692)"],"exporter, processor, receiver":["Document factory functions. (#9323)"],"exporterhelper":["Add data_type attribute to `otelcol_exporter_queue_size` metric to report the type of data being processed. (#9943)","There is no guarantee that after the exporterhelper sends the plog/pmetric/ptrace data downstream that the data won't be mutated in some way. (e.g by the batch_sender) This mutation could result in the proceeding call to req.ItemsCount() to provide inaccurate information to be logged. (#10033)","Update units for internal telemetry (#10648)"],"extension/memorylimiter":["The memory limiter extension will no longer account for ballast size. (#10696)"],"httpprovider, httpsprovider":["Validate URIs in HTTP and HTTPS providers before fetching. (#10468)"],"mdatagen":["Remove WithAttributes option from the telemetry builder constructor. (#10608)"],"processor/memorylimiter":["The memory limiter processor will no longer account for ballast size. (#10696)"],"processorhelper":["update units for internal telemetry (#10647)"],"receiverhelper":["Update units for internal telemetry (#10650)"],"scraperhelper":["Update units for internal telemetry (#10649)"],"service":["üêû Update all metrics to include `otelcol_` prefix to ensure consistency across OTLP and Prometheus metrics (#9759)","The service will no longer be able to get a ballast size from the deprecated ballast extension. (#10696)","Use Command/Version to populate service name/version attributes (#10644)"],"service/extensions":["Adds `Options` to `extensions.New`. (#10728)"]},"v0.106.1":{"configauth":["üêû Fix unmarshaling of authentication in HTTP servers. (#10750)"]},"v0.107.0":{"client":["Mark module as stable. (#10775)"],"component":["Allow component names of up to 1024 characters in length. (#10816)","Removes the deprecated `Host.GetFactory` method. (#10771)"],"componentstatus":["Adds new componentstatus module that will soon replace status content in component. (#10730)"],"configauth":["üêû Fix unmarshaling of authentication in HTTP servers. (#10750)"],"confighttp":["Add `NewDefaultCORSConfig` function to initialize the default `confighttp.CORSConfig` (#9655)"],"configtelemetry":["Add 10s read header timeout on the configtelemetry Prometheus HTTP server. (#5699)"],"confmap":["Set the `confmap.unifyEnvVarExpansion` feature gate to Stable. Expansion of `$FOO` env vars is no longer supported.  Use `${FOO}` or `${env:FOO}` instead. (#10508)","Allow using any YAML structure as a string when loading configuration. (#10800)","If loading an invalid YAML string through a provider, use it verbatim instead of erroring out. (#10759)","Remove original string representation if invalid. (#10787)","Check that providers have a correct scheme when building a confmap.Resolver. (#10786)"],"connector/connectorprofiles":["Allow handling profiles in connector. (#10703)"],"expandconverter":["Deprecate `expandconverter`. (#10510)"],"exporter/exporterprofiles":["Allow handling profiles in exporter. (#10702)"],"exporterhelper":["Delete deprecated `exporterhelper.ObsReport` and `exporterhelper.NewObsReport` (#10779, #10592)"],"mdatagen":["export ScopeName in internal/metadata package (#10845)","Expose a setting on tests::host to set up your own host initialization code (#10765)"],"ocb":["migrate build and release of ocb binaries to opentelemetry-collector-releases repository (#10710)","Collectors built with OCB will no longer include the `expandconverter` (#10510)"],"otelcol":["Delete deprecated NewCommandMustSetProvider (#10778)"],"otelcoltest":["The `otelcol.LoadConfig` method no longer sets the `expandconverter`. (#10510)"],"processor/processorprofiles":["Allow handling profiles in processor. (#10691)"],"processorhelper":["üêû Fix processor metrics not being reported initially with 0 values. (#10855)"],"receiver/receiverprofiles":["Allow handling profiles in receiver. (#10690)"],"semconv":["Add v1.26.0 semantic conventions package (#10249, #10829)","Add semantic conventions version v1.27.0 (#10837)"],"service":["Remove OpenCensus bridge completely, mark feature gate as stable. (#10414)","üêû Remove `otelcol` from Prometheus configuration. This means that any metric that isn't explicitly prefixed with `otelcol_` no longer have that prefix. (#9759)","Allow users to disable the tracer provider via the feature gate `service.noopTracerProvider` (#10858)","Implement the `temporality_preference` setting for internal telemetry exported via OTLP (#10745)"]},"v0.108.0":{"all":["Added support for go1.23, bumped the minimum version to 1.22 (#10869)"],"batchprocessor":["Update units for internal telemetry (#10652)"],"builder":["Add a --skip-new-go-module flag to skip creating a module in the output directory. (#9252)"],"component":["Add `TelemetrySettings.LeveledMeterProvider` func to replace MetricsLevel in the near future (#10931)","Removed Status related types and functions.  Use `componentstatus` instead. (#10777)","Remove `ReportStatus` from `TelemetrySettings`. Use `componentstatus.ReportStatus` instead. (#10777)"],"componentstatus":["Add new Reporter interface to define how to report a status via a `component.Host` implementation (#10852)","Make componentstatus.InstanceID immutable. (#10494)"],"confmap":["Mark `confmap.strictlyTypedInput` as stable (#10552)","Mark module as stable (#9379)","üêû Fix bug where an unset env var used with a non-string field resulted in a panic (#10950)","Use string representation for field types where all primitive types are strings. (#10937)"],"connector":["Deprecate connector.Builder, and move it into an internal package of the service module (#10784)"],"exporter":["Deprecate exporter.Builder, and move it into an internal package of the service module (#10783)"],"exporter/otlp":["Add batching option to otlp exporter (#8122)"],"extension":["Add ModuleInfo to extension.Settings to allow extensions to access component go module information. (#10876)","Deprecate extension.Builder, and move it into an internal package of the service module (#10785)"],"extensions":["Remove `StatusWatcher` interface.  Use `componentstatus.Watcher` instead. (#10777)"],"mdatagen":["Add `LeveledMeter` method to mdatagen (#10933)","support using a different github project in mdatagen README issues list (#10484)","Updates mdatagen's usage to output a complete command line example, including the metadata.yaml file. (#10886)","Update generated telemetry template to only include context import when there are async metrics. (#10883)","üêû Fixed bug in which setting `SkipLifecycle` \u0026 `SkipShutdown` to true would result in a generated file with an unused import `confmaptest` (#10866)","Deprecating generated `Meter` func in favour of `LeveledMeter` (#10939)"],"otelcol":["Remove deprecated `ConfmapProvider` interface. (#10934)","Preserve internal representation when unmarshaling component configs (#10552)"],"processor":["Deprecate processor.Builder, and move it into an internal package of the service module (#10782)"],"receiver":["Deprecate receiver.Builder, and move it into an internal package of the service module (#10781)"],"scraperhelper":["deprecate NewObsReport, ObsReport, ObsReportSettings, scrapers should use NewScraperControllerReceiver (#10959)"],"service":["Adds `level` configuration option to `service::telemetry::trace` to allow users to disable the default TracerProvider (#10892)","üêû Fix memory leaks during service package shutdown (#9165)"]},"v0.108.1":{"mdatagen":["üêû Fix a missing import in the generated test file (#10969)"]},"v0.109.0":{"(general)":["üêû The `ocb` binary has an identified bug caused by the fact that some of the providers have been marked stable and the default providers in the `ocb` binary still use the unstable version. In order to fix this explicitly add the default providers in your otel builder config, if not already configured:","gomod: go.opentelemetry.io/collector/confmap/provider/envprovider v1.15.0","gomod: go.opentelemetry.io/collector/confmap/provider/fileprovider v1.15.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpprovider v0.109.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpsprovider v0.109.0","gomod: go.opentelemetry.io/collector/confmap/provider/yamlprovider v0.109.0","otelcol_processor_incoming_spans","otelcol_processor_outgoing_spans","otelcol_processor_incoming_metric_points","otelcol_processor_outgoing_metric_points","otelcol_processor_incoming_log_records","otelcol_processor_outgoing_log_records"],"Remove ":["extensiontest` StatusWatcher helpers`: They were unused. They may be added back on a different module or after `componentstatus` is marked 1.0"],"ballastextension":["Removes the deprecated ballastextension (#10671)"],"configgrpc":["Change the value of max_recv_msg_size_mib from uint64 to int to avoid a case where misconfiguration caused an integer overflow. (#10948)"],"configtelemetry":["Add guidelines for each level of component telemetry (#10286)","Deprecating `TelemetrySettings.MeterProvider` in favour of `TelemetrySettings.LeveledMeterProvider` (#10912)"],"confmap":["Remove stable `confmap.strictlyTypedInput` gate (#11008)","Removes stable `confmap.unifyEnvVarExpansion` feature gate. (#11007)"],"connector":["Remove deprecated connector builder (#11019)"],"connectorprofiles":["Add ProfilesRouterAndConsumer interface, and NewProfilesRouter method. (#11023)"],"envprovider":["Mark module as stable (#10982)"],"exporter":["Remove deprecated exporter builder (#11019)"],"exporterqueue":["üêû Fix a bug in persistent queue that Offer can becomes deadlocked when queue is almost full (#11015)"],"extension":["Remove deprecated extension builder (#11019)","Deprecate `extension.ConfigWatcher`, `extension.PipelineWatcher` and `extension.Dependent` in favor of equivalents in the `extensioncapabilities` module. (#11000)"],"extension/experimental/storage":["Move `extension/experimental/storage` into a separate module (#11022)"],"extensioncapabilities":["Create a new module for optional extension capabilities. (#11000)"],"fileprovider":["Mark module as stable (#10983)"],"pprofile":["Change Profile ID field from a byte array to a custom data type (#11048)","Introduce marshalling and unmarshalling of pprofile data (#11048)"],"pprofileotlp":["Introduce grpc service implementation of pprofileotlp (#11048)"],"processor":["Add incoming and outgoing counts for processors using processorhelper. (#10910)","Remove deprecated processor builder (#11019)"],"processorhelper":["These funcs are not used anywhere, marking them deprecated. (#11083)"],"receiver":["Remove deprecated receiver builder (#11019)"],"scraperhelper":["Remove deprecated `ObsReport`, `ObsReportSettings`, `NewObsReport` types/funcs (#11086)","deprecate NewScraper, should use NewScraperWithComponentType (#11082)"],"service":["Removes stable `service.disableOpenCensusBridge` feature gate (#11009)","move `useOtelWithSDKConfigurationForInternalTelemetry` gate to beta (#11091)","implement a no-op tracer provider that doesn't propagate the context (#11026)","Support profiles in the service package (#11024)"]},"v0.110.0":{"(general)":["otelcol_processor_incoming_spans","otelcol_processor_outgoing_spans","otelcol_processor_incoming_metric_points","otelcol_processor_outgoing_metric_points","otelcol_processor_incoming_log_records","otelcol_processor_outgoing_log_records","otelcol_processor_incoming_items","otelcol_processor_outgoing_items"],"builder":["Honor build_tags in config (#11156)","üêû Fix version for providers in the default config (#11123)"],"cmd/builder":["Temporarily disable strict versioning checks (#11129, #11152)"],"component":["Deprecates `DataType`, `DataTypeTraces`, `DataTypeMetrics`, and `DataTypeLogs`. Use `pipeline.Signal`, `SignalTraces`, `SignalMetrics`, and `SignalLogs` instead. (#11204)"],"componentprofiles":["Deprecates `DataTypeProfiles`. Use `SignalProfiles` instead. (#11204)"],"componentstatus":["Deprecates `NewInstanceID`, `AllPipelineIDs`, and `WithPipelines`. Use `NewInstanceIDWithPipelineIDs`, `AllPipelineIDsWithPipelineIDs`, and `WithPipelineIDs` instead. (#11204)"],"config":["Mark UseLocalHostAsDefaultHostfeatureGate as stable (#11235)"],"configgrpc":["Deprecate `ClientConfig.ToClientConn`/`ServerConfig.ToServer` in favor of `ToClientConnWithOptions`/`ToServerWithOptions` (#9480)"],"confignet":["Mark module as Stable. (#9801)"],"confmap":["üêû Fix loading config of a component from a different source. (#11154)"],"confmap/provider/envprovider":["Support default values when env var is empty (#5228)"],"connector":["Change `TracesRouterAndConsumer`, `NewTracesRouter`, `MetricsRouterAndConsumer`, `NewMetricsRouter`, `LogsRouterAndConsumer`, and `NewLogsRouter` to use `pipeline.ID` instead of `component.ID`. (#11204)"],"consumertest":["Introduce SampleCount method in ProfilesSink struct. (#11225)"],"exporterhelper":["Deprecate TimeoutSettings/QueueSettings in favor of TimeoutConfig/QueueConfig. (#6767)"],"exporterqueue":["Deprecates `Settings.DataType`. Use `Settings.Signal` instead. (#11204)"],"extension":["Remove deprecated extension interfaces. (#11043)"],"mdatagen":["Add stability field to telemetry metrics, allowing the generated description to include a stability string. (#11160)","mdatagen `validateMetrics()` support validate metrics in `telemetry.metric` (#10925)","Use cobra for the command, add version flag (#11196)","üêû Fix incorrect generation of metric tests with boolean attributes. (#11169)","Avoid using private types in public APIs and also protect options to be implemented outside this module. (#11040)"],"options":["Avoid using private types in public APIs and also protect options to be implemented outside this module. (#11054)"],"otelcol":["üêû Fix the Windows Event Log configuration when running the Collector as a Windows service. (#5297, #11051)"],"otlpexporter":["The `TimeoutSettings` field in `otlpexporter.Config` was renamed to `TimeoutConfig`. (#11132)"],"otlpreceiver":["Support profiles in the OTLP receiver (#11071)"],"pdata":["Add support to MoveTo for Map, allow avoiding copies (#11175)","Add support to MoveTo for Map, allow avoiding copies (#11175)"],"pipeline":["Adds new `pipeline` module to house the concept of pipeline ID and Signal. (#11209)"],"processorhelper":["Update incoming/outgoing metrics to a single metric with a `otel.signal` attributes. (#11144)","Remove deprecated `[Traces|Metrics|Logs]`Inserted funcs (#11151)","deprecate accepted/refused/dropped metrics (#11201)"],"scraperhelper":["Deprecate NewScraperWithComponentType, should use NewScraper (#11159)"],"service":["Ensure process telemetry is registered when internal telemetry is configured with readers instead of an address. (#11093)","Deprecates `pipelines.Config`. Use `pipelines.ConfigWithPipelineID` instead. (#11204)","Deprecates service's implementation of `GetExporters` interface.  Use `GetExportersWithSignal` instead. (#11249)"],"service/telemetry":["Mark useOtelWithSDKConfigurationForInternalTelemetry as stable (#7532)"]},"v0.111.0":{"(general)":["üêû The `ocb` binary has an identified bug caused by the fact that some of the providers have been marked stable and the default providers in the `ocb` binary still use the unstable version. In order to fix this explicitly add the default providers in your otel builder config, if not already configured:","gomod: go.opentelemetry.io/collector/confmap/provider/envprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/fileprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/httpsprovider v1.17.0","gomod: go.opentelemetry.io/collector/confmap/provider/yamlprovider v1.17.0"],"cmd/builder":["re-adds function to properly set and view version number of OpenTelemetry Collector Builder (ocb) binaries (#11208)"],"component":["Removed deprecated `ErrDataTypeIsNotSupported`, `DataType`, `DataTypeTraces`, `DataTypeMetrics`, and `DataTypeLogs`.  Use `pipeline.ErrSignalNotSupported`, `pipeline.Signal`, `pipeline.SignalTraces`, `pipeline.SignalMetrics`, and `pipeline.SignalLogs` instead. (#11253)"],"componentprofiles":["Removed deprecated `DataTypeProfiles`.  Use `SignalProfiles` instead. (#11312)"],"componentstatus":["Deprecated `NewInstanceIDWithPipelineIDs`, `AllPipelineIDsWithPipelineIDs`, and `WithPipelineIDs`. Use `NewInstanceID`, `AllPipelineIDs`, and `WithPipelines` instead. (#11313)"],"configgrpc":["Replace ToClientConn and ToServer with ToClientConnWithOptions and ToServerWithOptions. (#11271, #9480)"],"confighttp":["Snappy compression to lazy read for memory efficiency (#11177)"],"confmap":["Allow using any YAML structure as a string when loading configuration including time.Time formats (#10659)"],"exporterhelper":["Removed deprecated `QueueTimeout`/`TimeoutSettings` aliases in favor of `QueueConfig`/`TimeoutConfig`. (#11264, #6767)"],"exporterqueue":["Remove deprecated `Settings.DataType`. Use `Settings.Signal` instead. (#11305)"],"exportertest":["Remove deprecated `CheckConsumeContractParams.DataType`. Use `CheckConsumeContractParams.Signal` instead. (#11305)"],"httpprovider":["Mark the httpprovider as stable. (#11191)"],"httpsprovider":["Mark the httpsprovider as stable. (#11191)"],"loggingexporter":["üêû Removed the deprecated `logging` exporter.  Use the `debug` exporter instead. (#11037)."],"ocb":["create docker images for OCB, per https://github.com/open-telemetry/opentelemetry-collector-releases/pull/671 (#5712)"],"pdata":["Unmarshal Span and SpanLink flags from JSON (#11267)"],"pdata/pprofile":["Replace slices of values to slices of pointers for the `Mapping`, `Location`, `Line`, `Function`, `AttributeUnit`, `Link`, `Value`, `Sample` and `Labels` attributes. (#11339)"],"processor":["Deprecate funcs that repeat \"processor\" in name (#11310)"],"processorhelper":["Deprecate BuildProcessorMetricName as it's no longer needed since introduction of mdatagen (#11302)","üêû Fix data race condition, concurrent writes to the err variable, causes UB (Undefined Behavior) (#11350)","Remove deprecated funcs form processorhelper.ObsReport (#11289)","Deprecate unused and empty struct processorhelper.ObsReport (#11293)"],"receiver":["Deprecate funcs that repeat \"receiver\" in name (#11287)"],"receivertest":["Remove deprecated `CheckConsumeContractParams.DataType`. Use `CheckConsumeContractParams.Signal` instead. (#11304)","Deprecated `NewNopFactoryForTypeWithSignal`. Use `NewNopFactoryForType` instead. (#11304)"],"scraperhelper":["Remove deprecated function `NewScraperWithComponentType`. (#11294)"],"service":["Deprecates `Config.PipelinesWithPipelineID`, `pipelines.ConfigWithPipelineID` and `GetExportersWithSignal` interface implementation. Use `Config.Pipelines`, `pipelines.Config`, and `GetExporters` interface implementation instead. (#11303)"],"service/telemetry":["Change default metrics address to \"localhost:8888\" instead of \":8888\" (#11251)","Deprecate service::telemetry::metrics::address in favor of service::telemetry::metrics::readers. (#11205)","Change default metrics address to \"localhost:8888\" instead of \":8888\" (#11251)"],"yamlprovider":["Mark the yamlprovider as stable. (#11192)"]},"v0.112.0":{"cmd/builder":["üêû Fix default configuration for builder for httpprovider, httpsprovider, and yamlprovider. (#11357)"],"componentprofiles":["Move componentprofiles to pipelineprofiles (#11421)"],"componentstatus":["Remove deprecated `NewInstanceIDWithPipelineIDs`, `AllPipelineIDsWithPipelineIDs`, and `WithPipelineIDs`. Use `NewInstanceID`, `AllPipelineIDs` and `WithPipelines` instead. (#11363)"],"configcompression":["Add support for lz4 compression (#9128)"],"configgrpc":["Removed deprecated `ClientConfig.ToClientConnWithOptions`/`ServerConfig.ToServerWithOptions`. (#11359, #9480)"],"confighttp":["Adding support for lz4 compression into the project (#9128)"],"connector":["Put connectortest in its own module (#11216)"],"consumer/consumererror":["Extract consumer/consumererror as a separate go module (#11440)"],"consumererrorprofiles":["Add new module consumereerrorprofiles for consumer error profiles. (#11131)"],"exporter":["Disables setting batch option to batch sender directly. (#10368)","Made mergeFunc and mergeSplitFunc required method of exporter.Request (#10368)","Deprecate funcs that repeate exporter in name (#11370)"],"exporter/exportertest":["Put expotertest into its own module (#11461)"],"exporterhelper":["Retry sender will fail fast when the context timeout is shorter than the next retry interval. (#11183)"],"extension":["Deprecate funcs that repeat extension in name (#11413)"],"mdatagen":["Added generated_package_name config field to support custom generated package name. (#11231)","Generate documentation for components with resource attributes only (#10705)"],"otlpexporter":["Add profiles support to OTLP exporter (#11435)"],"otlphttpexporter":["Add profiles support to OTLP HTTP exporter (#11450)"],"processor":["Put processortest in its own module (#11218)","Remove deprecated funcs from processor package (#11368)"],"processorhelper":["üêû Fix issue where in/out parameters were not recorded when error was returned from consumer. (#11351)","Remove deprecated funcs/types from processorhelper \u0026 componenttest (#11302)"],"processortest":["Deprecated 'NewUnhealthyProcessorCreateSettings'. Use NewNopSettings instead. (#11307)"],"receiver":["Remove deprecated funcs from receiver package (#11367)"],"receivertest":["Removed deprecated `NewNopFactoryForTypeWithSignal`. Use `NewNopFactoryForType` instead. (#11362)"],"service":["Remove stable gate component.UseLocalHostAsDefaultHost (#11412)","Hide profiles support behind a feature gate while it remains alpha. (#11477)","Change Host to not implement GetExportersWithSignal (#11444)","Remove deprecated `pipelines.ConfigWithPipelineID` and `Config.PipelinesWithPipelineID`. Use `pipelines.Config` and `Config.Pipelines` instead. (#11361)"]},"v0.113.0":{"batchprocessor":["Move single shard batcher creation to the constructor (#11594)"],"builder":["Remove builder support to build old version, and the otelcol_version config (#11405)","Remove deprecated flags from Builder (#11576)","Update builder default providers to lastest stable releases (#11566)","Remove deprecated flags from Builder (#11576)"],"component":["Add UnmarshalText for StabilityLevel (#11520)"],"config/configgrpc":["üêû Patch for bug in the grpc-go NewClient that makes the way the hostname is resolved incompatible with the way proxy setting are applied. (#11537)"],"debugexporter":["üêû Add profiles support to debug exporter (#11155)"],"internal/fanoutconsumer":["Extract internal/fanoutconsumer as a separate go module (#11441)"],"internal/sharedcomponent":["Extract internal/sharedcomponent as a separate go module (#11442)"],"mdatagen":["Add otlp as supported distribution (#11527)","Add newTelemetrySettings to be generated all the time even for pkg class (#11535)"],"processorhelperprofiles":["Add processorhelperprofiles to support profiles signal (#11556)"],"receiver":["Make receivertest into its own module (#11462)"],"service":["add support for using the otelzap bridge and emit logs using the OTel Go SDK (#10544)","ensure traces and logs emitted by the otel go SDK use the same resource information (#11578)"]},"v0.114.0":{"(general)":["gomod: module.url/my/custom/provider v1.2.3"],"all":["shorten time period before removing an unmaintained component from 6 months to 3 months (#11664)","Updates dialer timeout section documentation in confignet README (#11685)"],"cmd/builder":["Allow for replacing of local Providers and Converters when building custom collector with ocb. (#11649)","Allow configuring `confmap.Converter` components in ocb. (#11582)"],"component":["Make componenttest into its own module (#11464)","Deprecate `TelemetrySettings.LeveledMeterProvider` and undo deprecation of `TelemetrySettings.MeterProvider` (#11061)"],"expandconverter":["Remove deprecated expandvar converter (#11672)"],"exporter":["Remove deprecated funcs Create[*]Exporter and [*]ExporterStability (#11662)"],"exporterhelper":["Remove derprecated NewLogs[Request]Exporter funcs (#11661)"],"extension":["Remove deprecated funcs CreateExtension and ExtensionStability (#11663)"],"extensiontest":["Make extensiontest into its own module (#11463)"],"processortest":["Remove deprecated func NewUnhealthyProcessorCreateSettings (#11665)"],"scraperhelper":["If the scraper shuts down, do not scrape first. (#11632)","Deprecate Scraper.ID func, pass type when register Scraper (#11238)"]},"v0.115.0":{"component":["Mark `TelemetrySettings.LeveledMeterProvider` as deprecated (#11697)"],"consumer":["Mark consumer as stable. (#9046)"],"exporterqueue":["Introduce a feature gate exporter.UsePullingBasedExporterQueueBatcher to use the new pulling model in exporter queue batching. (#8122, #10368)"],"extension/auth/authtest":["`authtest` is now its own module (#11465, #11705)"],"featuregate":["üêû Fix an unfriendly display message `runtime error` when featuregate is used to display command line usage. (#11651)"],"mdatagen":["Remove deprecated LeveledMeter from the generated code (#11696)"],"otelcol":["Change all logged timestamps to ISO8601. (#10543)"],"pdata/pprofile":["Upgrade pdata to opentelemetry-proto v1.4.0 (#11722)","AttributeTable is now a slice rather than a map (#11706)"],"profiles":["üêû Fix iteration over scope profiles while counting the samples. (#11688)"],"receiver/scraper":["Move receiver/scrapererror package to scraper/scrapererror and deprecate original receiver/scrapererror package. (#11003)"],"scraperhelper":["Deprecate all Scraper helpers in scraperhelper (#11732)","Remove deprecated scraperhelper funcs Scraper.ID, NewScraper, AddScraper. (#11710)","Make Scraper compatible with the new scraper.Metrics (#11682)"],"service":["label metrics as alpha to communicate their stability (#11729)","Add support for ca certificates in telemetry metrics otlp grpc exporter (#11633)","ensure OTLP emitted logs respect severity (#11718)"]},"v0.116.0":{"component":["Remove deprecated TelemetrySettings.LeveledMeterProvider (#11811)"],"connector":["Deprecate connectorprofiles module in favor of xconnector to allow adding more experimental data types. (#11778)"],"consumer":["Deprecate consumerprofiles module in favor of xconsumer to allow adding more experimental data types. (#11778)"],"consumererror":["Deprecate consumererrorprofiles module in favor of xconsumererror to allow adding more experimental data types. (#11778)"],"exporter":["Deprecate exporterprofiles module in favor of xexporter to allow adding more experimental data types. (#11778)"],"exporterhelper":["üêû Fix memory leak at exporter shutdown (#11401)","Deprecate exporterhelperprofiles module in favor of xexporterhelper to allow adding more experimental data types. (#11778)"],"pdata/pprofile":["Remove deprecated `Profile.EndTime` and `Profile.SetEndTime` methods. (#11796)"],"pipeline":["Deprecate pipelineprofiles module in favor of xpipeline to allow adding more experimental data types. (#11778)"],"processor":["Deprecate processorprofiles module in favor of xprocessor to allow adding more experimental data types. (#11778)"],"processorhelper":["Deprecate processorhelperprofiles module in favor of xprocessorhelper to allow adding more experimental data types. (#11778)"],"receiver":["Deprecate receiverprofiles module in favor of xreceiver to allow adding more experimental data types. (#11778)"],"receiver/scrapererror":["Remove the receiver/scrapererror alias. (#11003)"],"receiver/scraperhelper":["Add scraper for logs (#11238)"],"scraperhelper":["Remove deprecated scraperhelper.Scraper and helpers (#11803)"],"sharedcomponent":["Remove race-condition and cleanup locking (#11819)"],"xconfighttp":["Add WithOtelHTTPOptions to experimental module xconfighttp (#11770)"]},"v0.117.0":{"connector":["Remove deprecated connectorprofiles module, use xconnector instead. (#11778)"],"consumer":["Remove deprecated consumerprofiles module, use xconsumer instead. (#11778)"],"consumererror":["Remove deprecated consumererrorprofiles module, use xconsumererror instead. (#11778)"],"exporter":["Remove deprecated exporterprofiles module, use xexporter instead. (#11778)"],"exporterhelper":["Remove deprecated exporterhelperprofiles module, use xexporterhelper instead. (#11778)","Remove Merge function from experimental Request interface (#12012)"],"extension/experimental":["Deprecate extension/experimental in favor of extension/xextension (#12010)"],"internal/sharedcomponent":["üêû Fixed bug where sharedcomponent would use too much memory remembering all the previously reported statuses (#11826)"],"mdatagen":["Deprecate component_test in favor of metadatatest (#11812)"],"otelcol":["Remove warnings when 0.0.0.0 is used (#11713, #8510)"],"pdata":["Upgrade pdata to opentelemetry-proto v1.5.0 (#11932)"],"pdata/pprofile":["Remove duplicate Attributes field from profile (#11932)"],"pipeline":["Remove deprecated pipelineprofiles module, use xpipeline instead. (#11778)"],"processor":["Remove deprecated processorprofiles module, use xprocessor instead. (#11778)"],"processorhelper":["Remove deprecated processorhelperprofiles module, use xprocessorhelper instead. (#11778)"],"receiver":["Remove deprecated receiverprofiles module, use xreceiver instead. (#11778)"],"receivertest":["Deprecate receivertest.NewNopFactoryForType (#11993)"],"scraperhelper":["Move scraperhelper under scraper and in a separate module. (#11003)"],"scrapertest":["Add scrapertest package in a separate module (#11988)"]},"v0.118.0":{"componenttest":["Deprecate CheckScraperMetrics in componenenttest (#12105)"],"confighttp":["Added support for configuring compression levels. (#10467)","Added support for configuring compression levels. (#10467)"],"debugexporter":["üêû Add EventName to debug exporter for Logs. EventName was added as top-level field in the LogRecord from 1.5.0 of proto definition. (#11966)"],"experimental/storage":["Remove deprecated package/module experimental/storage (#12109)"],"exporterhelper":["Add blocking option to control queue behavior when full (#12090)","Change the memory queue implementation to not pre-allocate capacity objects. (#12070)","Add capability for memory and persistent queue to block when add items (#12074)","Change persistent queue to not use sized channel, improve memory usage and simplify sized_channel. (#12060)"],"exporterqueue":["Change Queue Size and Capacity to return explicit int64. (#12076)"],"mdatagen":["apply fieldalignment to generated code (#12121)","Remove deprecated generated_component_telemetry_test file from being generated and delete it. (#12068)","Add scraper component type support to mdatagen (#12092)","Add tracing support in metadatatest (#12106)"],"otelcoltest":["Set `DefaultScheme` to `env` in the test `ConfigProvider` to replicate the default provider used by the Collector. (#12066)"],"processorteset":["Revert the nop_processor.NewNopSettings change, as it is no longer needed (#11433)"],"receiver/scraperhelper":["Removing the deprecated receiver/scraperhelper package (#12054)"],"receivertest":["Remove deprecated receivertest.NewNopFactoryForType (#12110)"],"scraper/scraperhelper":["Add obs_logs for scraper/scraperhelper (#12036)"],"scraperhelper":["Deprecate `scraperhelper.NewScraperControllerReceiver` and `scraperhelper.ScraperControllerOption`. (#12103)"]},"v0.119.0":{"(general)":["Components will temporarily need the service to support using views."],"cmd/mdatagen":["Remove dead field `telemetry::level` (#12144)","Remove `level` field from metrics definition (#12145)","Allow passing OTel Metric SDK options to the generated `SetupTelemetry` function. (#12166)"],"component":["Change underlying type for `component.Kind` to be a struct. (#12214)","Deprecate `component.TelemetrySettings.MetricsLevel` in favor of using views and 'Enabled' method. (#12159)","Allow `component.ValidateConfig` to recurse through all fields in a config object (#11524)","Show path to invalid config in errors returned from `component.ValidateConfig` (#12108)"],"component/componenttest":["Remove deprecated `CheckScraperMetrics` functions (#12183)","Deprecate `CheckExporterEnqueue*` functions in componenenttest (#12185)","Deprecate CheckExporterLogs in componenenttest (#12185)","Deprecate CheckExporterMetricGauge in componenenttest (#12185)","Deprecate CheckExporterMetrics in componenenttest (#12185)","Deprecate CheckExporterTraces in componenenttest (#12185)","Deprecate CheckReceiverLogs in componenenttest (#12185)"],"componenttest":["Add helper to get a metric for componentest.Telemetry (#12215)","Extract componenttest.Telemetry as generic struct for telemetry testing (#12151)"],"confighttp":["confighttp.ToServer now sets ErrorLog with a default logger backed by Zap (#11820)"],"configtls":["Allow users to mention their preferred curve types for ECDHE handshake (#12174)"],"exporterhelper":["Rename exporter span signal specific attributes (e.g. \"sent_spans\" / \"send_failed_span\") to \"items.sent\" / \"items.failed\". (#12165)","Change exporter ID to be a Span level attribute instead on each event. (#12164)","üêû Fix bug that the exporter with new batcher may have been marked as non mutation. (#12239)","üêû Fix context propagation for DisabledBatcher (#12231)","üêû Fix MergeSplit issue that ignores the initial message size. (#12257)","Change queue to embed the async consumers. (#12242)","Rename exporter span signal specific attributes (e.g. \"sent_spans\" / \"send_failed_span\") to \"items.sent\" / \"items.failed\". (#12165)"],"exporterqueue":["Change Queue interface to return a callback instead of an index (#8122)"],"extension":["Change `extension.Extension` to be an interface that embeds `component.Component` instead of an alias (#11443)"],"general":["Reduce memory allocations when loading configuration and parsing component names (#11964)"],"mdatagen":["apply fieldalignment to generated code (#12125)","üêû Fix bug where Histograms were marked as not supporting temporaly aggregation (#12168)","Make registration of callback for async metric always optional. (#12204)","Generate assert function for each metric in mdatagen (#12179)","All register callbacks to async instruments can now be unregistered by calling `metadata.TelemetryBuilder.Shutdown()` (#12204)","üêû Fix bug where Histograms were marked as not supporting temporaly aggregation (#12168)"],"metadatatest":["Deprecate metadatatest.Telemetry in favor of componenttest.Telemetry (#12218)","Generate NewSettings that accepts componenttest.Telemetry (#12216)"],"otelcol":["Adds support for listing config providers in components command's output (#11570)"],"pdata/pprofile":["Add new helper method `FromAttributeIndices` to build a `pcommon.Map` out of `AttributeIndices`. (#12176)"],"scraper":["Support logs scraper (#12116)"],"scraperhelper":["Remove deprecated ScrapperControllerOption and NewScraperControllerMetrics from scraperhelper. (#12147)"],"service":["remove custom code and instead use config package to instantiate meter provider. (#11611)","Preserve URL normalization logic that was present before. (#12254)","Include validation errors from telemetry.Config when validating the service config (#12100)"],"service-telemetry":["pass the missing async error channel into service telemetry settings (#11417)"]},"v0.120.0":{"(general)":["The functionality is now available as an optional, hidden interface on `service`'s implementation of the `Host`","This has no use for now, it may be used in the future."],"all":["Added support for go1.24, bumped minimum version to 1.23 (#12370)"],"cmd/builder":["üêû Ensure unique aliases for modules with same suffix (#12201)"],"component":["Remove deprecated field `component.TelemetrySettings.MetricsLevel`. (#11061)","Deprecate `ConfigValidator` and `ValidateConfig` (#11524)"],"component/componenttest":["Deprecate CheckReceiverMetrics in componenenttest (#12185)","Deprecate CheckReceiverTraces in componenenttest (#12185)"],"configauth":["Remove NewDefaultAuthentication (#12223)"],"configgrpc":["Add the `omitempty` mapstructure tag to struct fields (#12191)","Apply configured Headers automatically (#12307)","Set Auth to nil in NewDefaultClientConfig/NewDefaultServerConfig (#12223)"],"confighttp":["Add `ToClientOption` type and add it to signature of `ToClient` method. (#12353)"],"confignet":["Add the `omitempty` mapstructure tag to struct fields (#12191)"],"configtls":["Add the `omitempty` mapstructure tag to struct fields (#12191)"],"consumer":["Clarify that data cannot be accessed after Consume* func is called. (#12284)"],"exporterhelper":["Implement sync disabled queue used when batching is enabled. (#12245)","Enable the new pull-based batcher in exporterhelper (#12291)","Update queue size after the element is done exported (#12399)","üêû Fix undefined behavior access to request after send to next component. This causes random memory access. (#12281)","üêû Fix default batcher to correctly call all done callbacks exactly once (#12247)"],"exporterqueue":["üêû Fix async queue to propagate cancellation all they way to the queue (#12282)"],"extension":["Remove `extension.Settings.ModuleInfo` (#12296)","Explicitly error out at extension creation time if there is a type mismatch. (#12305)"],"extension, connector, processor, receiver, exporter, scraper":["Deprecate `Create*` methods from `Create*Func` types. (#12305)"],"extensiontest, connectortest, processortest, receivertest, exportertest, scrapertest":["Deprecate `*test.NewNopSettings` in favor of `*test.NewNopSettingsWithType` (#12305)"],"mdatagen":["Removing deprecated generated funcs and a few test funcs as well. (#12304)","Remove unused not_component config for mdatagen (#12237)"],"memorylimiter":["Logger no longer attributes to single signal, pipeline, or component. (#12217)"],"otelcol":["Add featuregate command to display information about available features (#11998)","Make the `ConfigProvider` interface a struct (#12297)"],"otlphttpexporter":["üêû Fix parsing logic for Retry-After in OTLP http protocol. (#12366)"],"otlpreceiver":["Update stability for logs (#12335)","Logger no longer attributes to random signal when receiving multiple signals. (#12217)","üêû Fix OTLP http receiver to correctly set Retry-After (#12367)","üêû Fix OTLP http receiver to correctly set Retry-After (#12367)"],"pdata/pprofile":["Introduce aggregation temporality constants (#12253)"],"receiver, scraper, processor, exporter, extension":["Deprecate existing MakeFactoryMap functions in favor of generic implementation (#12222)"],"service":["Align component logger attributes with those defined in RFC (#12217)"],"xconfmap":["Create the xconfmap module and add the `Validator` interface and `Validate` function to facilitate config validation (#11524)"]},"v0.121.0":{"(general)":["Use `xconfmap.Validator` and `xconfmap.Validate` instead."],"component":["Mark module as stable (#9376)","Remove deprecated function and interface `ConfigValidator` and `ValidateConfig`. (#11524)"],"component/componenttest":["Removing the deprecated `CheckReceiverMetrics` and `CheckReceiverTraces` functions. (#12185)"],"componenttest":["Deprecated componenttest.TestTelemetry in favor of componenttest.Telemetry (#12419)"],"configauth":["Add the `omitempty` mapstructure tag to struct fields (#12191)"],"confighttp":["Make the client config options `max_idle_conns`, `max_idle_conns_per_host`, `max_conns_per_host`, and `idle_conn_timeout` integers (#9478)","Add the `omitempty` mapstructure tag to struct fields (#12191)"],"confmap":["Surface YAML parsing errors when they happen at the top-level. (#12180)"],"connector, exporter, extension, processor, receiver, scraper":["Add type parameter to `NewNopSettings` and deprecate `NewNopSettingsWithType` (#12305)"],"exporterhelper":["Deprecate `min_size_items` and `max_size_items` in favor of `min_size` and `max_size`. (#12486)","Stabilize exporter.UsePullingBasedExporterQueueBatcher and remove old batch sender (#12425)","üêû Fix bug where the error logged when conversion of data fails is always nil (#12510)","Update MergeSplit function signature to use the new SizeConfig (#12486)","Change the signature of the exporterhelper.WithQueueRequest to accept Encoding instead of the Factory. (#12509)","Deprecate MinSizeConfig and MaxSizeItems. (#12486)","Adds the config API to support serialized bytes based batching (#3262)","Stabilize exporter.UsePullingBasedExporterQueueBatcher and remove old batch sender (#12425)"],"exporterqueue":["Remove exporterqueue.Factory in favor of the NewQueue function, and merge configs for memory and persistent. (#12509)"],"extension":["Mark module as stable (#11005)"],"extension, connector, processor, receiver, exporter, scraper":["Remove deprecated `Create*` methods from `Create*Func` types. (#12305)"],"extension/auth, extension/auth/authtest":["Deprecate extension/auth and the related test module in favor of extension/extensionauth (#12478)"],"extension/extensionauth":["Deprecate methods on `*Func` types. (#12480)"],"mdatagen":["Add `converter` and `provider` module classes (#12467)","Update metadata schema with new fields without enforcing them (#12359)","Adds back missing import for filter when emitting resource attributes (#12455)","üêû Fix broken imports in the generated files. (#12298)"],"memorylimiter":["Add support to configure min GC intervals for soft and hard limits. (#12450)"],"memorylimiterprocessor":["Add support for profiles. (#12453)"],"otelcol":["Converters are now available in the `components` command. (#11900, #12385)","Converters are now available in the `components` command. (#11900, #12385)"],"otlpexporter":["Update the stability level for logs, it has been as stable as traces and metrics for some time. (#12423)"],"pcommon.Map":["preallocate go map in Map.AsRaw() (#12406)"],"pipeline":["output pipeline name with signal as signal[/name] format in logs. (#12410)"],"pprofile":["Add LinkIndex attribute to the generated Sample type (#12485)"],"processor, connector, exporter, receiver":["Explicitly error out at component creation time if there is a type mismatch. (#12305)"],"receiver, scraper, processor, exporter, extension":["Remove deprecated MakeFactoryMap functions in favor of generic implementation (#12222)"],"service":["Create a new subcommand to dump the initial configuration after resolving/merging. (#11479)","üêû Fix crash at startup when converting from v0.2.0 to v0.3.0 (#12438)","üêû fix bug in parsing service::telemetry configuration (#12437)","Add the `omitempty` mapstructure tag to struct fields (#12191)"],"service/hostcapabilities":["create `service/hostcapabilities` module (#12296, #12375)"]},"v0.122.0":{"(general)":["Use `extensionauthtest.NewNopClient` to create a client with a noop implementation.","Use `extensionauthtest.NewErrorClient` to create a client that always returns an error.","Implement the `extensionauth` interfaces for custom mock client implementations.","Manually implement the interfaces instead.","Use the per-protocol methods instead."],"auth, authtest":["Remove deprecated modules extension/auth and extension/auth/authtest (#12543)"],"cmd/mdatagen":["Add `supportsSignal` func for `Metadata` type in `mdatagen`. (#12640)"],"component/componenttest":["Remove the deprecated componenttest.TestTelemetry in favor of componenttest.Telemetry (#12419)"],"componenttest":["Improve config struct mapstructure field tag checks (#12590)"],"configauth":["Deprecate `configauth.Authenticator.GetClientAuthenticator`. (#12574)"],"confmap":["Introduce a new feature flag to allow for merging lists instead of discarding the existing ones. (#8394, #8754, #10370)","Maintain nil values when marshaling or unmarshaling nil slices (#11882)"],"exporterhelper":["Remove the Request.Export function in favor of an equivalent request consume func in the New[Traces|Metrics|Logs|Profiles]Request (#12637)","Deprecate per signal converter in favor of generic version (#12631)"],"extensionauth":["Remove deprecated methods from the `Func` types. (#12547)","Deprecate `extensionauth.NewClient` and `extensionauth.NewServer`. (#12574)"],"extensionauthtest":["Remove the `extensionauthtest.MockClient` struct. (#12567)"],"extensiontest, connectortest, processortest, receivertest, scrapertest, exportertest":["Remove deprecated `NewNopSettingsWithType` functions, use `NewNopSettings` instead. (#12221)"],"mdatagen":["Delete generated_status.go if the component type doesn't require it. (#12346)","Add deprecation date and migration guide fields as part of component metadata (#12359)"],"pdata":["Add iterator All method to pdata slices and map types. (#11982)"],"pdata/pcommon":["Introduce `Equal()` method for comparison equality to `Value`, `ByteSlice`, `Float64Slice`, `Int32Slice`, `Int64Slice`, `StringSlice`, `Uint64Slice`, `Map` and `Slice` (#12594)"],"pdata/pprofile":["Introduce AddAttribute helper method to modify the content of attributable records (#12206)"],"receiver":["Mark module as stable (#12513)"],"receiverhelper":["Split `receiverhelper` into a separate module (#28328)"],"service":["Batch processor telemetry is no longer emitted at \"basic\" verbosity level (#7890)","Add `service.AllowNoPipelines` feature gate to allow starting the Collector without pipelines. (#12613)","include component id/type in start error (#10426)","do not attempt to register process metrics if they are disabled (#12098)"],"zpagesextension":["Add expvar handler to zpages extension. (#11081)"]},"v0.122.1":{"confmap":["Ensure slices with defaults containing struct values are correctly set. (#12661)"]},"v0.123.0":{"(general)":["This version increases memory usage by ~0.5 MB per component in the pipelines because a separate Zap Core logger is","See issue description for workarounds.","not setting `service::telemetry::metrics::level` to `detailed`;","enabling the `telemetry.disableHighCardinalityMetrics` feature flag."],"configauth.Authenticator.GetClientAuthenticator":["."],"exporterbatch":["Remove deprecated fields `min_size_items` and `max_size_items` from batch config. (#12684)","Remove deprecated fields `min_size_items` and `max_size_items` from batch config. (#12684)"],"exporterbatcher":["Deprecated Config, SizeConfig, SizerType, SizerType[Requests|Items|Bytes], NewDefaultConfig. Use alias from exporterhelper. (#12707)"],"exporterhelper":["Deprecate `blocking` in favor of `block_on_overflow`. (#12710)","Deprecate configuring exporter batching separately. Use `sending_queue::batch` instead. (#12772)","Add support to configure batching in the sending queue. (#12746)","Add support for wait_for_result, remove disabled_queue (#12742)","Allow exporter memory queue to use different type of sizers. (#12708)","Enable support to do batching using `bytes` sizer (#12751)","üêû Fix order of starting between queue and batch. (#12705)","Remove deprecated converter types from exporterhelper (#12686)","Deprecate BatcherConfig, SizeConfig and WithBatcher in favor of the new QueueBatchConfig. (#12748)","Deprecate exporterhelper WithRequestQueue in favor of WithQueueBatch (#12679)","Deprecate `QueueConfig` in favor of `QueueBatchConfig`. (#12746)"],"exporterqueue":["Move Queue interface to internal, disallow alternative implementations (#12680)","Deprecated Config, NewDefaultConfig, Encoding, ErrQueueFull. Use alias from exporterhelper. (#12706)"],"extensionauth":["Mark module as stable (#11006)"],"extensionauth, configauth":["Remove deprecated types and functions from `extensionauth` and `configauth` packages. (#12672)"],"extensionauth.ClientOption":["and all its implementations,"],"extensionauth.NewClient":[","],"extensionauth.NewServer":[","],"extensionauth.ServerOption":["and all its implementations and"],"otlpexporter":["Mark BatcherConfig as deprecated, use `sending_queue::batch` instead (#12726)"],"otlpreceiver/otlpexporter/otlphttpexporter":["Avoid using go embedded messages in Config (#12718)"],"processor":["Mark module as stable. (#12677)"],"processorhelper":["Split processorhelper into a separate module. (#12678)"],"service":["Add \"telemetry.newPipelineTelemetry\" feature gate to inject component-identifying attributes in internal telemetry (#12217)","Add config key to set metric views used for internal telemetry (#10769)"],"service/telemetry":["Missing attributes in internal Collector logs (#12870).","Mark `telemetry.disableAddressFieldForInternalTelemetry` as beta, usage of deprecated service::telemetry::address are ignored (#12756)"]},"v0.124.0":{"(general)":["See issue description for workarounds."],"client":["Add support for iterating over client metadata keys (#12804)"],"cmd/mdatagen":["Add the foundational changes necessary for supporting logs data in `mdatagen` (#12571)"],"confighttp":["Ensure http authentication server failures are handled by the provided error handler (#12666)"],"exporterbatcher":["Remove deprecated package exporterbatcher (#12780)"],"exporterhelper":["Add support for bytes-based batching for profiles in the exporterhelper package. (#3262)","Link batcher context to all batched request's span contexts. (#12212, #8122)"],"exporterqueue":["Remove deprecated package exporterqueue (#12779)"],"mdatagen":["Add variable for metric name in mdatagen (#12459)"],"otelcol":["Enhance config validation using \u003cvalidate\u003e command to capture all validation errors that prevents the collector from starting. (#8721)"],"service":["Adds the GetFactory interface to the hostcapabilities package (#12789)"],"service/telemetry":["Missing attributes in internal Collector logs (#12870)."]},"v0.125.0":{"configgrpc":["Add gRPC middleware support. (#12603, #9591)"],"confighttp":["Add HTTP middleware support. (#12603, #9591, #7441)"],"configmiddleware":["Add extensionmiddleware interface. (#12603, #9591)","Add configmiddleware struct. (#12603, #9591)"],"confmap":["Maintain nil values when marshaling or unmarshaling nil slices (#11882)"],"exporterhelper":["Do not ignore the `num_consumers` setting when batching is enabled. (#12244)","Reject elements larger than the queue capacity (#12847)"],"extensionauthtest":["Deprecate NewErrorClient in favor of NewErrClient. (#12874)"],"mdatagen":["Add support for attributes for telemetry configuration in metadata. (#12919)","Add time and plog package imports (#12907)"],"pdata":["Add MoveTo to pcommon.Value, only type missing this (#12877)","üêû Fix MoveTo when moving to the same destination (#12887)"],"service":["Lowercase values for 'otelcol.component.kind' attributes. (#12865)","Restrict the `telemetry.newPipelineTelemetry` feature gate to metrics. (#12856, #12933)"],"xextension/storage":["ErrStorageFull error added to xextension/storage contract (#12925)"]},"v0.126.0":{"(general)":["When receiving a request with encoding 'snappy', the server endpoints will peek","Client compression type \"snappy\" will now compress to the \"block\" variant of snappy","Servers will accept both \"snappy\" and \"x-snappy-framed\" as valid content-encodings."],"cmd/mdatagen":["Add type definition for events in mdatagen (#12571)","Add functions for processing structured events in mdatagen (#12571)"],"configauth":["Removes deprecated `configauth.Authentication` and `extensionauthtest.NewErrorClient` (#12992)","Deprecate `configauth.Authentication` in favor of `configauth.Config`. (#12875)"],"configauth.Authentication":["use `configauth.Config` instead"],"confighttp and configcompression":["üêû Fix handling of `snappy` content-encoding in a backwards-compatible way (#10584, #12825)"],"confmap":["Update the behavior of the confmap.enableMergeAppendOption feature gate to merge only component lists. (#12926)","Use reflect.DeepEqual to avoid panic when confmap.enableMergeAppendOption feature gate is enabled. (#12932)"],"exporterhelper":["Add validation error for batch config if min_size is greater than queue_size. (#12948)"],"extensionauthtest.NewErrorClient":["use `extensionauthtest.NewErr` instead"],"internal telemetry":["Add resource attributes from telemetry.resource to the logger (#12582)"],"service":["Replace `go.opentelemetry.io/collector/semconv` usage with `go.opentelemetry.io/otel/semconv` (#12991)","Add item count metrics defined in Pipeline Component Telemetry RFC (#12812)"],"telemetry":["Allocate less memory per component when OTLP exporting of logs is disabled (#13014)"],"tls":["Add trusted platform module (TPM) support to TLS authentication. (#12801)"],"tlsconfig":["Disable TPM tests on MacOS/Darwin (#12964)"]},"v0.127.0":{"cmd/mdatagen":["Add events in generated documentation (#12571)"],"confmap":["Add a `Conf.Delete` method to remove a path from the configuration map. (#13064)","Support running Unmarshal hooks on nil values. (#12981)"],"consumer/consumertest":["Add context to sinks (#13039)"],"exporter/debug":["Display resource and scope in `normal` verbosity (#10515)"],"mdatagen":["Add context parameter for recording event to set traceID and spanID (#12571)"],"otlpreceiver":["Use wrapper type for URL paths (#13046)"],"pdata/profile":["Replace AddAttribute with the PutAttribute helper method to modify the content of attributable records. (#12798)"],"pipeline":["Deprecate MustNewID and MustNewIDWithName (#12831)"],"semconv":["Deprecating the semconv package in favour of go.opentelemetry.io/otel/semconv (#13012)"],"service":["Add size metrics defined in Pipeline Component Telemetry RFC (#13032)"]},"v0.128.0":{"(general)":["The previous default was a TLS config with no certificates, which would fail at runtime."],"confighttp":["Update the HTTP server span naming to use the HTTP method and route pattern instead of the path. (#12468)","Remove pointer to field `cookies` in confighttp.ClientConfig (#13116)","Make the `NewDefaultServerConfig` function return a nil TLS config by default. (#13129)"],"confighttp,configgrpc":["Rename `ClientConfig.TLSSetting` and `ServerConfig.TLSSetting` to `ClientConfig.TLS` and `ServerConfig.TLS`. (#13115)"],"configoptional":["Add a new configoptional module to support optional configuration fields. (#12981)"],"confmap":["Do not panic on assigning nil maps to non-nil maps (#13117)","Correctly distinguish between `nil` and empty map values on the `ToStringMap` method (#13161)"],"exporterhelper":["Remove deprecated NewProfilesRequestExporter function from xexporterhelper package (#13157)"],"mdatagen":["üêû Fix generation when there are no events in the metadata. (#13123)"],"otlpreceiver":["Use `configoptional.Optional` to define optional configuration sections in the OTLP receiver. Remove `Unmarshal` method. (#13119)"],"pdata":["üêû Fix event_name skipped when unmarshalling LogRecord from JSON (#13127)","Introduce `MoveAndAppendTo` methods to the generated primitive slices (#13074)","Upgrade the OTLP protobuf definitions to version 1.7.0 (#13075)"],"pdata/pprofile":["Upgrade the OTLP protobuf definitions to version 1.7.0 (#13075)"],"pipeline":["Remove deprecated MustNewID[WithName] (#13139)"],"service":["Use configured loggers to log errors as soon as it is available (#13081)","Remove stabilized featuregate useOtelWithSDKConfigurationForInternalTelemetry (#13152)"],"service/telemetry":["Mark \"telemetry.disableAddressFieldForInternalTelemetry\" as stable (#13152)"],"telemetry":["Add generated resource attributes to the printed log messages. (#13110)"]},"v0.129.0":{"configgrpc,confighttp":["Unify return type of `NewDefault*Config` functions to return a struct instead of a pointer. (#13169)"],"configoptional":["Make unmarshaling into `None[T]` work the same as unmarshaling into `(*T)(nil)`. (#13168)","Add a confmap.Marshaler implementation for configoptional.Optional (#13196)"],"confmap":["Distinguish between empty and nil values when marshaling `confmap.Conf` structs. (#13196)"],"exporterhelper":["Remove deprecated sending_queue::blocking options, use sending_queue::block_on_overflow. (#13211)","Preserve request span context and client information in the persistent queue. (#11740, #13220, #13232)","QueueBatchEncoding interface is changed to support marshaling and unmarshaling of request context. (#13188)"],"mdatagen":["Taught mdatagen to print the `go list` stderr output on failures, and to run `go list` where the metadata file is. (#13205)"],"pdata":["üêû Fix copying of optional fields when the source is unset. (#13268)"],"pdata/pprofile":["Add new helper methods `FromLocationIndices` and `PutLocation` to read and modify the content of locations. (#13150)","Introduce `Equal` method on the `Mapping` type (#13197)","Introduce `Equal` methods on the `Line` and `Location` types (#13150)","Add new helper method `SetMapping` to set a new mapping on a location. (#13197)"],"semconv":["Removing deprecated semconv package (#13071)"],"service":["Support setting `sampler` and `limits` under `service::telemetry::traces` (#13201)","Only allocate one set of internal log sampling counters (#13014)"]},"v0.130.0":{"(general)":["üêû Due to a [bug](https://github.com/open-telemetry/opentelemetry-go/issues/7039) in the internal telemetry Prometheus exporter, if you are configuring an internal telemetry Prometheus exporter, the collector's internal metrics will be emitted with an unexpected suffix in its name. For example, the metric `otelcol_exporter_sent_spans__spans__total` instead of `otelcol_exporter_sent_spans_total`. The workaround is to manually configure `without_units: true` in your internal telemetry Prometheus exporter config","pull:"],"cmd/mdatagen":["Add support for optional attribute (#12571)"],"configgrpc":["Update optional fields to use `configoptional.Optional` field for optional values. (#13250, #13252)"],"confighttp":["Use configoptional.Optional in confighttp (#9478)"],"consumererror":["Add `Error` type (#7047)"],"exporter/otlp":["Remove deprecated batcher config from OTLP, use queuebatch (#13339)","Remove deprecated batcher config from OTLP, use queuebatch (#13339)"],"exporterhelper":["Enable items and bytes sizers for persistent queue (#12881)","Refactor persistent storage size backup to always record it. (#12890)","Add support to configure a different Sizer for the batcher than the queue (#13313)","üêû Fix exporter.PersistRequestContext feature gate (#13342)","Preserve all metrics metadata when batch splitting. (#13236)","Use configoptional for sending_queue::batch field (#13345)","Remove sizer map in favor of items/bytes sizers. Request based is automatically supported. (#13262)","Remove deprecated old batcher config (#13003)","Deprecate NewRequestsSizer always supported. (#13262)","Add support to configure a different Sizer for the batcher than the queue (#13313)"],"pdata":["Document that changing pcommon.Map (Remove/removeIf/Put*) invalidates Value references obtained via Get. (#13073)","Add support for the new resource-entity reference API as part of the experimental xpdata package. (#13264)"],"pdata/pprofile":["Remove field Profile.StartTime from pdata/pprofile (#13315)"],"service":["Default internal metrics config now enables `otel_scope_` labels (#12939, #13344)"],"xexporterhelper":["Introduce NewProfiles method and deprecate NewProfilesExporter (#13372)"],"yaml":["Replaced `sigs.k8s.io/yaml` with `go.yaml.in/yaml` for improved support and long-term maintainability. (#13308)"]},"v0.130.1":{"service":["üêû Fixes bug where internal metrics are emitted with an unexpected suffix in their names when users configure `service::telemetry::metrics::readers` with Prometheus. (#13449)"]}},"otelcol-contrib":{"v0.104.0":{"(general)":["extension/awsproxy","extension/health_check","extension/health_checkv2","extension/jaegerremotesampling","internal/aws/proxy","processor/remotetap","receiver/awsfirehose","receiver/awsxray","receiver/influxdb","receiver/jaeger","receiver/loki","receiver/opencensus","receiver/sapm","receiver/signalfx","receiver/skywalking","receiver/splunk_hec","receiver/zipkin","receiver/zookeeper"],"all":["Promote `component.UseLocalHostAsDefaultHost` feature gate to beta. This changes default endpoints from 0.0.0.0 to localhost (#30702)"],"awsemfexporter":["AWS EMF Exporter to add AppSignals metadata flag into the user-agent (#32998)"],"clickhouseexporter":["Add `AggregationTemporality` column to histogram and exponential histogram tables. Rename `AggTemp` column to `AggregationTemporality` in sum table. (#33424)","Updated the default logs table to a more optimized schema (#33611)"],"datadogconnector":["Add a feature gate `connector.datadogconnector.NativeIngest` that enables datadog connector to use the new native OTel API in APM stats computation. (#33297)"],"datadogexporter":["Adds Kubernetes DD tags to keep when mapping resource attributes (#33728)","üêû Fix panics on invalid sized trace \u0026 span IDs (#33566)","Ignore metric datapoints with `no recorded value` flag (#33728)"],"datasetexporter":["üêû Upgrade dataset-go to v0.19.0 and fix found issues (#33498, #32533, #33675)","Upgrade dataset-go to v0.20.0 (#33812)"],"elasticsearchexporter":["Add translation for k8s.deployment.name resource  attribute (#33622)","Preserve `host.name` resource attribute in ECS mode (#33670)"],"exporter/clickhouse":["Change behavior of how default database is read from the config (#33693)","Add `async_insert` config option to enable inserting asynchronously by default. (#33614)","Remove deprecated `ttl_days` config option, use `ttl` instead. (#33648)","Unexport extra configuration methods. (#33647)","Change internal config type for `create_schema` to use a `bool` instead of `*bool` (#33694)"],"exporter/elasticsearch":["Deprecate the \"dedot\" configuration. (#33772)","Deprecate the \"dedup\" configuration. (#33773)","Add initial support for metrics (#33513)","Add data stream routing (#33794, #33756)","Encode metrics resource attributes in ECS mapping mode (#33823)"],"extension/googleclientauth":["Add Google-signed ID token support (#33185)"],"geoipprocessor":["Add MaxMind geoip provider for GeoIP2-City and GeoLite2-City databases. (#32663)"],"k8sattributesprocessor":["Add support for exposing `k8s.pod.ip` as a resource attribute (#32960)"],"k8sobserver":["Add support for k8s.ingress endpoint. (#32971)"],"loadbalancerexporter":["Refactors how the load balancing exporter splits metrics (#32513)"],"observerextension":["Expose host and port in endpoint's environment (#33571)"],"otelarrow":["OTel-Arrow exporter and receiver are marked alpha, added to otelcontribcol (#26491)"],"otelarrowreceiver":["Ensure consume operations are not canceled at stream EOF. (#33570)"],"pkg/ottl":["Add a `schema_url` field to access the SchemaURL in resources and scopes on all signals (#30229)","Changed ScopeContext, InstrumentationResourceContext, TransformContext interfaces to make SchemaURL accessible in resources and scopes on all signals (#30229)","Add ByteSliceLikeGetter interface (#31929)"],"pkg/stanza":["Switch JSON parser used by json_parser to github.com/goccy/go-json (#33784)"],"rabbitmqexporter":["Promote rabbitmqexporter to alpha. (#33331)"],"receiver/mongodb":["Graduate receiver.mongodb.removeDatabaseAttr feature gate to stable (#24972)","Ensure support of 6.0 and 7.0 MongoDB versions with integration tests (#32716)"],"receiver/mongodbreceiver":["Add `server.address` and `server.port` resource attributes to MongoDB receiver. (#32810, #32350)"],"resourcedetectionprocessor":["Fetch CPU info only if related attributes are enabled (#33774)"],"routingprocessor":["Use mdatagen to define the component's telemetry (#33526)"],"server.address":["The address of the MongoDB host, enabled by default."],"server.port":["The port of the MongoDB host, disabled by default."],"servicegraphprocessor":["Added a new configuration option `enable_virtual_node_label` to allow users to identify which node is the virtual node in each edge of the service graph. (#31889)"],"solacereceiver":["Renamed some SemConv fields to support latest semantic conventions for messaging spans (version `1.25.0`) (#33499)"],"sqlserverreceiver":["Enable more perf counter metrics when directly connecting to SQL Server (#33420)"],"statsdreceiver":["Optimize statsdreceiver to reduce object allocations (#33683)"],"sumologicexporter":["removed compress_encoding (#33604)","added timeout validation (#33151)"],"tailsamplingprocessor":["üêû Fix precedence of inverted match in and policy (#33671)"],"vcenterreceiver":["Drops support for vCenter 6.7 (#33607)","Adds vCenter CPU readiness metric for VMs. (#33607)","Adds vCenter CPU capacity and network drop rate metrics to hosts. (#33607)","üêû Fixes errors in some of the client calls for environments containing multiple datacenters. (#33734)"]},"v0.105.0":{"(general)":["This change can expose cardinality issues where the counters were previously collapsed under the non-indexed instance name.","üêû The change mimics Windows Performance Monitor behavior: The first instance name remains unchanged, additional instances are suffixed with `#\u003cN\u003e` where `N=1` and is increased for each duplicate.","e.g. Given 3 powershell instances, this will return `powershell`, `powershell#1` and `powershell#2`."],"apachesparkreceiver":["Updating the stability to reflect that the component is shipped as part of contrib. (#33906)"],"awss3receiver":["Add support for retrieving logs and metrics to the AWS S3 Receiver. (#30750)"],"awsxrayexporter":["Allow multiple log group names/arns to be set in environmental variables (#33795)"],"azureblobreceiver":["Updating the stability to reflect that the component is shipped as part of contrib. (#33902)"],"azuremonitorreceiver":["Add `maximum_number_of_records_per_resource` config parameter in order to overwrite default (#32165)","Upgrade stability to alpha (#33689)"],"clickhouseexporter":["Upgrading stability for logs to beta (#33615)"],"cloudfoundryreceiver":["Add support to receive CloudFoundry Logs (#32671)"],"cmd/opampsupervisor":["Adds support for forwarding custom messages to/from the agent (#33575)"],"cmd/telemetrygen":["üêû Fix `make docker-telemetrygen` command. (#33989)"],"countconnector":["Updating the stability to reflect that the component is shipped as part of contrib. (#33903)"],"datadogexporter":["Add a feature gate `exporter.datadogexporter.TraceExportUseCustomHTTPClient` that allows a custom HTTP client to be used in trace export (#34025)","Exit when API key validation fails and `api::fail_on_invalid_key` is set to `true`. (#33935)"],"datadogreceiver":["Add support for metrics in Datadog receiver (#18278)"],"deltatorateprocessor":["Updating the stability to reflect that the component is shipped as part of contrib. (#33904)"],"dockerobserver":["Add hint to error when using float for `api_version` field (#34043)"],"dockerstatsreceiver":["Add hint to error when using float for `api_version` field (#34043)"],"elasticsearchexporter":["Make \"dedup\" option no-op, always de-duplicate. (#33773)","Remove defunct \"file\" and \"fields\" configuration settings. (#33803)","Introduce experimental `telemetry.log_request_body` and `telemetry.log_response_body` config (#33854)"],"extension/opamp":["Rely on the Collector APIs to do config redaction (#34078)"],"extensions/observer/cfgardenobserver":["Add a new observer that discovers containers through the Garden API (#33618)"],"geoipprocessor":["Add providers configuration and maxmind provider factory (#33269)"],"healthcheckv2extension":["Add partial gRPC service implementation to healthcheckv2. (#26661)","Add support for streaming Watch RPC to healthcheckv2 gRPC service. (#26661)","Add HTTP service to healthcheckv2 (#26661)"],"httpcheckreceiver":["Updating the stability to reflect that the component is shipped as part of contrib. (#33897)"],"kafkametricsreceiver":["üêû Fix issue with incorrect consumer offset (#33309)"],"kubeletstatsreceiver":["Add `k8s.pod.memory.node.utilization` and `k8s.container.memory.node.utilization` metrics (#33591)"],"loadbalancingexporter":["Adds a new streamID routingKey, which will route based on the datapoint ID. See updated README for details (#32513)"],"lokiexporter":["Deprecate component (#33916)"],"metricsgenerationprocessor":["Updating the stability to reflect that the component is shipped as part of contrib. (#33905)"],"pkg/ottl":["Added Hex() converter function (#31929)","Add IsRootSpan() converter function. (#32918)","Emit traces for statement sequence executions to troubleshoot OTTL statements/conditions (#33433)"],"pkg/stanza":["Add `parse_ints` config in json parser to support parsing int or float properly (#33696)","Bump 'logs.jsonParserArray' and 'logs.assignKeys' feature gates to beta. (#33948)","Switch to faster json parser lib for container operator (#33929)"],"podmanreceiver":["Updating the stability to reflect that the component is shipped as part of contrib. (#33899)"],"probabilisticsamplerprocessor":["üêû Fix bug where log sampling was being reported by the counter `otelcol_processor_probabilistic_sampler_count_traces_sampled` (#33874)"],"processor/groupbyattrsprocessor":["üêû Fix dropping of metadata fields when processing metrics. (#33419)"],"processor/resource, processor/attributes":["Add an option to extract value from a client address by specifying `client.address` value in the `from_context` field. (#34051)"],"prometheusreceiver":["üêû Fix hash computation to include non exported fields like regex in scrape configuration for TargetAllocator (#29313)"],"purefareceiver":["Updating the stability to reflect that the component is shipped as part of contrib. (#33901)"],"purefbreceiver":["Updating the stability to reflect that the component is shipped as part of contrib. (#33900)"],"receiver/azuremonitorreceiver":["Add support for Managed Identity and Default Credential auth (#31268, #33584)"],"receiver/filelog":["Add filelog.container.removeOriginalTimeField feature-flag for removing original time field (#33946)"],"servicegraphconnector":["üêû Fix failed label does not work leads to servicegraph metrics error (#32018)"],"skywalkingexporter":["Remove unmaintained component (#23796)"],"splunkhecexporter":["Increase the performance of JSON marshaling (#34011)"],"sqlserverreceiver":["Enable default metrics to properly trigger SQL Server scrape (#34065)"],"stanza":["errors from Operator.Process are returned instead of silently ignored. (#33783)"],"statsdreceiver":["Allow configuring summary percentiles (#33701)"],"sumconnector":["creates a wireframe and initial pr to develop from (#32669)"],"syslogreceiver":["Allow to define `max_octets` for octet counting RFC5424 syslog parser (#33182)"],"telemetrygen":["telemetrygen `--rate` flag changed from Int64 to Float64 (#33984)"],"testbed":["üêû Fixes incorrect count for sent data items in load generator. (#34057)"],"vcenterreceiver":["Enables various vCenter metrics that were disabled by default until v0.105 (#34022)","Adds additional vCenter resource pool metrics and a memory_usage_type attribute for vcenter.resource_pool.memory.usage metric to use. (#33607)","Adds vCenter metrics at the datacenter level. (#33607)"],"windowsperfcountersreceiver":["`windowsperfcountersreceiver` now appends an index number to additional instance names that share a name. An example of this is when scraping `\u2029rocess(*)` counters with multiple running instances of the same executable. (#32319)","Metric definitions with no matching performance counter are no longer included as metrics with zero datapoints in the scrape output. (#4972)"],"zookeeperreceiver":["Updating the stability to reflect that the component is shipped as part of contrib. (#33898)"]},"v0.106.0":{"(general)":["vcenter.host.vsan.throughput","vcenter.host.vsan.iops","vcenter.host.vsan.congestions","vcenter.host.vsan.cache.hit_rate","vcenter.host.vsan.latency.avg"],"clickhouseexporter":["Increase the default number of queue consumers to 10 (#34176)"],"datadogconnector":["Produce stats for non-root client and producer spans when `connector.datadogconnector.NativeIngest` and `compute_top_level_by_span_kind` are enabled (#34197)","Respect `_dd.measured` when `connector.datadogconnector.NativeIngest` is enabled (#34197)"],"deltatocumulativeprocessor":["üêû fix bucket counts when downscaling exp histograms with odd offsets (#33831)"],"elasticsearchexporter":["Add explicit bounds histogram support to metrics (#34045)","Introduce an experimental OTel native mapping mode for logs (#33290)"],"exporter/datadog":["üêû Fixes a bug where `otelcol_exporter_sent_log_records` was reporting double as many logs sent when using the logs agent feature gate. (#33887)"],"extension/healthcheckv2":["Add extension/subcomponent management logic. (#26661)"],"googlemanagedprometheusexporter":["üêû Fix typo in `exporter.googlemanagedpromethues.intToDouble` feature gate (#34232)"],"hostmetricsreceiver":["allow configuring log pipeline to send host EntityState event (#33927)"],"k8sattributesprocessor":["Deprecate `extract.annotations.regex` and `extract.labels.regex` config fields in favor of the `ExtractPatterns` function in the transform processor. The `FieldExtractConfig.Regex` parameter will be removed in version v0.111.0. (#25128)"],"kafkareceiver":["Add settings session_timeout and heartbeat_interval to Kafka Receiver for group management facilities (#28630)"],"metricstransformprocessor":["Adds the 'median' aggregation type to the Metrics Transform Processor. Also uses the refactored aggregation business logic from internal/core package. (#16224)"],"opencensusreceiver":["Do not report an error into resource status during receiver shutdown when the listener connection was closed. (#33865)"],"otelarrowreceiver":["üêû Fix potential goroutine leak when in stream-shutdown. (#34236)","Eliminate one spurious span error. (#34175)"],"otelarrowreceiver, otelarrowexporter":["OTel-Arrow internal packages moved into this repository. (#33567)"],"otlpjsonconnector":["New component that will allow extracting otlpjson data from incoming Logs. (#34239, #34208)","Add connector's implementations (#34249, #34208)","Move connector's stability to alpha. (#34208, #34253)"],"pkg/ottl":["Adds an `Format` function to OTTL that calls `fmt.Sprintf` (#33405)","Handle JSON array provided to ParseJSON function (#33535)"],"processor/transform":["Add `scale_metric` function that scales all data points in a metric. (#16214)"],"redis_storage":["Adds a new storage extension using Redis to store data in transit (#31682)"],"statsdeceiver":["Log only non-EOF errors when reading payload received via TCP. (#33951)"],"telemetrygen":["uses the go logging SDK instead of pdata (#18902)"],"transformprocessor":["Support aggregating metrics based on their attributes. (#16224)"],"vcenterreceiver":["Enables various vCenter metrics that were disabled by default until v0.106.0 (#33607)","Adds vCenter vSAN host metrics. (#33556)","Adds a number of default disabled vSAN metrics for Clusters. (#33556)","Adds a number of default disabled vSAN metrics for Virtual Machines. (#33556)","Adds destroys to the ContainerViews in the client. (#34254)"],"windowsperfcountersreceiver":["Improve handling of non-existing instances for Windows Performance Counters (#33815)"]},"v0.106.1":{"configauth":["üêû Fix unmarshaling of authentication in HTTP servers. (#34325)"]},"v0.107.0":{"(general)":["Update the scope name for telemetry produce by components. The following table summarizes the changes:","vcenter.cluster.vsan.throughput","vcenter.cluster.vsan.operations","vcenter.cluster.vsan.latency.avg","vcenter.cluster.vsan.congestions","vcenter.host.vsan.throughput","vcenter.host.vsan.operations","vcenter.host.vsan.latency.avg","vcenter.host.vsan.congestions","vcenter.host.vsan.cache.hit_rate","vcenter.vm.vsan.throughput","vcenter.vm.vsan.operations","vcenter.vm.vsan.latency.avg"],"awsemfexporter":["üêû AWS EMF Exporter to update ApplicationSignals log group name and namespace, and adjust AWS service name prefix logic in spans (#33798)"],"azureeventhubreceiver":["Added traces support in azureeventhubreceiver (#33583)"],"azuremonitorreceiver":["Add Azure China as a `cloud` option. (#34315)"],"bearertokenauthextension":["üêû use constant time comparison. This fixes CVE-2024-42368 (#34516)"],"clickhouseexporter":["Add `compress` option to ClickHouse exporter, with default value of `lz4` (#34365)","Updated the default logs table to a more optimized schema (#34203)","Use observed timestamp if timestamp is zero (#34150)"],"cmd/opampsupervisor":["Start even if the OpAMP server cannot be contacted, and continually retry connecting. (#33408, #33799)","Write the generated effective config and agent log files to the user-defined storage directory. (#34341)"],"configauth":["üêû Fix unmarshaling of authentication in HTTP servers. (#34325)"],"coralogixprocessor":["creating new component for coralogix features (#33090)"],"datadogconnector":["Move feature gate `connector.datadogconnector.NativeIngest` to beta (#34549)"],"docker_observer":["Change default endpoint for `docker_observer` on Windows to `npipe:////./pipe/docker_engine` (#34358)"],"elasticsearchexporter":["Add opt-in support for the experimental `batcher` config (#32377)","Add summary support for metrics (#34560)"],"elasticsearchreceiver":["Enable more index metrics by default (#34396)","Add metric for active index merges (#34387)"],"exporter/datadog":["Deprecates `logs::dump_payloads` since it is invalid with the Datadog Agent logs pipeline, which will be enabled by default in the v0.108.0 release. (#34490)"],"exporter/prometheusremotewrite":["Reduce unnecessary memory allocation by removing buffer that was not used by Snappy encoding function. (#34273)","Reduce memory allocations of prometheus remote write exporter \"batchtimeseries\" when large batch sizes are used (#34269)"],"filelogreceiver":["Check for unsupported fractional seconds directive when converting strptime time layout to native format (#34390)"],"googlecloudmonitoringreceiver":["Adding new component - [Google Cloud monitoring](https://cloud.google.com/monitoring/api/metrics_gcp) receiver to fetch GCP Cloud Metrics and transform to OpenTelemetry compatible format. (#33762)","Adding new component - [Google Cloud monitoring](https://cloud.google.com/monitoring/api/metrics_gcp) receiver to fetch GCP Cloud Metrics and transform to OpenTelemetry compatible format. (#33762)"],"hostmetricsreceiver":["add reporting interval to entity event (#34240)"],"internal/grpcutil":["Add internal/grpcutil package with gRPC-specified timeout parsing (#33688)"],"kafkaexporter":["add an ability to partition logs based on resource attributes. (#33229)","add an ability to partition logs based on resource attributes. (#33229)"],"kafkametricsreceiver":["Add option to configure cluster alias name and add new metrics for kafka topic configurations (#34148)"],"logdedup":["Make the name of the log deduplication component consistent (#34571)"],"logdedupeprocessor":["Add new logdedupeprocessor processor that deduplicates log entries. (#34118)"],"logdedupprocessor":["Adds a histogram metric to record the number of aggregated log records. (#34579)","Updates stability level to alpha. (#34575)","Ensures any pending aggregated logs are processed and sent to the next consumer before shutting down. (#34615)","Adds a scope aggregator to the logdedup processor enabling the aggregation of logs per scope. (#34606)","Simplifies the processor shutdown behaviour by removing the unnecessary done channel. (#34478)"],"pkg/ottl":["Add support for map literals in OTTL (#32388)","Introduce ExtractGrokPatterns converter (#32593)","Add the `MD5` function to convert the `value` into a MD5 hash/digest (#33792)","Introduce `sha512` converter to generate SHA-512 hash/digest from given payload. (#34007)"],"pkg/stanza":["Ensure that errors from `Process` and `Write` do not break for loops (#34295)"],"pkg/translator/jaeger":["Change the translation to jaeger spans to match semantic conventions. (#34368)"],"pmetrictest":["Add support for histogram comparison options (#34521)"],"postgresqlreceiver":["Support unix socket based replication by handling null values in the client_addr field (#33107)"],"processor/k8sattributes":["Add support for `container.image.repo_digests` metadata (#34029)"],"receiver/splunkhec":["Add a regex to enforce metrics naming for Splunk events fields based on metrics documentation. (#34275)"],"splunkhecexporter":["Copy the bytes to be placed in the request body to avoid corruption on reuse (#34357)"],"syslogexporter":["üêû Fix issue where exporter may hang indefinitely while dialing. (#34393)"],"telemetrygen":["Support boolean values in `--telemetry-attributes` and `--otlp-attributes` flag (#18928)"],"vcenterreceiver":["Enables all of the vSAN metrics by default. (#34409)"],"webhookeventreceiver":["added a timestamp to the logs generated from incoming events. (#33702)"],"windowseventlogreceiver":["Add remote collection support to Stanza operator windows pkg to support remote log collect for the Windows Event Log receiver. (#33100)"]},"v0.108.0":{"(general)":["Added a `ref.type` attribute","vcenter.host.cpu.reserved","vcenter.host.disk.latency.avg","vcenter.host.disk.latency.max","vcenter.host.disk.throughput","vcenter.host.network.packet.drop.rate","vcenter.host.network.packet.error.rate","vcenter.host.network.packet.rate","vcenter.host.network.throughput","vcenter.host.network.usage"],"all":["Added support for go1.23, bumped the minimum version to 1.22 (#34658)"],"awsfirehosereceiver":["üêû Fix validation of requests with empty access key (fixes CVE-2024-45043 / GHSA-prf6-xjxh-p698) (#34847)"],"awss3receiver":["üêû Enhance the logging of the AWS S3 Receiver in normal operation to make it easier for user to debug what is happening. (#30750)"],"azuretranslator":["The scope name has been updated from `otelcol/azureresourcelogs` and `otelcol/azureresourcetraces` to `github.com/open-telemetry/opentelemetry-collector-contrib/pkg/translator/azure` (#34712)"],"branch.name":["is now `ref.name`"],"cmd/opampsupervisor":["üêû Fix supervisor support for Windows. (#34570)"],"connector/exceptionsconnector":["üêû Fix dimensions configuration did not take effect for resource attributes (#34603)"],"datadogconnector":["Add a config `traces::bucket_interval` (#34554)","üêû Put back the `otelcol_` prefix for Datadog internal metrics on trace and APM stats exporting (#34807)"],"datadogexporter":["üêû Put back the `otelcol_` prefix for Datadog internal metrics on trace and APM stats exporting (#34807)"],"datadogreceiver":["The scope name has been updated from `otelcol/datadogreceiver` to `github.com/open-telemetry/opentelemetry-collector-contrib/receiver/datadogreceiver/internal/translator` (#34711)","Implement '/info' endpoint (#34772)","Add sampling.priority attribute for Probabilistic Sampling Processor (#34267)","Implement '/stats' endpoint (#34790)","Include error when logging unmarshaling failures in Datadog receiver. (#34515)","add feature discovery (#34718)"],"deltatocumulative":["Promote to `alpha` stability (#34747)","explicit-bounds histograms (#30705)"],"elasticsearchexporter":["Update OTel mapping mode for logs and metrics; Remove trace_flags (#34472)","Change default retry.retry_on_status to [429] (#32584)","Add OTel mapping mode for metrics (#34248)","Add OTel mapping mode for traces (#34588, #34590)"],"exporter/datadog":["The `logs::dump_payloads` config option is invalid when the Datadog Agent logs pipeline is enabled (now enabled by default). (#34420)","Use Datadog Agent logs pipeline by default for exporting logs to Datadog. Upgrades `exporter.datadogexporter.UseLogsAgentExporter` feature flag to beta. (#34420)"],"exporter/doris":["Add a new component for exporting logs, traces and metrics to Doris (#33479)"],"filelogreceiver":["If acquire_fs_lock is true, attempt to acquire a shared lock before reading a file. (#34801)"],"geoipprocessor":["Add a context configuration option to specify the IP address attribute telemetry location. (#34036)","Move processor's stability to alpha. (#34737)"],"git.repository.branch.commit.aheadby.count":["is now `vcs.repository.ref.revisions_ahead`"],"git.repository.branch.commit.behindby.count":["is now `vcs.repository.ref.revisions_behind"],"git.repository.branch.count":["is now `vcs.repository.ref.count`"],"git.repository.branch.line.addition.count":["is now `vcs.repository.ref.lines_added`"],"git.repository.branch.line.deletion.count":["is now `vcs.repository.ref.lines_deleted`"],"git.repository.branch.time":["is now `vcs.repository.ref.time"],"git.repository.contributor.count":["is now `vcs.repository.contributor.count`"],"git.repository.count":["is now `vcs.repository.count`"],"git.repository.pull_request.count":["is now `vcs.change.count`"],"git.repository.pull_request.time_open":["is now `vcs.change.time_open`"],"git.repository.pull_request.time_to_approval":["is now `vcs.change.time_to_approval`"],"git.repository.pull_request.time_to_merge":["is now `vcs.change.time_to_merge`"],"git.vendor.name":["is now `vcs.vendor.name`"],"gitproviderreceiver":["Update metric names and attributes to match the newest Semantic Conventions for VCS. (#34278)"],"googlecloudmonitorreceiver":["The scope name has been updated from `otelcol/googlecloudmonitoringreceiver` to `github.com/open-telemetry/opentelemetry-collector-contrib/receiver/googlecloudmonitoringreceiver` (#34709)"],"k8sclusterreceiver":["üêû Lower the log level of a message indicating a cache miss from WARN to DEBUG. (#34817)"],"lokiexporter":["Update the scope name for telemetry produced by the lokiexporter from `otelcol/loki` to `github.com/open-telemetry/opentelemetry-collector-contrib/exporter/lokiexporter` (#34612)"],"metricstransformprocessor":["Add scaling exponential histogram support (#29803)"],"pkg/ottl":["Introduce `UserAgent` converter to parse UserAgent strings (#32434)"],"pkg/stanza":["üêû fix nil value conversion (#34672)"],"pkg/stanza/operator/input/windows":["Change type name from `EvtRpcLogin` to `EvtRPCLogin`. (#34656)"],"prometheusreceiver":["Ensure Target Allocator's confighttp is used in the receiver's service discovery (#33370)","Group scraped metrics into resources created from `job` and `instance` label pairs (#34237)"],"pull_request.state":["is now `change.state`"],"solacereceiver":["Updated the format for generated metrics. Included a `receiver_name` attribute that identifies the Solace receiver that generated the metrics (#34541)"],"splunkhecexporter":["The scope name has been updated from `otelcol/splunkhec` to `github.com/open-telemetry/opentelemetry-collector-contrib/exporter/splunkhecexporter` (#34710)"],"tailsamplingprocessor":["Update the `policy` value in metrics dimension value to be unique across multiple tail sampling components with the same policy name. (#34192)","üêû Fix the behavior for numeric tag filters with `inverse_match` set to `true`. (#34296)"],"transformprocessor":["Promote processor.transform.ConvertBetweenSumAndGaugeMetricContext feature flag from alpha to beta (#34567)"],"vcenterreceiver":["Several host performance metrics now return 1 data point per time series instead of 5. (#34708)"]},"v0.109.0":{"(general)":["vcenter.datacenter.cpu.limit ({MHz} -\u003e MHz)","vcenter.cluster.cpu.limit ({MHz} -\u003e MHz)","vcenter.cluster.cpu.effective ({MHz} -\u003e MHz)","vcenter.cluster.vsan.operations ({operations/sec} -\u003e {operations/s})","vcenter.cluster.vsan.congestions ({congestions/sec} -\u003e {congestions/s})","vcenter.host.network.packet.error.rate ({errors/sec} -\u003e {errors/s})","vcenter.host.network.packet.rate ({packets/sec} -\u003e {packets/s})","vcenter.host.network.packet.drop.rate ({packets/sec} -\u003e {packets/s})","vcenter.host.vsan.operations ({operations/sec} -\u003e {operations/s})","vcenter.host.vsan.congestions ({congestions/sec} -\u003e {congestions/s})","vcenter.resource_pool.cpu.usage ({MHz} -\u003e MHz)","vcenter.vm.network.throughput (By/sec -\u003e By/s)","vcenter.vm.network.packet.rate ({packets/sec} -\u003e {packets/s})","vcenter.vm.vsan.operations ({operations/sec} -\u003e {operations/s})","Implements client connection to Google Cloud Monitoring API.","Scrapes timeseries data based on configured metrics.","Converts the data into OpenTelemetry format for use in the pipeline.","Implements client connection to Google Cloud Monitoring API.","Scrapes timeseries data based on configured metrics.","Converts the data into OpenTelemetry format for use in the pipeline."],"apachereceiver":["üêû Fix panic on invalid endpoint configuration (#34992)"],"clickhouseexporter":["Upgrade trace SpanKind and StatusCode string values (#34799)"],"datadogconnector":["Optimize Datadog connector when there are many peer tags and `connector.datadogconnector.NativeIngest` is enabled (#34945)"],"datadogexporter":["Add support for setting a custom log source from resource attribute `datadog.log.source` (#35051)","Use correct hostname for logs when using Datadog Agent logs pipeline with a gateway deployment. (#35058)"],"datadogreceiver":["add support for sketch metrics in Datadog receiver (#18278)"],"deltatocumulative":["drop bad samples (#34979)"],"elasticsearchexporter":["Add exponential histogram support (#34813)","Add span event support to traces OTel mapping mode (#34831)","üêû Fix dynamic mapping for double values storing integers (#34680)","Stringify attribute array values in metrics OTel mode (#35004)"],"exceptionsconnector,servicegraphconnector,spanmetricsconnector":["Extract the `getDimensionValue` function as a common function. (#34627)"],"exporter/prometheusexporter":["Support for Prometheus Created Timestamps. (#32521)"],"fileconsumer":["üêû Fix bug where max_concurrent_files could not be set to 1. (#35080)"],"filestorage":["Add directory validation for compaction on-rebound (#35114)"],"geoipprocessor":["Avoid using internal empty attribute.Set pointer (#34882)"],"githubreceiver":["Promote GitHub receiver metrics to alpha status. (#34960)"],"gitproviderreceiver":["The Git Provider Receiver has been renamed to GitHub Receiver. (#34731)"],"googlecloudmonitoringreceiver":["Enhancing the Google Cloud monitoring receiver to establish a client connection, scrape GCP Cloud Metrics, and transform them into an OpenTelemetry compatible format for pipeline processing. (#33762)","Enhancing the Google Cloud monitoring receiver to establish a client connection, scrape GCP Cloud Metrics, and transform them into an OpenTelemetry compatible format for pipeline processing. (#33762)"],"hostmetricsreceiver":["üêû In filesystem scraper, do not prefix partitions when using the environment variable HOST_PROC_MOUNTINFO (#35043)"],"instanaexporter":["Marking instanaexporter module as deprecated (#34994)"],"kafkareceiver":["Adds tunable fetch sizes to Kafka Receiver (#22741, #34431)","Add support for encoding extensions in the Kafka receiver. (#33888)"],"mysqlreceiver":["mysql client raise error when the TABLE_ROWS column is NULL, convert NULL to int64 (#34195)"],"opampextension":["Adds the ability to configure the polling interval for the HTTP client. (#34749)"],"opampsupervisor":["Add new config parameter `agent.health_check_port` to allow configuring the port used by the agent healthcheck extension. (#34643)"],"otelarrowexporter":["Add gRPC timeout propagation. (#34733)"],"otlpjsonconnector":["Handle OTLPJSON unmarshal error (#34782)"],"ottl":["Remove tracing from OTTL due to performance concerns (#34910)"],"pkg/ottl":["Added Decode() converter function (#32493)","Add `Sort` function to sort array to ascending order or descending order (#34200)","Change the OTTL grammar to support expressing statements context via path names (#29017)","Add support for localized time parsing into the coreinternal/timeutils (#32977)"],"pkg/stanza":["Synchronize shutdown in stanza adapter (#31074)","An operator configured with silent errors shouldn't log errors while processing log entries. (#35008)"],"processor/interval":["Support for gauge and summary metrics. (#34803)"],"prometheusreceiver":["Move the TargetAllocator configuration struct to an internal directory (#33146)"],"redactionprocessor":["Add support for logs and metrics (#34479)"],"servicegraphconnector":["üêû Fix histogram metrics miss unit (#34511)","üêû Fix incorrectly reversed latency settings for the server and client (#34933)"],"signalfxexporter":["üêû Fix memory leak by re-organizing the exporter's functionality lifecycle (#32781)"],"solarwindsapmsettingsextension":["Added logic for refresh function (#27668)"],"spanmetricsconnector":["Improve consistency between metrics generated by spanmetricsconnector. Added traces.span.metrics as default namespace (#33227, #32818)"],"splunkhecexporter":["Drop empty log events (#34871)"],"splunkhecreceiver":["üêû Fix memory leak when the receiver is used for both metrics and logs at the same time (#34886)"],"sqlqueryreceiver":["Support populating log attributes from sql query (#24459)"],"sqlserverreceiver":["üêû Fix bug where metrics were being emitted with the wrong database name resource attribute (#35036)"],"testbed":["Add test case scenarios to handle large files to existing testbed. (#34288)"],"transformprocessor":["Support aggregating metrics based on their attribute values and substituting the values with a new value. (#16224)"],"vcenterreceiver":["Updated units on several metrics to be more in line with documented semantics. (#34946)"],"windowseventlogreceiver":["Avoid rendering the whole event to obtain the provider name (#34755)"]},"v0.110.0":{"(general)":["Disable the `filelog.container.removeOriginalTimeField` feature gate to get the old behavior."],"all":["TimeoutSettings/QueueSettings fields in various Config structs are no longer embedded (#35158)"],"azurelogs_translater":["Adds a new translater that converts Azure EventHub logs to OpenTelemetry logs used by the Azure Events Hub receiver. (#39704)"],"azuremonitorexporter":["üêû fix issue for property endpoint is ignored when using instrumentation_key (#33971)"],"cmd/opampsupervisor":["Ensure the Supervisor processes all fields in a ServerToAgent message. (#34349)"],"datadogconnector":["Map the new OTel semantic convention `deployment.environment.name` to `env` for OTLP traces in APM stats. (#35147)"],"datadogexporter":["Map the new OTel semantic convention `deployment.environment.name` to `env` for OTLP traces, metrics and logs. (#35147)","Adds exporter.datadogexporter.metricremappingdisabled featuregate which disables renaming OpenTelemetry metrics to match Datadog semantics. This feature gate is only for internal use. (#35025)","Upgrade logs in Datadog Exporter to beta (#35359)","The datadog exporter config has been deprecated in favor of the new `datadog/config` package. The new package is shared between the Datadog exporter and the Datadog Connector."],"datadogreceiver":["üêû Fix numeric span attributes (#35087)"],"deltatocumulative":["do not drop gauges and summaries (#35284)"],"deltatorateprocessor":["Remove unnecessary data copies. (#35165)"],"dorisexporter":["logs implementation (#33479)","traces implementation (#33479)"],"exporter/splunkhec":["üêû Fix incorrect claim that the exporter doesn't mutate data when batching is enabled. (#35306)"],"file_storage":["provide a new option to the user to create a directory on start (#34939)"],"groupbytraceprocessor":["Ensure processor_groupbytrace_incomplete_releases metric has a unit. (#35221)"],"headersetterextension":["adding default_value config (#34412)"],"hostmetricsreceiver":["Set the receiver.hostmetrics.normalizeProcessCPUUtilization feature gate to stable. (#34763)"],"kafkaexporter":["Add support for encoding extensions in the Kafka exporter. (#34384)","Add option to supply destination topic through context. (#34503, #34432)"],"kafkareceiver":["Add support for `otlp_json` encoding to Kafka receiver. The payload is deserialized into OpenTelemetry traces using JSON format. (#33627)"],"otelarrowexporter":["Allow separate arrow exporter per unique value of configured metadataKeys. (#34178)","Add BatcherConfig field following similar in OTLP exporter. (#34802)"],"otelarrowreceiver":["Add gRPC timeout propagation. (#34742)"],"pkg/datadog":["Create a new module for Datadog exporter configuration."],"pkg/ottl":["Improved JSON unmarshaling performance by 10-20% by switching dependencies. (#35130)","Added support for locale in the Time converter (#32978)"],"pkg/stanza":["Move `filelog.container.removeOriginalTimeField` feature gate to beta (#33389)","Do not get formatted message for Windows events without an event provider. (#35135)"],"processor/transform":["Add custom function to the transform processor to convert exponential histograms to explicit histograms. (#33827)"],"prometheusreceiver":["üêû Fix the retrieval of scrape configurations by also considering scrape config files (#34786)"],"redactionprocessor":["üêû Fix panic when using the redaction processor in a logs pipeline (#35331)"],"remotetapprocessor":["Origin header is no longer required for websocket connections (#34925)"],"resourcedetectionprocessor":["Move `processor.resourcedetection.hostCPUSteppingAsString` feature gate to stable. (#31136)","Remove `processor.resourcedetection.hostCPUModelAndFamilyAsString` feature gate. (#29025)"],"sapmexporter":["Prioritize token in context when accesstokenpassthrough is enabled (#35123)"],"signalfxexporter":["Ensure token is not sent through for event data (#35154)"],"splunkenterprise":["üêû Fix a flaky search related to iops metrics. (#35081)"],"tailsamplingprocessor":["üêû Fix the behavior for numeric tag filters with `inverse_match` set to `true`. (#34296)"],"transformprocessor":["Remove unnecessary data copy when transform sum to/from gauge (#35177)"]},"v0.111.0":{"(general)":["\"`access_token_passthrough` is deprecated.\"","\"Please enable include_metadata in the receiver and add the following config to the batch processor:\""],"clickhouseexporter":["Upgrading stability for traces to beta (#35186)","Updated the default trace table (#34245)"],"config":["Move component.UseLocalHostAsDefaultHost feature gate to stable. (#35569)"],"datadogreceiver":["Move receiver's metrics stability to alpha. (#18278)","Add container id from v0.5 request header (#35345)"],"elasticsearchexporter":["Drop cumulative temporality histogram and exponential histogram (#35442)","Implement receiver-based routing under *_dynamic_index config (#34246)","Implement elasticsearch.mapping.hints attribute handling for data points in OTel mapping mode (#35479)","Revert TSDB array dimension workaround for metrics OTel mode (#35291)"],"geoipprocessor":["No longer return an error when geo metadata is not found by a provider. (#35047)"],"googlecloudmonitoringreceiver":["Move receiver's stability to alpha. (#33762)"],"hostmetricsreceiver":["Add ability to mute all errors (mainly due to access rights) coming from process scraper of the hostmetricsreceiver (#20435)"],"instanaexporter":["Remove deprecated instanaexporter (#35367)"],"kubeletstats":["Introduce feature gate for deprecation of container.cpu.utilization, k8s.pod.cpu.utilization and k8s.node.cpu.utilization metrics (#35139)"],"metricsgenerationprocessor":["Generate metrics even when the second metric's value is 0 (#35533)","Allow metric calculations to be done on sum metrics (#35428)"],"opampsupervisor":["Add configurable logging for the supervisor. (#35466)","Skip executing the collector if no config is provided (#33680)","Make supervisor runnable as a Windows Service. (#34774)","Add config option for setting the timeout for the initial bootstrap information retrieval from the agent (#34996)","Only use TLS config when connecting to OpAMP server if using `wss` or `https` protocols. (#35283)","Pass config structure instead of file path when using NewSupervisor function (#34379)"],"otelarrowreceiver":["Add admission control in the otelarrow receiver's standard otlp data path."],"pkg/ottl":["Add InsertXML Converter (#35436)","Add GetXML Converter (#35462)","Add ToKeyValueString Converter (#35334)","Add RemoveXML Converter (#35301)"],"receiver/prometheusremotewrite":["Add a new receiver for Prometheus Remote Write."],"receiver/statsd":["Add support for aggregating on Host/IP."],"receivercreator":["Validate endpoint's configuration before starting receivers (#33145)"],"sapmreceiver":["`access_token_passthrough` is deprecated (#35330)"],"signalfxexporter":["Do not exclude the metric `container.memory.working_set` (#35475)"],"sqlqueryreceiver":["Fail if value for log column in result set is missing, collect errors (#35068)","üêû Fix reprocessing of logs when tracking_column type is timestamp (#35194)"],"sqlserverreceiver":["Add computer name resource attribute to relevant metrics (#35040)"],"sumconnector":["adds connector and summing logic along with tests (#32669)"],"webhookeventreceiver":["üêû Fixed a bug where request bodies containing newline characters caused the results to split into multiple log entries (#35028)"],"windowseventlogreceiver":["The 'raw' flag no longer suppresses rendering info. (#34720)","Add 'suppress_rendering_info' option. (#34720)","Move artificial \"remote_server\" field to 'attributes[\"server.address\"]'. (#34720)","While collecting from a remote windows host, the stanza operator will no longer log \"subscription handle is already open\" constantly during successful collection. (#35520)","If collecting from a remote host, the receiver will stop collecting if the host restarts. This change resubscribes when the host restarts. (#35175)"]},"v0.112.0":{"awsfirehosereceiver":["Add support for CloudWatch logs (#35077)","added OTLP v1 support to Firehose receiver (#34982)"],"awss3receiver":["Add support for monitoring the progress of ingesting data from an S3 bucket via OpAMP custom messages. (#30750)"],"azureblobreceiver":["adds support for using azidentity default auth, enabling the use of Azure Managed Identities, e.g. Workload Identities on AKS (#35636)"],"azuredataexplorerexporter":["üêû Fix compression type for Azure Data Explorer exporter by adding the compression type in ingestion properties. (#35353)"],"azureeventshubreceiver":["Updates the Azure Event Hub receiver to use the new Resource Logs translator. (#35357)"],"chronyreceiver":["Move chronyreceiver to beta (#35913)"],"cloudflarereceiver":["Respond 503 on non-permanent and 400 on permanent errors (#35642)"],"confmap/aesprovider":["Initial aes encryption provider. Allows configurations to decrypt secrets using AES encryption. (#35550)"],"datadogreceiver":["Use `Check` name from Service Check structure as metric name rather than hardcoded string `service_check` (#35718)","Changes response message for `/api/v1/series` and `/api/v2/series` 202 response to be JSON and on par with Datadog API spec (#35743)"],"deltatocumulative":["üêû fix meter panic on startup (#35685)"],"elasticsearchexporter":["Enable gzip compression by default (#35865)","Set body.* for log body in OTel mode (#35771)","Deprecate retry::max_requests in favor of retry::max_retries (#32344)","Add hint in error logs for TSDB version_conflict_engine_exception error (#35546)","Introduce an experimental bodymap mapping mode for logs (#35444)","Log and drop invalid metrics instead of returning error to avoid upstream retries (#35740)","üêû Preserve attribute names and metric names on prefix conflict in OTel mapping mode (#35651)","Make OTel mapping mode send to data streams only (#35839)","Sanitize datastream routing fields (#34285)"],"exporter/clickhouse":["Add the ability to override default table names for all metric types. (#34225)"],"filelogreceiver":["Supports `add_metadata_from_filepath` for Windows filepaths (#35558)","Suppress errors on EBADF when unlocking files. (#35706)"],"googlecloudexporter":["Google Cloud exporter is marked as mutating. (#35366)"],"googlemanagedprometheusexporter":["GMP exporter is marked as mutating. (#35366)"],"hostmetrics receiver":["üêû Fix duplicate filesystem metrics (#34635, #34512)"],"hostmetricsreceiver":["Use HOST_PROC_MOUNTINFO as part of configuration instead of environment variable (#35504)"],"k8sobserver":["Emit endpoint per Pod's container (#35491)"],"kafkareceiver":["üêû Fixes issue causing kafkareceiver to block during Shutdown(). (#30789)"],"logdedupprocessor":["Add a `condition` field to the Log DeDuplication Processor. (#35440)"],"metricsgenerationprocessor":["Introduce functionality to only do metric calculations on data points whose attributes match (#35425)"],"metricstransform":["The previously removed functionality of aggregating against an empty label set is restored. (#34430)"],"mongodbreceiver":["Add support for MongoDB direct connection (#35427)"],"mysqlreceiver":["Add replica metric support for versions of MySQL earlier than 8.0.22. (#35217)"],"ntpreceiver":["Introduce new receiver reporting the offset between the local machine and a NTP server. (#34375)"],"oidcauthextension":["üêû Fix a goroutine leak during shutdown. (#30438)"],"opampextension":["Support using auth extensions for authenticating with opamp servers (#35507)","Implement `ReportsHealth` capability in OpAMP extension (#35433)","Report OS description semantic convention (`os.description`) as a part of non-identifying agent description. (#35555)"],"opampsupervisor":["Allow collector logs to passthrough to supervisor output to facilitate running in a containerized environment. (#35473)"],"otelarrowexporter":["Adjust defaults from https://opentelemetry.io/blog/2024/otel-arrow-production/ experiments. (#35477)"],"pkg/ottl":["Add ConvertAttributesToElementsXML Converter (#35328)","Parsing invalid statements and conditions now prints all errors instead of just the first one found. (#35728)","Add ParseSimplifiedXML Converter (#35421)","Add ConvertTextToElements Converter (#35364)","Allow indexing string slice type (#29441)"],"pkg/status":["Refactors the extension/healthcheckv2extension/internal/status into pkg/status (#34692)"],"pkg/translator/jaeger":["Remove error from method signature as it always returns nil (#35560)"],"pkg/translator/prometheusremotewrite":["üêû Fix metric comparison func in prom translation layer (#35741)","add FromMetricsV2 (#33661)"],"processor/metricsgeneration":["üêû Remove \"experimental_\" prefix from metrics generator processor name. (#35426)"],"rabbitmqexporter":["Allow to configure the name of the AMQP connection in the rabbitmqexporter (#34681)"],"receiver/prometheusremotewrite":["Add HTTP Server to handler Prometheus Remote Write requests (#35535)","Add HTTP Server to handler Prometheus Remote Write requests (#35535)"],"receiver/windowseventlog":["Errors returned when passing data downstream will now be propagated correctly. (#35461)"],"routingconnector":["Allow routing based on OTTL Conditions (#35731)"],"sapmreceiver":["Deprecate SAPM receiver (#32125)","Respond 503 on non-permanent and 400 on permanent errors (#35300)"],"stanza/input/windows":["Close remote session while resubscribing (#35577)"],"systemdreceiver":["Introduce the scaffolding of a new component, systemdreceiver (#33532)"],"telemetrygen":["ensure validate is called (#35745)","Enable the `--otlp-insecure-skip-verify` flag (#35735)"],"tlscheckreceiver":["Add TLS Check Receiver component to monitor x.509 certificate expiry (#35423)"]},"v0.113.0":{"(general)":["This is to preserve processor order. `ProcessorNameAndConfigBody` is the newly created struct."],"awsfirehosereceiver":["make otlp_v1 a valid record type (#35750, #36125)"],"awss3receiver":["Mark the AWS S3 receiver as Alpha. (#30750)"],"azuredataexplorerexporter":["Add new configuration option `use_default_auth` to enable default authentication for Azure Data Explorer. This option allows users to leverage workload identity for authentication. (#33667)"],"connector/routing":["Add ability to route log records individually using OTTL log record context. (#19738)","üêû Fix detection of duplicate conditions in routing table. (#35962)"],"datadogreceiver":["Follow receiver contract based on type of error (#5909)","Return a json reponse instead of \"OK\" when a trace is received with a newer protocol version. (#35705)","Changes response message for `/api/v1/check_run` 202 response to be JSON and on par with Datadog API spec (#36027)"],"dbstorage":["Add postgresql support (#35692)"],"dorisexporter":["metrics implementation (#33479)"],"exporter/signalfx":["Enabling retrying for dimension properties update without tags in case of 400 response error. (#36044)"],"extensions/observer/cfgardenobserver":["Implemented the observer, the second PR in the 3 PR process for new components (#33618)"],"hostmetrics":["Adjust scraper creation to make it so the scraper name is reported with hostmetrics scraper errors. (#35814)"],"hostmetricsreceiver":["Add the system.uptime metric in the hostmetrics receiver (#31627)","Do not set the default value of HOST_PROC_MOUNTINFO to respect root_path (#35990)"],"journaldreceiver":["adds ability to parse journald's MESSAGE field as a string if desired (#36005)","allows querying a journald namespace (#36031)","Restart journalctl if it exits unexpectedly (#35635)"],"k8sobserver":["Enable observation of ingress objects if the `ObserveIngresses` config option is set to true (#35324)"],"ntpreceiver":["Move NTP receiver to alpha (#36152)"],"opampsupervisor":["Makes the Supervisor's OpAmp server port configurable with 'agent::opamp_server_port'. (#36001)","Supervisor waits for configurable healthchecks to report remote config status. (#21079)"],"opensearchexporter":["The OpenSearch exporter is now marked as unmaintained and will be removed in 6 months. (#35781)"],"otelarrowreceiver":["Enable unlimited admission control when request_limit_mib is set to 0. (#36074)","Simplify receiver admission control logic (#36074)","üö®‚ö†Ô∏è Avoid breaking telemetry when admission control fails in OTLP handlers. (#36074)"],"otlpjsonfilereceiver":["Add support for profiles signal (#35977)"],"pkg/ottl":["Promote `processor.transform.ConvertBetweenSumAndGaugeMetricContext` feature gate to Stable (#36216)","Add SliceToMap function (#35256)"],"pkg/stanza":["üêû Fixed bug causing Operators with DropOnErrorQuiet to send log entries to the next operator. (#35010)","Handle error of callback function of `ParserOperator.ProcessWithCallback` (#35769)"],"pkg/stanza/operator":["Retain Operator should propagate the severity field (#35832)"],"pkg/translator/prometheusremotewrite":["`FromMetricsV2` now transforms attributes into labels. (#33661)"],"prometheusexporter":["üêû Fixes an issue where the prometheus exporter would not shut down the server when the collector was stopped. (#35464)"],"receiver/filelog":["üêû fix record counting with header (#35869)"],"receiver/prometheusremotewrite":["Implement body unmarshaling for Prometheus Remote Write requests (#35624)","Implement Content-Type negotiation for Prometheus Remote Write requests (#35565)","Implement body unmarshaling for Prometheus Remote Write requests (#35624)"],"receiver/windowseventlog":["üêû Fix panic when rendering long event messages. (#36179)"],"routingconnector":["Add ability to route by request metadata. (#19738)"],"sapmreceiver":["Remove the deprecated access_token_passthrough from SAPM receiver. (#35972)"],"signalfxexporter":["Add more default metrics related to Kubernetes cronjobs, jobs, statefulset, and hpa (#36026)"],"simpleprometheusreceiver":["Support to set `job_name` in config (#31502)"],"solacereceiver":["Add support to the Solace Receiver to convert the new `Move to Dead Message Queue` and new `Delete` spans generated by Solace Event Broker to OTLP. (#36071)","The Solace receiver may unexpectedly terminate on reporting traces when used with a memory limiter processor and under high load (#35958)"],"splunkenterprisereceiver":["Add telemetry around the Splunk Enterprise kv-store. (#35445)","Add new metrics for Splunk Enterprise dispatch artifacts (#35950)"],"splunkhecreceiver":["Avoid a memory leak by changing how we record obsreports for logs and metrics. (#35294)"],"testbed":["`scenarios.createConfigYaml()` and `utils.CreateConfigYaml()` functions now take processor configs as a struct slice argument instead of `map[string]string`. (#33003)"],"webhookeventreceiver":["Pass the consumer error to EndLogsOp (#35844)"]},"v0.114.0":{"(general)":["exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/"],"cmd/githubgen":["Adds a flag to skip checking GitHub organization membership for CODEOWNERS (#36263)"],"connector/otlpjson":["Throw error on invalid otlp payload. (#35738, #35739)"],"container":["Set non root group permissions for container image (#35179)"],"datadogexporter":["üêû Stop prefixing `http_server_duration`, `http_server_request_size` and `http_server_response_size` with `otelcol` (#36265)"],"datadogreceiver":["Add json handling for the `api/v2/series` endpoint in the datadogreceiver (#36079)"],"elasticsearchexporter":["Translate `k8s.*.name` resource attributes in ECS mode (#36233)"],"encodingextension":["Add support for profiles signal to encodingextension (#36008)"],"exporter/loadbalancing":["üêû Shutdown exporters during collector shutdown. This fixes a memory leak. (#36024)"],"exporter/prometheusremotewrite":["Deprecate configuration option `export_created metric` (#35003)"],"googlemanagedprometheus":["Add `CumulativeNormalization` config option to allow users to configure to specify whether to report normalized or un-normalized points. Defaults to normalized. (#36357)"],"k8sattributesprocessor":["Add support for profiles signal (#35983)"],"k8sclusterreceiver":["Add support for limiting observed resources to a specific namespace. (#9401)"],"opampextension":["Add content type to opamp extension when reporting EffectiveConfig (#36327)"],"otelarrowreceiver":["New admission control metrics are consistent across Arrow and OTLP data paths. (#36334)","Admission control improvements (LIFO); admission.waiter_limit is deprecated, replaced with admission.waiting_limit_mib. (#36074)","Add a new LIFO-based bounded queue. (#36074)"],"pkg/datadog":["Expose an API `TranslatorFromConfig` that creates a new metrics translator (#36300)"],"pkg/ottl":["Respect the `depth` option when flattening slices using `flatten` (#36161)"],"pkg/stanza":["Ensure that time parsing happens before entry is sent to downstream operators (#36213)","Synchronous handling of entries passed from the log emitter to the receiver adapter (#35453)","Changed signature of `emit.Callback` function in `pkg/stanza/fileconsumer/emit` package by introducing `emit.Token` struct that encapsulates the token's body and attributes. (#36260)"],"processor/k8sattributes":["üêû Block when starting until the metadata have been synced, to fix that some data couldn't be associated with metadata when the agent was just started. (#32556)"],"processor/spanprocessor":["Add a new configuration option to keep the original span name when extracting attributes from the span name. (#36120)"],"prometheusexporter":["üêû Fixes a race condition between the exporter start and shutdown functions. (#36139)","reject metrics whose types have changed, use pre-existing descriptions when help strings change (#28617)"],"prometheusreceiver":["üêû Fix prometheus receiver to support static scrape config with Target Allocator (#36062)"],"prometheusremotewriteexporter":["reduce allocation when serializing protobuf (#35185)"],"resourcedetectionprocessor":["Introduce support for Profiles signal type. (#35980)"],"routingconnector":["Add ability to route by metric context (#36236)","Add ability to route by span context (#36276)"],"splunkenterprisereceiver":["Add new metrics for Splunk Enterprise dispatch artifacts caches (#36181)"]},"v0.115.0":{"(general)":["exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/"],"awsemfexporter":["Add support for 1 second metric resolution in CloudWatch Embedded Metrics Format based on metric attributes (#29506)","Improvement unit conversion during EMF log translation (#35937)"],"awsfirehosereceiver":["Follow receiver contract based on type of error (#5909)","üêû fix timestamp when ingesting logs from CloudWatch through firehose (#36122)"],"azuremonitorexporter":["üêû Fixes an issue where the Azure Monitor exporter was not sending data to App Insights due to the Telemetry Channel not being flushed. (#35037)"],"clickhouseexporter":["üêû Fix incorrect Resource Attribute `service.name` translation to ClickHouse ServiceName field for Logs Records (#36349)"],"cmd/opampsupervisor":["Update default logger output paths to stderr (#36072)","Support environment variable expansion in the OpAMP supervisor config. (#36269)","Do not log err if the last received doesn't exist (#36013)"],"datadogexporter":["Add a configurable `reporter_period` parameter to the Datadog exporter‚Äôs host metadata configuration to allow users to specify the frequency at which host metadata is sent to Datadog. (#36450)"],"elasticsearchexporter":["Respect `flush::bytes` in sync bulk indexer, `flush::bytes` measures uncompressed size, change default `batcher::max_size_items` to `0` (#36163)"],"exporter/prometheusremotewrite":["Change `exporter.prometheusremotewriteexporter.deprecateCreatedMetric` feature gate from Alpha to Beta version. (#35003)"],"exporter/pulsarexporter":["Change configuration option `map_connections_per_broker`, rename to `max_connections_per_broker`. (#36579)"],"extension/cgroupruntime":["Initial implementation for cgroupruntime extension. (#30289)"],"failoverconnector":["üêû Resolves a bug that prevents proper recovery when disabling max retries (#36587)"],"googlecloudpubsubexporter":["üêû Fix a goroutine leak during shutdown. (#30438)"],"huaweicloudcesreceiver":["Introduce new receiver fetching data from huawei Cloud Eye Service. (#34953)"],"internal":["Remove stable gate `component.UseLocalHostAsDefaultHost` (#36589)"],"k8sattributesprocessor":["Move k8sattr.fieldExtractConfigRegex.disallow feature gate to Beta. (#25128)"],"loadbalancingexporter":["Adding sending_queue, retry_on_failure and timeout settings to loadbalancing exporter configuration (#35378, #16826)","The k8sresolver in loadbalancingexporter was triggering exporter churn in the way the change event was handled. (#35658)"],"netflowreceiver":["Introduce the netflow receiver (#32732)"],"opampsupervisor":["Enable strict unmarshalling of the OpAMP Supervisor config file. An error will now be returned if an invalid config key is set. (#35838)"],"opencensusreceiver":["Do not report error message when OpenCensus receiver is shutdown cleanly. (#36622)"],"pkg/datadog":["Refactor the API that provides metrics translator (#36474)"],"pkg/ottl":["üêû Move debug log to `Statement.Execute` so that components using it instead of `StatementSequence` also get debug logs. (#36456)","Allow indexing []int64, []float64, []bool, and []byte slices (#29441)"],"pkg/stanza":["Introduce active file grouping mechanism. (#23787)"],"postgresqlreceiver":["Minimal supported PostgreSQL version updated from 9.6 to 13.0 (#30923)","Added new postgresql metrics to acheive parity with Telegraf (#36528)"],"processor/k8sattribute":["üêû fixes parsing of k8s image names to support images with tags and digests. (#36131)"],"receiver/azureeventhub":["üêû When using a storage extension, the component will call Close on the client during component shutdown. This fixes a bug that resulted in a file potentially remaining locked after component shutdown. (#36238)"],"receivercreator":["Add support for starting receivers/scrapers based on provided annotations' hints for metrics' collection (#34427)"],"routingconnector":["Add abiilty to route by 'datapoint' context (#36523)"],"signalfxreceiver":["Follow receiver contract based on type of error (#5909)"],"signaltometricsconnector":["New component for generating metrics from raw signals using user defined OTTL expressions. (#35930)"],"sumologicexporter":["adding new products for auto discovery (#35622)"],"tailsamplingprocessor":["Adds decision cache for non-sampled trace IDs (#31583)"],"vcenterreceiver":["The existing code did not honor TLS settings beyond 'insecure'. All TLS client config should now be honored. (#36482)"]},"v0.116.0":{"(general)":["exporter/kineticaexporter/","exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/","mongodbatlas.disk.partition.queue.depth","mongodbatlas.disk.partition.throughput","mongodbatlas.process.cache.ratio"],"awss3receiver":["Add support RFC3339 format for starttime and endtime (#36787)"],"awsxrayexporter":["Generate url section in xray segment when `net.peer.name` is available (#35375)"],"azureeventhubreceiver":["support providing one or more time formats for timestamp parsing (#36650)"],"azuremonitorexporter":["üêû fix bug to remove default config of endpoint which causes failing to parse endpoint correctly. (#36704)"],"clickhouseexporter":["Exporter now sorts attribute maps' keys during INSERT, yielding better compression and predictable aggregates (#33634)"],"connector/datadog, exporter/datadog, pkg/datadog":["throw error if datadog API key contains invalid characters (#36509)"],"connector/routing":["Deprecate `match_once` parameter. (#29882)"],"datadogconnector":["Flip configs `traces::compute_stats_by_span_kind`, `traces::peer_tags_aggregation` and `traces::peer_service_aggregation` to true by default (#35969)"],"datadogexporter":["Flip configs `traces::compute_stats_by_span_kind`, `traces::peer_tags_aggregation` and `traces::peer_service_aggregation` to true by default (#35969)","read response body on pushSketches to allow connection re-use (#36779)"],"dorisexporter":["Mark the Doris exporter as Alpha. (#33479)"],"elasticsearchexporter":["Map *.geo.location.{lat,lon} as geo_point field in OTel mode (#36565)"],"exporter/prometheusremotewrite":["üêû Fix exemplar handling when the exemplar is an integer value. (#36657)"],"fileexporter":["Add support for profiles signal. (#35978)"],"githubreceiver":["Update metric names to match VCS Metric Semantic Conventions and scraper key name. (#36714)","Adds webhook skeleton to GitHub receiver to receive events from GitHub for tracing. (#27460)"],"googlecloudmonitoringreceiver":["Add metric-specific labels to googlecloudmonitoringreceiver component (#35711)","üêû Fix \"no validation found\" error if workload is running on Google Cloud Platform (#36607)"],"jaegerreceiver":["Remove ineffectual warning from jaegerreceiver (#35894)"],"jsonlogencodingextension":["Change how logs are marshaled. Instead of marshaling just the first log, marshal all logs into a JSON array. (#34064)"],"k8sattributesprocessor":["Override extracted k8s attributes if original value has been empty (#36373)"],"k8sattributesreceiver":["Log any errors encountered during kube client initialisation (#35879)"],"kafkaexporter, kafkareceiver":["Add a new mechanism \"AWS_MSK_IAM_OAUTHBEARER\" for kafka exporter and kafka receiver. This mechanism use the AWS MSK IAM SASL Signer for Go https://github.com/aws/aws-msk-iam-sasl-signer-go. (#19747)"],"kineticaexporter":["The kineticaexporter is now Unmaintained as it has no active code owners from the vendor (#36808)"],"libhoneyreceiver":["Introduce the scaffolding of a new component, libhoneyreceiver (#36693)"],"loadbalancingexporter":["Adds a an optional configuration to the k8s resolver which returns hostnames instead of IPs for headless services pointing at statefulsets (#18412)"],"mongodbatlasreceiver":["Adds additional metrics to the MongoDB Atlas receiver (#36525)"],"opampextension":["Use status subscription for fine granular component health reporting (#35856)","üêû Fix blocking agent shutdown due to unclosed channel (#36764)"],"opampsupervisor":["avoid nil pointer access when reporting the last received remote config (#36850)"],"parseutils":["Handle escaped quotes when parsing pairs using SplitString. (#36176)"],"pkg/ottl":["GetXML Converter now supports selecting text, CDATA, and attribute (value) content. (#36821)","Add the `ottl.ParserCollection` utility to help handling parsers for multiple OTTL contexts (#29017)"],"pkg/pdatatest":["Add support for Profiles signal comparison. (#36232)"],"postgresqlreceiver":["Update the postgresqlreceiver to handle new table schema for the bgwriter metrics in pg17+ (#36784)"],"processor/tailsampling":["üö®‚ö†Ô∏è Reverts #33671, allowing for composite policies to specify inverted clauses in conjunction with other policies. This is a change bringing the previous state into place, breaking users who rely on what was introduced as part of #33671. (#34085)"],"purefareceiver":["Implements support for scraping Pure Storage FlashArray with Purity version 6.6.11+ (#36251)"],"receiver/prometheusreceiver":["Metric adjuster no longer assumes that all metrics from a scrape come from the same resource (#36477)"],"receiver/prometheusremotewrite":["Parse labels from Prometheus Remote Write requests into Resource and Metric Attributes. (#35656)"],"routingprocessor":["Deprecated in favor of the routing connector. (#36616)","Deprecated in favor of the routing connector. (#36616)"],"s3exporter":["Upgrading to adopt aws sdk v2 (#36699)"],"signaltometrics":["Add config validation and custom OTTL functions (#35930)"],"splunkhecexporter":["Add `otel_attrs_to_hec_metadata/*` config fields to replace `hec_metadata_to_otel_attrs/*` fields. (#35092)"],"sumologicextension":["Skip likely zombie processes on Windows. (#36481)"],"tesbed":["add options for retry/storage for filelog sender (#36781)"],"testbed":["Add batcher performance tests (#36206)"]},"v0.117.0":{"(general)":["exporter/kineticaexporter/","exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/jmxreceiver/"],"awsemfexporter":["Split EMF log to multiple log splits when buckets larger than 100. (#36771)"],"awsxrayexporter":["merge in latest semantic conventions for awsxrayexporter. (#36894)"],"cloudfoundryreceiver":["Introduce a feature gate enable copying envelope tags to the metrics as resource attributes instead of datapoint attributes. (#34824)"],"cmd/telemetrygen":["Introduce support for generating histograms in telemetrygen (#36322)"],"exporter/prometheusremotewrite":["In preparation to re-introducing multiple workers, we're removing a data-race when batching timeseries. (#36601)"],"internal/docker":["üêû Fix image matching regular expression to properly match SHA256 strings. (#36239)"],"k8s.node.condition_*":["The condition of a node. e.g. `k8s.node.condition_ready`. The value can be `true`, `false`, `unknown`."],"k8s.pod.phase":["The phase of a Pod indicates where the Pod is in its lifecycle. E.g. 'Pending', 'Running'"],"k8s.pod.status_reason":["A brief message indicating details about why the pod is in this state. E.g. 'Evicted'"],"k8sclusterreceiver":["Add additional attributes to node and pod entities (#35879)"],"k8sobjectsreceiver":["ensure the `k8s.namespace.name` attribute is set for objects retrieved using the `watch` mode (#36352)"],"libhoneyreceiver":["Mark the libhoney receiver exporter as Alpha. (#36693)","Implement log signal for libhoney receiver (#36693)","Implement trace signal for libhoney receiver (#36693)"],"logzioexporter":["Remove jaeger dbmodel dependency. (#36972)"],"mongodbatlasreceiver":["Update the mongoDB Atlas receiver to use the Default HTTP Transport that supports default proxy configuration (#36412)"],"mysqlreceiver":["Avoid recording a value for the MysqlBufferPoolPages metric when out-of-bounds. (#35495)","Divide large values directly in SQL queries to avoid int overflows (#35495)"],"opampsupervisor":["Report an 'Applied' remote config status when an empty config is received. (#36682)"],"opensearchexporter":["Add Sending Queue to enable persistent queue in case of upstream failure (#33919)"],"ottl":["Add a new ottl trim function that trims leading and trailing characters from a string (default- whitespace). (#34100)"],"pkg/ottl":["removed the ability to reference entire parent objects. (#36872)","üêû fix handling of nested maps within slices in the `flatten` function (#36162)","Change OTTL contexts to properly handle `ottl.Path` with context (#29017)"],"receiver/azureeventhub":["Ensure that observed timestamp is set when unmarshaling logs. (#36861)"],"receivercreator":["Add support for starting logs' collection based on provided k8s annotations' hints (#34427)"],"redisstorageextension":["Move redis storage extension to alpha (#36778)"],"routingconnector":["Change default value of `match_once` parameter to `true`. (#29882)"],"sapmexporter":["Deprecate SAPM exporter (#36028)"],"sigv4authextension":["Add support for endpoint based names for logs and traces (#36828)"],"sqlqueryreceiver":["Add instrumentation scope to SQL query receiver metrics and logs (#31028)"],"statsdreceiver":["Add UDS support to statsdreceiver (#21385)"],"tailsamplingprocessor":["Support hot sampling policy loading (#37014)"]},"v0.118.0":{"awscloudwatchmetricsreceiver":["move the component to unmaintained status (#36599)"],"awss3exporter":["Implement sending queue for S3 exporter (#37274, #36264)"],"cgroupruntimeextension":["Implement ECS metadata retrieval for cgroupruntime extension. (#36814)"],"clickhouseexporter":["üêû Fix Nil Pointer Exception on Metrics/Traces export without service.name Resource Attribute (#37030)"],"connector/routing":["Invalid configuration when using `context` other than `resource` #37410"],"datadogexporter":["Add a feature gate datadog.EnableReceiveResourceSpansV2. Enabling this gate uses a refactored implementation of OTLP-\u003eDatadog Span translation in datadogexporter and datadogconnector which improves performance by 10%, and deprecates the following functionality: - No longer checks for resource-related values (container, env, hostname) in span attributes. This previous behavior did not follow the OTel spec. (#37171)","Add a feature gate datadog.EnableOperationAndResourceNameV2. Enabling this gate modifies the logic for computing operation and resource names from OTLP spans to produce shorter, more readable names and improve alignment with OpenTelemetry specifications. (#36419)"],"deltatocumulativeprocessor":["cap the number of exponential histogram buckets to 160 (#33277)"],"dorisexporter":["send json lines to doris rather than json array (#36896)"],"elasticsearchexporter":["Remove Index config, which was deprecated and replace with LogsIndex since v0.60.0 (#37094)","Remove `dedup` config setting that was deprecated in v0.104.0 (#33773)","Handle `EventName` for log records in OTel mode (#37011)","More efficient JSON encoding for OTel mode (#37032)","Mark OTel mapping mode as stable (#37240)"],"exporter/bmchelix":["Add a new component for exporting metrics to BMC Helix (#36773)"],"extension/jaegerremotesampling":["remove dependency on jaeger internal code (#36976)"],"extension/skywalkingencodingextension":["Support skywalking_encoding extension for skywalking traces. (#28693)"],"githubgen":["Deprecate githubgen in this repository (#37294)"],"gitlabreceiver":["Adds webhook skeleton to GitLab receiver to receive events from GitLab for tracing. (#35207)"],"googlecloudmonitoringreceiver":["set the minimum collection interval as 60s (#36898)"],"googlecloudpubsubreceiver":["üêû Fix a goroutine leak during shutdown. (#30438)"],"huaweicloudces":["Move huaweicloudces receiver to alpha (#34953)"],"intervalprocessor":["Interval Processor is now Alpha stability and is added to the `contrib` and `k8s` distributions (#36514)"],"k8sattributesprocessor":["For pods with only one container, the `container.id` and `k8s.container.name` are not longer required in the resource attributes to add the container attributes (#34189)","Ensure the pods gathered by the processor contain the information about their related replica sets and deployments after the initial sync (#37056)"],"logdedupprocessor":["Add 'include_fields' option to deduplicate log records via body or attribute fields. (#36965)","üêû Fix config validation not working when creating a processor. (#37278)"],"mysqlreceiver":["Add delete_multi, update_multi metrics to mysql.commands for mysqlreceiver (#37301)"],"pkg/ottl":["Support dynamic indexing of maps and slices. (#36644)","Add the `Nanosecond` converter to return the nanosecond component from the specified time.Time (#37042)","Add the `Second` converter to return the second component from the specified time.Time (#37042)","Enhanced error messages for invalid cache access and introduced options to configure their values within the OTTL contexts. (#29017)","Add the `FormatTime` function to convert `time.Time` values to human-readable strings (#36870)","üêû Fix bug with `replace_all_matches` and `replace_all_patterns` that caused non-string values to be changed to empty string when matching against empty string. (#37071)","Enhanced error messages for invalid cache access and introduced options to configure their values within the OTTL contexts. (#29017)","Add value expression parser that enables components using ottl to retrieve values from the output of an expression (#35621)"],"pkg/stanza":["Move `filelog.container.removeOriginalTimeField` feature gate to stable (#33389)"],"prometheusremotewriteexporter":["Only append label values if they are different for colliding OTel attributes (#35896)","Re allows the configuration of multiple workers (#36134)"],"receiver/prometheusremotewrite":["Check if Scope is already present comparing with the received labels (#36927)"],"resourcedetectionprocessor":["This enhancement detects AWS EKS cloud account ID (#37179)","Introduce kubeadm detector to retrieve local cluster name. (#35116)"],"routingconnector":["Disconnect `match_once` parameter from functionality. (#29882)","Change `match_once` parameter from `bool` to `*bool`. (#29882)"],"signalfxexporter":["Prioritize retrieving token from context when accesstokenpassthrough is enabled (#37102)","Honor access_token_passthrough config option for sending events (#37102)"],"signaltometrics":["Adds resource attributes based on telemetry settings to the connector to ensure single writer (#35930)"],"signaltometricsconnector":["Add core logic for the signal to metrics connector to make it functional. (#35930)"],"tailsamplingprocessor":["üêû Added debug logging to the sampling decision caches. (#37038)","Improved not sampled decision cache usage and deleting traces from the internal map when they are in a decision cache. (#37189)","üêû Fixed sampling policy evaluation debug logging batch metrics (e.g. sampled). (#37040)","Late span age histogram should include sampled traces. (#37180)"],"telemetrygen":["Remove go-grpc-middleware dependency (#37103)"],"vcenterreceiver":["Adds vCenter memory capacity for hosts and memory granted metric for VMs. (#37257)"]},"v0.119.0":{"(general)":["exporter/kineticaexporter/","exporter/opensearchexporter/","extension/observer/ecstaskobserver/","receiver/awscloudwatchmetricsreceiver/","receiver/rabbitmqreceiver/","\"`access_token_passthrough` is deprecated.\"","\"Please enable include_metadata in the receiver and add the following config to the batch processor:\""],"awss3exporter":["Add support for S3 Storgeclass (#35173)"],"connector/routing":["üêû Fix config validation with context other than `resource` (#37410)"],"cumulativetodeltaprocessor":["Add metric type filter for cumulativetodelta processor (#33673)"],"datadogconnector":["Support obfuscating sql queries in APM stats (#37457)"],"datadogexporter":["Remove stable feature gate `exporter.datadog.hostname.preview` (#37561)"],"deltatocumulativeprocessor":["In order to cap number of histogram buckets take the min of desired scale across negative and positive buckets instead of the max (#37416)"],"elasticsearchexporter":["Consistently store the structured body of logs and events in `body.structured` in `otel` mode (#37387)","Group data points into a single document even if they are from different but equal resources (#37509)","Add config `logs_dynamic_id` to dynamically set the document ID of log records using log record attribute `elasticsearch.document_id` (#36882)","Declare MutatesData: false (#37234)"],"envoyalsreceiver":["Add a new receiver for the Envoy ALS (Access Log Service). (#36464)"],"exporter/clickhouse":["Adding missing examples of DDL created by the clickhouse exporter (#35903)"],"exporter/prometheusremotewrite":["Change `exporter.prometheusremotewriteexporter.deprecateCreatedMetric` feature gate from Beta to Stable version. (#35003)"],"exporter/sematext":["Add a new component for exporting metrics and logs to Sematext (#36465)"],"filelogreceiver":["üêû Fix issue where flushed tokens could be truncated. (#35042)"],"githubgen":["Switch over all usages of githubgen to the new tool location, since the old tool was deprecated (#37412, #37294)"],"googlecloudpubsubreceiver":["Added support for encoding extensions. (#37109)"],"hostmetrics/process":["Added support for tracking process.uptime (#36667)"],"httpcheckreceiver":["Added support for specifying multiple endpoints in the `httpcheckreceiver` using the `endpoints` field. Users can now monitor multiple URLs with a single configuration block, improving flexibility and reducing redundancy. (#37121)"],"jaegerreceiver":["Log the endpoints of different servers started by jaegerreceiver (#36961)"],"k8sattributesprocessor":["Wait for the other informers to complete their initial sync before starting the pod informers (#37056)"],"metricsgenerationprocessor":["Generated metric name may not match metric being scaled (#37474)"],"metricstarttimeprocessor":["Add the initial skeleton for the metricsstarttimeprocessor (#37186)","Add the initial skeleton for the metricsstarttimeprocessor (#37186)"],"netflowreceiver":["Adds the implementation of the netflow receiver (#32732)"],"opampsupervisor":["add support for headers configuration for reporting own telemetry (#37353)","report own metrics via OTLP instead of prometheus receiver (#37346)"],"otlpjsonfilereceiver":["Include file attributes and append it to the log record (#36641)"],"pkg/stanza":["üêû Fix default source identifier in recombine operator (#37210)"],"processor/transformprocessor":["Add support for flat configuration style. (#29017)","Replace parser collection implementations with `ottl.ParserCollection` and add initial support for expressing statement's context via path names. (#29017)"],"prometheusreceiver":["Add `receiver.prometheusreceiver.UseCollectorStartTimeFallback` featuregate for the start time metric adjuster to use the collector start time as an approximation of process start time as a fallback. (#36364)"],"receiver/cloudfoundry":["Promote `cloudfoundry.resourceAttributes.allow` feature gate to beta (#34824)"],"resourcedetectionprocessor":["Expose additional configuration parameters for the AWS metadata client used by the EC2 detector (#35936)","Add `fail_on_missing_metadata` option on EC2 detector (#35936)","The `gcp` resource detector will now detect resource attributes identifying a GCE instance's managed instance group. (#36142)"],"routingconnector":["The connector splits the original payload so that it may be emitted in parts to each route. (#37390)"],"signalfxexporter":["Warn on dropping metric data points when they have more than allowed dimension count (#37484)"],"signalfxreceiver":["`access_token_passthrough` is deprecated (#37575)"],"signaltometricsconnector":["Move signal to metrics connector to alpha stability (#35930)"],"solacereceiver":["Update validation step to allow only one auth method. (#36386)"],"tailsamplingprocessor":["Reworked the consume traces, sampling decision, and policy loading paths to improve performance and readability (#37560)","üêû Fixed sampling decision metrics `otelcol_processor_tail_sampling_sampling_trace_dropped_too_early` and `otelcol_processor_tail_sampling_sampling_policy_evaluation_error_total`, these were sometimes overcounted. (#37212)"]},"v0.120.0":{"(general)":["Adds the following attributes to k8s.namespace entity:","k8s.namespace.phase: The phase of a namespace indicates where the namespace is in its lifecycle. E.g. 'active', 'terminating'","k8s.namespace.creation_timestamp: The time when the namespace object was created.","Adds the following attributes to container entity:","container.creation_timestamp: The time when the container was started. Only available if container is either in 'running' or 'terminated' state.","Prevents authentication failures by refreshing the token early.","The default expiry buffer is set to 5 minutes, and users can adjust it as needed."],"activedirectorydsreceiver":["üêû Fixed typo in the attribute `distingushed_names`, renaming it to `distinguished_names`. (#37606)"],"all":["Added support for go1.24, bumped minimum version to 1.23 (#37875)"],"awscontainerinsightreceiver":["Add support for HOST_PROC environment variable in AWS Container Insight Receiver. (#35862)","üêû Fix race condition in shutdown of AWS Container Insight receiver (#37695)"],"awsfirehosereceiver":["Refactor unmarshallers to implement pdata unmarshaler interfaces (#37361)"],"azureeventhubreceiver":["üêû Fix bug where persisted offset would be ignored after restart (#37157)"],"bearertokenauthextension":["üêû Load token lazily for gRPC AUTH to fix token refresh issue (#36749)"],"bmchelixexporter":["Mark the BMC Helix exporter as Alpha. (#36773)","metrics implementation (#36773)"],"datadogexporter":["Add a gauge metric datadog.otel.gateway which is 1 if the collector is used as a gateway or 0 otherwise. (#37499)"],"datadogreceiver":["Implement support for span links (#37449)"],"dbstorageextension":["Add DB Transactions to dbstorage.Batch() method as it is expected by Storage API (#37805)"],"elasticsearchexporter":["Use go-elasticsearch/v8, require minimum version of ES 7.17.x or 8.x (#32454)","Remove dedot config. ECS mode now always dedots, no others dedot at all. (#33772)","Syncs support for compression level on elasticsearch exporter with confighttp. The default compression level is 1 if not set. (#37260)","Add profiles support to elasticsearch exporter (#37567)","üêû Fix data loss caused by incorrect metric grouping in ECS and OTel mode (#37898)"],"exporter/logzioexporter":["Remove dependency on Jaeger pkg/cache (#37833)"],"extension/oauth2clientauth":["Add `expiry_buffer` config to `oauth2client` extension, allowing token refresh before expiration with a default buffer of 5 minutes. (#35148)"],"githubreceiver":["The `required_header` configuration option for the trace receiver has been changed to `required_headers`. (#37578)","add support for GitHub Actions workflow run events using deterministic Trace and Root Span IDs. (#37578)"],"googlecloudlogentryencodingextension":["Introduce the scaffolding of a new component, googlecloudlogentryencodingextension (#37531)"],"googlecloudmonitoringreceiver":["support use [monitoring filters](https://cloud.google.com/monitoring/api/v3/filters) to filter metrics (#36898)"],"googlecloudpubsubreceiver":["üêû Turn noisy `warn` log about Pub/Sub servers into `debug`, and turn the reset count into a metric (#37571)"],"internal/datadog":["create new package `github.com/open-telemetry/opentelemetry-collector-contrib/pkg/datadog/hostmetadata` which exposes `GetSourceProvider` from `github.com/open-telemetry/opentelemetry-collector-contrib/internal/datadog/hostmetadata` (#37668)"],"k8sattributes":["üêû Fix bug where `Filters.Labels` failed with when the `exists` or `not-exists` operations were used. (#37913)"],"k8sclusterreceiver":["Adds new descriptive attributes/metadata to the k8s.namespace and the container entity emitted from k8sclusterreceiver. (#37580)"],"kafkatopicsobserver":["Adding new kafka topics observer extension (#37665)"],"opampsupervisor":["The OnConnectionClose was not correctly connected for the supervisor. (#37761)"],"opencensusexporter":["Deprecate the OpenCensus exporter (#36791)"],"opencensusreceiver":["Deprecate the OpenCensus receiver (#36791)"],"pkg/datadog":["Expose the internal Zaplogger implementation (#37939)"],"pkg/ottl":["Introduce ToLowerCase converter function (#32942)","Introduce ToSnakeCase converter function (#32942)","Introduce ToUpperCase converter function (#32942)","Introduce ToCamelCase converter function (#32942)"],"pkg/stanza":["Allow users to configure initial buffer size (#37786)","Remove deprecated `flush.WithPeriod`. (#37784)","Remove deprecated func BuildWithSplitFunc from stanza/fileconsumer (#37723)","Deprecate all functions in stanza/decode (#37734)"],"pkg/translator/jaeger/internal/jaeger":["Remove jaeger model/converter/thrift/jaeger dependency (#37820)"],"pkg/translator/prometheusremotewrite":["add support for metric type sum in FromMetricsV2 (#33661)"],"pkg/translator/zipkin/internal/zipkin":["Remove jaeger model/converter/thrift/zipkin dependency (#37795)"],"processor/redaction":["Introduce 'allowed_values' parameter for allowed values of attributes (#35840)"],"processor/tailsampling":["Adds support for optionally recording the policy (and any composite policy) associated with an inclusive tail processor sampling decision."],"processor/transformprocessor":["Add support for global conditions and error mode overrides. (#29017)"],"prometheusreceiver":["Start time metric adjuster now handles reset points correctly (#37717)"],"prometheusremotewriteexporter":["Resolves a deadlock in the WAL by temporarily releasing a lock while waiting for new writes to the WAL."],"receiver/hostmetrics":["Remove receiver.hostmetrics.normalizeProcessCPUUtilization feature gate (#34763)"],"receiver/prometheus":["Prometheus receiver now uses scrapers in Prometheus 3.0. (#36873)"],"receiver/zipkinreceiver":["Remove zipkinreceiver dependency on Jaeger (#37795)"],"resourcedetectionprocessor":["add the Dynatrace detector to the resource detection processor (#37577)"],"routingconnector":["Remove `match_once` configuration parameter. (#36824)","Avoid unnecessary copy of the data in routing connector (#37946)"],"s3provider":["Delete deprecated `New` factory function. Use `NewFactory` instead. (#37921)"],"secretsmanagerprovider":["Delete deprecated `New` function, use `NewFactory` instead (#37923)"],"splunkenterprisereceiver":["Added a new `splunk.health` metric. (#36695)"],"stefexporter":["Add basic STEF exporter implementation (#37759)"],"syslogreceiver":["Support setting `on_error` config for syslog receiver. (#36906)"],"tailsamplingprocessor":["üêû Fix the decision timer metric to capture longer latencies beyond 50ms. (#37722)","makes the `numeric_attribute` more flexible and allows to set only `min_value` or `max_value`, without the need to set both (#37328)","Add support for external caches when using the Tailsampling Processor in code. (#37035)"],"telemetrygen":["üêû Exported the API for telemetrygen for test uses. Additionally added new E2E tests and fixed race condition (#36984)"],"testbed":["Include the specified resource limits for CPU and memory in the benchmark results (#36720)"],"textutil":["Remove unnecessary copy while decoding and constructing string (#37734)"],"vcenterreceiver":["Adds three more vCenter virtual machine performance metrics (#37488)"]},"v0.120.1":{"receiver/prometheus":["üêû Fix Collector failing to start up if Prometheus receiver is present in config without 'fallback_scrape_protocol'. (#38018)"]},"v0.121.0":{"(general)":["Helps fine tuning the refresh_frequency, and enables custom cluster metadata refresh intervals","Default refresh_frequency is set 10 minutes from Sarama library defaults"],"aesprovider":["Promote to alpha stability (#38252)"],"awscontainerinsightreceiver":["Remove high cardinality attribute `Timestamp` from metrics generated by `awscontainerinsightreceiver` (#35861)","Remove high cardinality attribute `Timestamp` from metrics generated by `awscontainerinsightreceiver` (#35861)"],"awsfirehosereceiver":["Add `cloud.provider`, `aws.log.group.names` and `aws.log.stream.names` resource attributes to logs and set scope name and version of logs and metrics ingested by awsfirehosereceiver. (#37968)","Add support for encoding extensions (#37113)"],"awss3exporter":["Replaced the `s3_partition` option with `s3_partition_format` to provide more flexibility to users. (#37915, #37503)","Added `acl` option (#37935)"],"azureblobexporter":["Add new exporter for sending telemetry to Azure Storage Blob (#35717)"],"azuremonitorreceiver":["üêû Fix bug where the time grain wasn't honored (#37337)"],"azuretranslator":["Map application-defined properties for trace signals (#35402)"],"clickhouseexporter":["Add client info to queries (#34915, #37146)"],"cloudflarereceiver":["Ingest all attributes by default when attributes map is empty (#37720)"],"cmd/opampsupervisor":["Allow configuring Collector process execution via environment variables, custom config files and additional arguments (#24324)"],"confmap/provider/s3":["Promote to alpha stability (#38227)"],"coralogixexporter":["Add support for profiles to the Coralogix exporter. (#38011)","Add new batching capabilities to the Coralogix exporter. (#38081)","Partial success response from Coralogix (#38022)"],"datadogexporter":["Add supports for HTTP_PROXY, HTTPS_PROXY and NO_PROXY for logs (#36292)"],"dorisexporter":["üêû add new config: log_response, label_prefix, headers, log_progress_interval (#38162)","optimize schema: add 'service_instance_id', add materialized views, add trace_graph table and trace_graph job. (#38229)"],"ecsobserver":["üêû Fixed ecs task tags not being included in metadata labels (#38278)"],"elasticsearchexporter":["drop support for metrics for none, raw, and bodymap mapping modes (#37928)","Deprecate `batcher::min_size_items` and `batcher::max_size_items` in favor of `batcher::min_size` and `batcher::max_size`. (#38243)","Add `_metric_names_hash` field to metric documents in `otel` mode to avoid metric rejections (#37511)","Support specifying mapping mode via client metadata (#36092)","Add support for `data_stream.type` attribute to create dynamic index in bodymap mode. (#38000)","üêû Fixes the getLocations() function. It only worked with a location start of 0, which is very unlikely when a profile contains more than one sample. (#38274)","Reintroduce schema_url fields to otel-mode metric docs (#38045)"],"envoyalsreceiver":["Mark `envoyalsreceiver` as an alpha receiver. (#36464)","Add node and log identifier resource attributes (#37800)"],"exporter/splunk_hec":["Do not pass errors from draining the response body to the pipeline as a export failure. (#38118)"],"extension/sumologicextension":["Sanitize the version before it is used to send data to SumoLogic (#37689)"],"failoverconnector":["Refactors the failover logic and changes the retry mechanism to sample data points (#38064)"],"googlecloudexporter":["Updated `opentelemetry-operations-go` to v0.51.0 (#38116)"],"googlecloudpubsubexporter":["Add support for exporting ordered messages to GCP Pub/Sub (#32850)"],"iisreceiver":["Added state and uptime metrics for application pools (#34924)"],"kafkametricsreceiver":["üêû Fix incorrect cluster admin initialization in consumer scraper (#36818)"],"kafkareceiver":["Add error backoff configuration to kafka receiver which allows to wait and retry a failed message when the next consumer returns some errors. (#37009)"],"kafkatopicsobserver":["Adding implementation and tests of the component's logic. (#37665)"],"metricstarttimeprocessor":["add true_reset_point strategy for setting the start timestamp of cumulative points. (#37186)","add true_reset_point strategy for setting the start timestamp of cumulative points. (#37186)"],"mongodbreceiver":["Added mongodb replica metrics and routing logic for multiple mongodb instances (#37517)"],"netflowreceiver":["Promote the NetFlow Receiver to alpha stability (#38255)"],"opampextension":["Support retrieval of available components via the OpAMP extension. (#37246)"],"opampsupervisor":["Support retrieval of available components via the OpAMP supervisor. (#37247)","Allow configuring additional telemetry settings for the Supervisor's own telemetry (#35582)"],"otelcol_exporter_prometheusremotewrite_consumers":["The total number of consumers that are currently sending data to the remote write endpoint."],"otelcol_exporter_prometheusremotewrite_sent_batches":["The total number of batches sent to the remote write endpoint."],"pkg/datadog":["StaticAPIKeyCheck available in pkg/datadog to validate Datadog api is key not empty and no invalid characters (#38223)"],"pkg/ottl":["Support dynamic indexing of math expressions in maps and slices (#37644)","Add `event_index` to the available paths of the span event context (#35778)","Introduce Weekday() converter function (#38126)","üêû Change the `ottlmetric` context to properly display the `TransformContext` value in debug logs (#38103)","Remove ottl\u003ccontext\u003e.Option in favor of ottl.Option[ottl\u003ccontext\u003e.TransformContext] (#38247)"],"pkg/stanza":["Add entry's timestamp and attributes to errors logs from log transformers processors (#37285)","Add method `ProcessBatch` to `Operator` interface in `pkg/stanza/operator` package to support batch processing. (#35455)","Change signature of `emit.Callback` function in `pkg/stanza/fileconsumer/emit` package to emit multiple tokens. (#35455)"],"processor/k8sattributes":["Move k8sattr.fieldExtractConfigRegex.disallow feature gate to stable (#25128)"],"processor/redaction":["Introduce 'blocked_key_patterns' parameter (#35830)"],"processor/resourcedetection":["Introduce retry logic for failed resource detection. (#34761)","Add k8s.cluster.uid to kubeadm detector (#38207)","Add a feature flag to allow the processor (and collector) to fail if resource detection fails (#37961)"],"prometheusreceiver":["Deprecate metric start time adjustment in the prometheus receiver. It is being replaced by the metricstarttime processor. (#37186)","Make use of creation timestamp from prometheus (#36473)"],"prometheusremotewriteexporter":["Adds additional metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"receiver/kafkametricsreceiver":["Add `refresh_frequency` config to `kafkametricsreceiver`, to configure custom duration for cluster metadata refresh (#37896)"],"receiver/prometheusremotewrite":["Add value and timestamp handling in the Prometheus Remote Write receiver by using SetDoubleValue and SetTimestamp (#37277)"],"receiver/sqlquery":["Add support for SapASE (sybase) database connections (#36328)"],"receiver/sqlserverreceiver":["Add `server.address` and `server.port` resource attributes to SQL server receiver. (#35183)"],"receiver/statsd":["Make all types within the config struct public (#38186)"],"receiver/webhookeventreceiver":["Allow the request body to have multiple log lines using line breaks (#38042)"],"redactionprocessor":["üêû Fix redaction processor to redact span event attributes (#36633)"],"redisreceiver":["Collect keyspace metrics even if reported dbs are nonsequential (#38135)"],"secretsmanagerprovider":["Promote to alpha stability (#38251)"],"server.address":["The address of the SQL server host, disabled by default."],"server.port":["The port of the SQL server host, disabled by default."],"signalfxexporter":["Remove the deprecated configuration option `translation_rules` (#35332)"],"signaltometricsconnector":["`get` OTTL function is removed and expressions are now parsed using `ParseValueExpression` (#38098)"],"stefexporter":["Mark STEF exporter as Alpha (#37759)","üêû Fix incorrectly implemented STEF exporter zstd compression option. (#38088)"],"telemetrygen":["Update attribute of generated traces from `net.peer.ip` to `net.sock.peer.addr` to bring it in line with new semconv. (#38043)","Support `--service` for all signal types, rather than just traces (#38044)","Add support for `aggregation-temporality` flag in telemetrygen.  Supported values (delta or cumulative) (#38073)"],"testbed":["üêû Fix batch interval calculation to avoid possible division by zero (#38084)"],"windowsservicereceiver":["Adding a wireframe for a new receiver: windowsservicereceiver (#31377)"]},"v0.122.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper","sqlserver.database.backup_or_restore.rate","sqlserver.replica.sent.rate","sqlserver.replica.received.rate","sqlserver.database.execution_errors.count","sqlserver.table.count","sqlserver.memory.free_list_stalls.rate","sqlserver.database.free_space_tempdb","sqlserver.database.full_scans.rate","sqlserver.index.search.rate","sqlserver.database.login.rate","sqlserver.database.logout.rate","sqlserver.database.deadlock.rate","sqlserver.database.mirror_write_transaction.rate","sqlserver.memory.grants_pending.count","sqlserver.page.lookup.rate","sqlserver.transaction.delay","sqlserver.memory.used","sqlserver.database.version_store_size","Adds functionality to transform logs using the target schema version.","Adds functionality to transform traces using the target schema version.","Previously, all attribute values had to be strings wrapped in double quotes.","Now, unquoted integer values (e.g., `server.port=8000`) are correctly parsed as integers.","Ensures backward compatibility with existing string and boolean attributes."],"attributesprocessor":["Validate metrics configuration parameters before processing (#36077)"],"awscloudwatchencodingextension":["Introduce new encoding extension for AWS CloudWatch Metric Streams (#37870)"],"awscloudwatchlogsexporter, awsemfexporter, awsxrayexporter":["Adding external id support when assuming a role for AWS credentials. (#36725)"],"awscloudwatchmetricstreamsencodingextension":["Add unmarshaler for JSON cloudwatch metric stream (#38407)","Add support for opentelemetry1.0 format (#38408)"],"awsecscontainermetricsreceiver":["Upgrading to aws sdk v2 (#38479)"],"awsfirehosereceiver":["üêû Fix cwlogs encoding to not consider CONTROL_MESSAGE records invalid (#38433)","Remove error log when gzip reader type assertion fails due to nil value (#38352)"],"azureblobexporter":["implementation of azure blob exporter (#34319)"],"azuremonitorexporter":["support sending to multiple azure monitor exporters (#34188)","support custom event for logs for azure monitor exporter (#37422)","üêû Fix flushes on each single Span (#37214)"],"azuremonitorreceiver":["Adds filtering by metric and/or aggregation (#37420)"],"bearertokenauthextension":["Add the ability to configure multiple bearer tokens for the same endpoint. (#38148)","Add the ability to configure multiple bearer tokens for the same endpoint. (#38148)"],"cloudflarereceiver":["Add missing telemetry for Cloudflare receiver (#38447)"],"collectdreceiver":["apply fieldalignment to collectd records to reduce memory allocation (#37321)"],"datadogconnector":["Remove `datagodconnector.TracesConfig`, use `datadogconfig.TracesConnectorConfig` instead (#38661)"],"datadogexporter":["Add support for exporting metrics to Datadog using the Datadog serializer. Enable feature gate `exporter.datadogexporter.metricexportserializerclient` to send metrics with the Datadog serializer."],"datadogsemanticsprocessor":["Add datadogsemanticsprocessor, which transforms OpenTelemetry semantic conventions to Datadog semantic conventions (#35304)"],"dbstorageextension":["Change SQLite driver to non-CGO version (#35280)","Optimize dbstorage.Batch() performance for single-type Operations set call (#38026)"],"deltatocumulative":["removes legacy and clean up existing metrics (#38079)"],"elasticsearchexporter":["Dynamically route documents by default unless `{logs,metrics,traces}_index` is non-empty (#38361)","Change default `mapping::mode` config to `otel` (#37241)","Add stratified downsampling to the profiles support in the elasticsearch exporter (#37893)","Add config `logs_dynamic_pipeline` to dynamically set the document pipeline to the value of the attribute `elasticsearch.ingest_pipeline`, this only applies to logs. (#37419)"],"examples/demo":["Remove examples/demo (#38488)"],"exporter/kafka":["do not ask for user and password if auth mechanism is set to AWS IAM (#37417)"],"exporter/loadbalancing":["Add support for route with composite keys (#35320)"],"extension/observer/kafakatopicsobserver":["add support for client_id and metadata config (#38411)"],"faroexporter":["Add Faro exporter package (#35319)"],"faroreceiver":["Introduce a new receiver to recieve faro data (#19180)"],"filelogreceiver":["Extend container parser log file path pattern to include rotated files. (#35137)"],"geoipprocessor":["Add the `attributes` parameter and consider both `source.address` and `client.address` by default (#37008)"],"githubreceiver":["add GitHub workflow job spans (#38016)","üêû Fixes a bug where Job Step Spans did not have the correct Parent SpanID. (#38647)"],"googlecloudexporter":["Adds a featuregate to support user defined mapping from OTel resources to Monitored Resources (#38102)"],"headersetterextension":["Add support for setting headers based on authentication data (#38441)"],"healthcheckv2extension":["üêû Fix the deadlock in healthcheckv2 extension in case of an error in the healthcheckv2 Start function. (#38269)"],"hostmetricsreceiver":["Added the `system.linux.memory.dirty` and `system.memory.page_size` metrics. (#38672)"],"jaegerreceiver":["Remove dependency on jaeger/cmd/agent (#38655)"],"k8sleaderelector":["allows single instance of the receiver/exporter to be active via kubernetes leader election mechanism (#34460)"],"kafka":["Upgrading to aws sdk v2 (#38478)"],"kafkatopicsobserver":["Remove session_timeout and heartbeat_interval config (#38414)","Change stability level of kafkatopicsobserver to alpha (#37665)"],"metricstarttimeprocessor":["Decouples the cache from the strategies for adjusting (#38382)","Add the subtract_initial_point strategy skeleton (#37186, #38379)","Use a hash of resource attributes to cache start times for metrics (#38286)"],"mongodbreceiver":["Added new mongodb metrics to achieve parity with Telegraf (#37227)"],"mysqlreceiver":["üêû Fixed issue where the system attempted to convert string value '0.0000' (stored as []uint8) to int64 type, which was causing an invalid syntax error. (#38276)"],"opampsupervisor":["add ability to report own traces/logs (#38360)","Support HTTP endpoint for opampsupervisor (#38654)","Add support for configuring the Logs SDK (#38477)","Use OwnLogsConnSettings along with Metrics \u0026 Traces settings to evaluate if configuration changed on message. (#38409)"],"otelcol_deltatocumulative.datapoints.dropped":["to `otelcol_deltatocumulative_datapoints{error=\"...\"}`"],"otelcol_deltatocumulative.datapoints.processed":["to `otelcol_deltatocumulative_datapoints`"],"otelcol_deltatocumulative.max_stale":["to `otelcol_deltatocumulative_max_stale`"],"otelcol_deltatocumulative.streams.limit":["to `otelcol_deltatocumulative_streams_limit`"],"otelcol_deltatocumulative.streams.tracked":["to `otelcol_deltatocumulative_streams_tracked`"],"otlpjsonfilereceiver":["üêû Fix nil pointer dereference due to empty token (#38289)"],"pkg/ottl":["üêû Enhance flatten() editor to resolve attribute key conflicts by adding a number suffix to the conflicting keys. (#35793)","Add `IsValidLuhn()` checksum verification function (#37880)","Add ability to compare maps in Boolean Expressions (#38611)","Add `Murmur3Hash`and `Murmur3Hash128` functions to convert the `target` string to Murmur3 hash in hexadecimal string format (#34077)","üêû Fix limitation of map literals within slice literals not being handled correctly (#37405)","Add support for parsing OTTL conditions to the `ottl.ParserCollection`. (#37904)"],"pkg/pdatatest":["Add ValidateProfile() function to validate pprofile.Profile. (#38452)","Simplify generating profiles for testing by transforming Go structs to profiles. (#38430)"],"pkg/stanza":["Add 'regex_replace' operator (#37443)","Prevent data loss in Stanza-based receivers on ungraceful shutdown of the collector (#35456)"],"pprofreceiver":["Introduce a new receiver to report pprof profiles (#38260)"],"probabilisticsampler":["Logs priority sampling behavior applies only when the priority attribute is present. (#38468)"],"processor/redaction":["Support hashing instead of masking values via 'hash_function' parameter (#35830)"],"prometheusremotewriteexporter":["Adds the `endpoint` label to remote write exporter metrics to help identify the remote write endpoint within the metrics. (#38397)"],"prometheusremotewritereceiver":["Handle `otel_scope_name` and `otel_scope_version` labels in Prometheus Remote Write receiver properly if not present (#37791)"],"rabbitmqreceiver":["Enhance the RabbitMQ receiver to collect and report node-level metrics (`rabbitmq.node.disk_free`, `rabbitmq.node.fd_used`, `rabbitmq.node.mem_limit`, and `rabbitmq.node.mem_used`). This provides additional observability into the state and resource usage of RabbitMQ nodes. (#36925)"],"receiver/awscloudwatchreceiver":["Upgrading to adopt AWS SDK v2 (#36699)"],"receiver/azuremonitorreceiver":["Add dimensions.enabled and dimensions.overrides which allows to opt out from automatically split by all the dimensions of the resource type (#36611)"],"receiver/prometheus":["üêû Adds the Prometheus API server to more easily debug the Prometheus config, service discovery, and targets. (#32646)","üêû Adds the Prometheus API server to more easily debug the Prometheus config, service discovery, and targets. (#32646)"],"receiver/sqlserverreceiver":["SQL Server receiver now requires a positive serial number for X509 certificates. (#38099)"],"receiver/webhookeventreceiver":["Add option to include headers as log attributes (#37815)"],"redisstorageextension":["üêû allow redis key prefix to be specified in extension config (#37677)"],"resourceprocessor":["Add support for profile signal type (#359979)"],"routingconnector":["Adds Standard Converter functions to routing connector. (#38282)"],"saphanareceiver":["Promote to alpha stability (#38257)"],"schemaprocessor":["Adds functionality to transform logs (#38615)","Adds functionality to transform traces (#38486)"],"secretsmanagerprovider":["Allow for default values when the selector is empty or the JSON key is not found (#37535)"],"sematextexporter":["Advanced metrics implementation (#36465)","basic metrics implementation (#36465)"],"servicegraphconnector":["Change the default value of `metrics_flush_interval` to 60s to avoid excessive metric data point generation with default settings."],"splunkhecreceiver":["splunk hec receiver accepts metrics with empty string Event field (#38464)"],"sqlqueryreceiver":["Allow users to specify the maximum number of concurrent open connections to DB server using `max_open_conn` config parameter (#36752)"],"sqlserverreceiver":["Add new performance-related metrics (#37884)"],"syslogexporter":["üêû Fixes handling of multiple structured data elements (#33300)"],"tcpcheckreceiver":["Introducing new component tcpcheck receiver (#34414)","Promote to alpha stability (#38442)"],"telemetrygen":["Support integer values in `--telemetry-attributes` and `--otlp-attributes` flags (#38392)"],"tlscheckreceiver":["Implement TLS Check Receiver for host-based checks (#35842)","Promote to alpha stability (#38460)"]},"v0.123.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper"],"awscloudwatchencodingextension":["Increase component stability to Alpha (#37870)"],"awscloudwatchmetricstreamsencodingextension":["Return errors when extracting the metrics from the record instead of logging them. (#38596)"],"awsecscontainermetrics":["Ensure that the storage.read_bytes and storage.write_bytes metrics include i/o counts from all devices (#38301)"],"awsfirehosereceiver":["üêû Fixes unmarshal error when request is larger than the buffer limit of bufio.Scanner (#38736)"],"awslogsencodingextension":["Add AWS Logs Encoding Extension to support decoding logs produced by AWS services (#38627)","Add support for cloudwatch logs coming from subscription filters. (#38820)"],"awss3exporter":["Implement timeout for S3 exporter (#36264)"],"axw:prometheusremotewritereceiver-fix-tests":["wait for listening port to be closed before shutting down receiver (#38705)"],"azureauthextension":["Add new authenticator extension for Azure. (#38908)","Implement extensionauth.Server and azcore.TokenCredential. (#39012)"],"azuremonitorexporter":["support span links for traces for azure monitor exporter (#35855)"],"bearertokenauthextension":["Allow the header name to be customized in the bearerauthtoken extension (#38793)"],"elasticsearchexporter":["Remove deprecated fields [min|max]_size_items from batch config (#38836)","Enable native frame symbolization for Universal Profiling via the symbolization queue indices. (#38577)","Remove deprecated fields [min|max]_size_items from batch config (#38836)"],"farotranslator":["Add Faro translator package (#19180, #35319)"],"hostmetricsreceiver":["Reduced the cost of retrieving number of threads and parent process ID on Windows. Disable the featuregate `hostmetrics.process.onWindowsUseNewGetProcesses` to fallback to the previous implementation.","Reduced the CPU cost of collecting the `process.handles` metric on Windows. (#38886)"],"include_instrumentation_scope":["A list of instrumentation scope names to include from the traces."],"k8sattributesprocessor":["Remove stable feature gate `k8sattr.rfc3339` (#38810)"],"k8slogreceiver":["Add the skeleton for the new k8slogreceiver in development. (#23339)"],"kafkaexporter":["change default client_id to \"otel-collector\" (#38411)","Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kafkametricsreceiver":["change default client_id to \"otel-collector\", deprecate \"refresh_frequency\" (#38411)","Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kafkareceiver":["Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)","make calls to error backoff thread-safe and add logging (#38941)","Disable exposing factory options programmatically on NewFactory. (#38874)"],"kafkatopicsobserverextension":["Deprecate `auth.plain_text` configuration. Use `auth.sasl` with mechanism set to PLAIN instead. (#38883)"],"kakfaexporter":["Disable exposing factory options programmatically on NewFactory. (#38874)"],"lokiexporter":["Add lokiexporter component to the contrib distribution (#38993)"],"metricstarttimeprocessor":["Add reset detection for histograms (#38582)"],"opampsupervisor":["Allow controlling Collectors that don't include the nopreceiver and nopexporer (#38809)","Report the reception of an unexpected UID during bootstrapping (#29864)"],"oracledbreceiver":["Add support for additional read/write metrics (#37814)"],"pkg/ottl":["Enhance the Decode OTTL function to support all flavors of Base64 (#38854)","üêû Fix the `ottl.ParserCollection` to properly infer the OTTL context when using the `ParseConditions` function. (#38755)"],"pkg/pdatatest":["Change type of attribute values from string to any. (#39006)"],"pkg/stanza":["Add retries when calls to retrieve Windows event via `EvtNext` fail with error RPC_S_INVALID_BOUND (1734). (#38149)"],"prometheusremotewriteexporter":["Remove `export_created_metric` config option (#35003)","Adds logic to convert from the internal OTEL Metrics unit format to Prometheus unit format and emit unit as part of Prometheus metadata. (#29452)","Disallow users from setting compression type other than snappy (#37232)","Adds logic to convert from the internal OTEL Metrics unit format to Prometheus unit format and emit unit as part of Prometheus metadata. (#29452)"],"prometheusremotewritereceiver":["Add help ref attribute to metric (#37277)","Separate timeseries with the same labels are now translated into the same OTLP metric. (#37791)","Use Created Timestamps to populate Datapoint's StartTimeUnixNano (#37277)"],"rabbitmqreceiver":["Enhance the RabbitMQ receiver to collect and report additional node-level metrics: `rabbitmq.node.disk_free`, `rabbitmq.node.disk_free_limit`, `rabbitmq.node.disk_free_alarm`, `rabbitmq.node.disk_free_details.rate`, `rabbitmq.node.mem_used`, `rabbitmq.node.mem_limit`, `rabbitmq.node.mem_alarm`, `rabbitmq.node.mem_used_details.rate`, `rabbitmq.node.fd_used`, `rabbitmq.node.fd_total`, `rabbitmq.node.fd_used_details.rate`, `rabbitmq.node.sockets_used`, `rabbitmq.node.sockets_total`, `rabbitmq.node.sockets_used_details.rate`, `rabbitmq.node.proc_used`, `rabbitmq.node.proc_total`, `rabbitmq.node.proc_used_details.rate`. These provide additional observability into the state and resource usage of RabbitMQ nodes. (#38976)","Enhance the RabbitMQ receiver to collect and report additional node-level metrics across multiple categories. These include metrics related to memory, file descriptors, sockets, processes, disk, uptime, scheduling, garbage collection (GC), I/O, message store, connections, clustering, configuration, application info, and context switches. This significantly improves visibility into the performance, state, and resource usage of RabbitMQ nodes. (#38997)"],"receiver/azuremonitorreceiver":["multi subscriptions support and automatic discovery (#36612)"],"receiver/sqlserver":["the current metric scraper would report error when parsing value, the value was parsed as int but actually it should be a float (#38823)","Ensure all enabled metrics are emitted (#38839)","Remove warning that `server.address` and `server.port` resource attributes will be enabled (#38831)"],"redisstorageextension":["üêû fix missing redis prefix in Batch method (#38877)"],"resourcedetection":["Adding the os.version resource attribute to system resourcedetection processor (#38087)"],"schemaprocessor":["Add functionality to transform metrics for the schema processor."],"spanmetricsconnector":["Add instrumentation scope to span metrics connector. (#23662)"],"splunkhecreceiver":["Splunk HEC timestamp accepts nanoseconds, microseconds, milliseconds, and seconds epoch. (#36571)"],"sqlserverreceiver":["support sqlserverreceiver to record every executing query (#36462)","Support query-level log collection (#36462)"],"stefexporter":["Avoid embedding the QueueConfig, avoids potential conflicts (#38887)"],"stefreceiver":["Add structure of new receiver (#38979)"],"tcpcheckreceiver":["üêû Fixed typo in \"Metric configuration\". (#38889)"],"telemetrygen":["üêû Fixes invalid HistogramDataPoint messages generated by telemetrygen. (#39025)"],"tlscheckreceiver":["Add file-based TLS certificate checks (#38906)","add `tlscheck.x509.san` attribute (#38872)"],"tpmextension":["Add scaffolding for Trusted Platform Module extension. (#38682)"],"workflow":["üêû Remove path parts from component label suffixes (#38527)"]},"v0.124.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper","'DDL statements parallelized'","'DML statements parallelized'","'Parallel operations not downgraded'","'Parallel operations downgraded to serial'","'Parallel operations downgraded (1-25%)'","'Parallel operations downgraded (25-50%)'","'Parallel operations downgraded (50-75%)'","'Parallel operations downgraded (75-99%)'"],"alertmanagerexporter":["Add alert labels based on event attribute list in alermanager exporter (#38063)","Add support for api version in Alertmanager endpoint, default is v2 (#38694)"],"awslogs_encoding":["Add support for VPC flow logs sent to S3 in plain text format. (#38896)"],"awslogsencodingextension":["Rename aws.eni.id attribute to network.interface.name and update README (#39051)","Add support for ECS fields. (#39241)","Improve performance when unmarshalling plain-text VPC flow logs. (#39043)"],"awss3exporter":["üêû Fixes an issue where the AWS S3 Exporter was forcing an ACL to be set, leading to unexpected behavior in S3 bucket permissions (#39346)"],"azureauthextension":["Add implement for extensionauth.HTTPClient and extensionauth.Server interface functions. (#39178)","Use credentials to handle the access token. (#39057)"],"azureblobexporter":["support for append blob in azure blob storage exporter (#39075)","change to alpha for azure blob exporter (#39272)"],"azuremonitorreceiver":["Add subscription name resource attribute (#39029)","Allow to use metrics:getBatch API (Azure Monitor Metrics Data Plane) (#38651)"],"clickhouseexporter":["use a more precise conversion function to create TTL (#38942)"],"connector/spanmetrics":["This change proposes moving the start timestamp (and last seen timestamp) from the resourceMetrics level to the individual metrics level. This will ensure that each metric has its own accurate start and last seen timestamps, regardless of its relationship to other spans. (#35994)"],"datadogexporter":["Deprecate config `host_metadata::first_resource` (#39069)","Deprecate feature gate `exporter.datadogexporter.metricexportnativeclient`. Datadog exporter now uses the serializer to send metrics by default. (#39148)","Move feature gate `exporter.datadogexporter.metricexportserializerclient` to beta. Datadog exporter now uses the serializer to send metrics by default. (#39148)","üêû Fix a bug on missing APM stats when feature gate `exporter.datadogexporter.metricexportserializerclient` is enabled. (#39148)","üêû Fix a bug on `instrumentation_scope_metadata_as_tags` not being honored when feature gate `exporter.datadogexporter.metricexportserializerclient` is enabled. (#39148)","Remove deprecated exporter configs. The exporter now uses pkg/datadog/config (#39104)"],"elasticsearchexporter":["üêû Add `telemetry::log_failed_docs_input` and `telemetry::log_failed_docs_input_rate_limit` config to facilitate debugging of failed bulk request items (#39205)","Handle edge cases in metrics grouping causing TSDB version_conflict_engine_exception (#38083)"],"extension/headerssetter":["Change `DefaultValue` to use `configopaque.String` type. (#39127)","Change `DefaultValue` to use `configopaque.String` type. (#39127)"],"faroexporter":["Completes the implementation of the Faro exporter. (#35319)"],"farotranslator":["Adds support for user actions in the Faro translator. (#39141)"],"googlecloudlogentryencodingextension":["Add Google Cloud LogEntry Encoding Extension to support decoding logs produced by Google Cloud services (#37531)"],"k8sattributesprocessor":["üêû Add option to configure automatic resource attributes - with annotation prefix (#37114)"],"k8sclusterreceiver":["Add missing attributes to entities in experimental entity feature (#39038)"],"kafkaexporter":["Deprecate `auth::tls` and introduce `tls` config (#37776)","deprecate `topic` and `encoding`, introduce signal-specific configuration (#35432)","Propagate metadata keys as headers (#39130)","enable partitioning for all encodings (#39001, #38999)"],"kafkametricsreceiver":["Deprecate `auth::tls` and introduce `tls` config (#37776)"],"kafkareceiver":["Deprecate `auth::tls` and introduce `tls` config (#37776)","Add signal-specific topic and encoding config, deprecate existing topic/encoding config. (#32735)","Propagate Kafka headers as metadata (#39129)"],"kafkatopicsobserverextension":["Deprecate `auth::tls` and introduce `tls` config (#37776)"],"metricstransformprocessor":["üêû Fix aggregation of exponential histograms in metricstransform processor. (#39143)"],"opampsupervisor":["add support for including local configuration files (#37886)"],"oracledbreceiver":["Add support for parallel operations metrics (#39215)"],"ottlprofile":["Add OTTL support for profiles. (#36104)"],"pkg/ottl":["üêû Fix OTTL context inference order to prioritize the `scope` context over `resource`. (#39155)","üêû Fix so replace_all_patterns can replace keys using optional function (#32896)","Remove experimental transform context option `WithCache` from all OTTL contexts. (#39338)"],"pkg/pdatatest":["Introduce IgnoreExemplars, IgnoreExemplarSlice and ChangeDatapointAttributeValue to CompareMetricsOption (#39004)"],"pkg/stanza":["Use buffer pool for the read buffers to limit allocations\" (#39373)","Remove unnecessary slice allocation to track errors (even nil) (#39367)"],"postgresqlreceiver":["add top query collection to help end user identify which query were executed in the postgresql database. (#39311)"],"processor/transform":["üêû Fix Basic Config style to properly handle `cache` access. (#38926)"],"receiver/filelog":["names of files are printed repeatedly to `stdout` #39414"],"receiver/kubeletstats":["support user defined CA path for service account using the configtls option `ca_file` (#39291)","support user defined CA path for service account using the configtls option `ca_file` (#39291)"],"receivercreator":["Add kafkatopicsobserver to the receivercreator configuration (#37665)"],"servicegraphconnector":["Change database_name_attribute to accept a list of values. (#37777)","Metrics for spans with extra dimensions configured are incorrectly being aggregated together despite the dimension values being different. (#39160)","üêû Fix collectClientLatencyMetrics method bug (#39184)"],"signalfxexporter":["Errors will now include the URL that it was trying to access (#39026)"],"signaltometricsconnector":["Allow to configure `optional` attributes which are copied as-is to the output metric. (#38600)"],"sigv4auth":["Added support for authenticating with AssumeRoleWithWebIdentity API (#103107)"],"spanmetricsconnector":["Initialise new calls_total metrics at 0 (#38537)"],"splunkenterprisereceiver":["added new attributes to the receiver and modified config (#36330)","disabled default metrics except for splunkHealth to ensure scrapes run on Splunk instance are opt-in (#39068)","üêû Fixes `otelcol_scraper_errored_metric_points` metric, which was not incrementing properly (#38691)"],"splunkhecexporter":["Errors will now include the URL that it was trying to access (#39026)"],"sqlserverreceiver":["update the unit of `db.lock_timeout` attribute from millisecond to second. this attribute is part of the emitted query sample collection. (#39042)","Allow full control of the \"connection string\" via the `datasource` configuration option (#39235)"],"stefreceiver":["Make the receiver initially code complete (#38979)"],"telemetrygen":["üêû Fix flaky test TestTemporalityStartTimes (#39219)","üêû fix startTimestamp when generating cumulative temporality datapoints. (#38232)"],"testbed":["Specify `storage` parameter for filelog receiver in benchmarks (#39217)"]},"v0.124.1":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","exporter/opensearchexporter","extension/observer/ecstaskobserver","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","receiver/couchdbreceiver","receiver/elasticsearchreceiver","receiver/memcachedreceiver","receiver/mysqlreceiver","receiver/postgresqlreceiver","receiver/zookeeperreceiver","scraper/zookeeperscraper"],"receiver/filelog":["Remove printing to console the names of files which are read by File Log receiver (#39414)"]},"v0.125.0":{"(general)":["The default value of the `start_from` field in the logs config changed to Unix epoch (`1970-01-01T00:00:00Z`) when not explicitly configured. This may alter the behavior of existing configurations relying on the previous default.","To maintain previous behavior, explicitly configure `start_from` in the logs configuraiton."],"awscloudwatchlogsexporter":["Add dynamic log_group_name and log_group_stream naming, based on awsemfexporter (#31382)"],"awscloudwatchreceiver":["Adds option to set storage for AWS CloudWatch receiver (#32231)"],"awslogsencodingextension":["Add support for S3 Access Logs. (#39161)"],"awss3exporter":["üêû add configuration field `resource_attrs_to_s3/s3_prefix` to support mapping s3 bucket prefix to OTel resource attributes (#37858)","üêû add configuration field `resource_attrs_to_s3/s3_prefix` to support mapping s3 bucket prefix to OTel resource attributes (#37858)"],"azureauthextension":["Update stability to alpha. (#39574)"],"azureblobexporter":["üö®‚ö†Ô∏è Add SerialNumBeforeExtension option to BlobNameFormat in Azure Blob exporter as an option to avoid breaking file extension (#39593)"],"countconnector":["Add profiles support (#39577)"],"datadogexporter":["üêû Fix a race condition in metric serializer exporter where the exporter may not be fully initialized when it receives metrics (#39669)"],"datadogextension":["Introduce framework for Datadog Extension (#39589)"],"deltatocumulative":["üêû fixes misuse of xsync, leading to bad mutex unlock (#39106)"],"dnslookupprocessor":["Add structure of new processor (#34398)"],"elasticsearchexporter":["Add support for include_source_on_error, which configures whether bulk index responses should include source document on error (#39211)","Introduce LRU cache for profiles (#38606)","Add support for extracting mapping mode from a scope attribute. (#39110)"],"filelogreceiver":["üêû Fix frozen receiver when max_concurrent_files is 1 (#39598)"],"geoipprocessor":["Close providers readers on shutdown (#38961)"],"githubreceiver":["add dedicated job queue spans with cicd.pipeline.run.queue.duration attribute (#39081)","üêû Fix span end times for skipped and cancelled workflows (#39020)"],"hostmetricsreceiver":["Possible to enable the process scraper under FreeBSD in the hostmetrics receiver. (#39622)"],"k8sclusterreceiver":["add support for k8s leader election in k8s cluster receiver (#38429)"],"k8sobjectsreceiver":["Check for K8s API objects existence on receiver startup and not during config validation. (#38803)","Introduces `error_mode`, so users can choose between propagating, ignoring, or silencing missing objects. (#38803)"],"kafkareceiver":["Add support for configuring Kafka consumer rebalance strategy and group instance ID (#39513)","Added a new 'topic' attribute to all existing internal consume-claim metrics. (#35336)","Add `max_fetch_wait` config setting (#39360)","`name` label will be correctly set in receiver metrics (#39483)"],"kubeletstatsreceiver":["Adds support for collecting Node and Pod network IO/error metrics for all network interfaces (#30196)"],"opampextension":["Introduces a new config field `include_resource_attributes` which allows the extension to copy the agent's resource attributes to the non-identifying attributes in the agent description. (#37487)","Skips loading TLS config for insecure endpoints (#39515)"],"opampsupervisor":["Add support for the opampsupervisor to be able to start with only local config (#38794)","Supervisor will no longer report a config status of \"applying\" if the config has not changed (#39500)","üêû fixes OpAMP Supervisor macOS example config (#39492)"],"pkg":["Improve performance of azure logs translator. (#39340)"],"pkg/golden":["Expose methods to write data to file outside of the scope of a test (#39673)"],"pkg/ottl":["Add `ottl.WithContextInferenceConditions` option to allow configuring extra context inferrer OTTL conditions (#39455)","Add PMapGetSetter interface and StandardPMapGetSetter type. (#39657)"],"processor/k8sattributes":["Change processor/k8sattributes to return error if unset envvar is used for `node_from_env_var` (#39447)"],"prometheusreceiver":["When a histogram metric has both classic and native histogram buckets, keep both, instead of throwing away the native histogram buckets. (#26555)"],"prometheusremotewritereceiver":["Cache `target_info` metrics so it can be used to populate metrics' Resource Attributes. (#37277)"],"receiver/kubeletstats":["Move receiver.kubeletstats.enableCPUUsageMetrics feature gate to beta (#39487)"],"receiver_creator":["üêû Fix kafkametrics receiver instantiation (#39313)"],"receivercreator":["üêû Fix how escaped backticks are handled in receiver creator templates (#39163)"],"resourcedetectionprocessor":["change the EKS cluster identifier and check the cluster version instead of the existence of aws-auth configmap (#39479)","change the EKS cluster identifier and check the cluster version instead of the existence of aws-auth configmap (#39479)"],"sematextexporter":["basic logs implementation (#36465)"],"signaltometricsconnector":["Add profiles support (#39609)","üêû Fix incorrect result for metrics configured with same name but different type (#39442)"],"spanmetricsconnector":["Deprecate the unused configuration `dimensions_cache_size` (#39646)","Add new `aggregation_cardinality_limit` configuration option to limit the number of unique combinations of dimensions that will be tracked for metrics aggregation. (#38990)"],"splunkhecexporter":["Use ObservedTimestamp if Timestamp is empty. (#39221)"],"sqlqueryreceiver":["respect `max_open_conn` configuration for multiple queries (#39270)"],"sqlserverreceiver":["`host.name`, `sqlserver.computer.name`, and `sqlserver.instance.name` are now resource attributes instead of log attributes. We used to report `computer_name` and `instance_name` in the log attributes for top query collection and they are now deprecated. Now we report the three resources attributes in both top query collection and sample query collection. (#39449)","Accept `context_info` with `traceparent` format in query sample collection, setting log record with correct traceId and spanId. (#39539)"],"statsdreceiver":["Add new config to customize socket permissions when transport is set to `unixgram`. (#37807)"],"tcpcheckreceiver":["üêû Fix tcpcheck.error to report as a cumulative value instead of always being 1. (#39234)"],"tcplogreceiver":["Ignore SplitFuncBuilder field to prevent panic during config marshaling (#39474)"],"transformprocessor":["üêû Fix the context inferrer to also take into consideration the global OTTL conditions configuration. (#39455)","üêû Fix the context inferrer to also take into consideration the global OTTL conditions configuration. (#39455)"]},"v0.126.0":{"(general)":["Previously, the receiver required explicit configuration of the endpoint.","This change allows automatic detection of DOCKER_HOST, improving flexibility in different environments."],"awsfirehosereceiver":["support all possible quantile values of CloudWatch metrics in addition to quantile 0 (min) and 1 (max) (#39687)"],"azuremonitorexxporter":["support logging exceptions for azuremonitor exporter (#38432)"],"azuremonitorreceiver":["Renamed the `auth` field to `credentials` in the azuremonitorreceiver configuration. (#39738)"],"carbonreceiver":["Support unnamed groups in carbon receiver regex parser (#39137)"],"clickhouseexporter":["clickhouseexporter doesn't set the database name in the dsn of the query that creates the database (#38829)"],"cmd/golden":["Add a docker image for golden (#39662)"],"cmd/opampsupervisor":["üêû Fix slice merging when using local configuration files (#39947)"],"confmap/googlesecretmanager":["Mark the Google Secret Manager provider as alpha stability. (#39665)","Update scheme to use googlesecretsmanager instead of googlesecretmanagerprovider. (#39971)"],"confmap/googlesecretmanagerprovider":["Initial implementation of secrets manager provider. Allows fetch secrets from Google Secrets Manager (#39665)"],"coralogixexporter":["Remove deprecated batcher config for coralogixexporter, use sending_queue::batch (#39960)"],"datadogexporter":["Enable instrumentation_scope_metadata_as_tags by default in datadogexporter. Scope attributes are now added as tags to metrics. (#39767)","üêû Fixes a memory leak in the Datadog exporter caused by an uninitialized logger. (#39959)"],"datadogreceiver":["Support 128 bits TraceIDs coming from Datadog (#36926)"],"dockerstatsreceiver":["Returns Docker client options, using the DOCKER_HOST environment variable if no endpoint is configured. (#35779)"],"elasticsearchexporter":["Report Elasticsearch request success / failure via componentstatus (#39562)"],"eventlogreceiver":["add raw XML query filtering option (#38517)","add raw XML query filtering option (#38517)"],"faroreceiver":["Completes the implementation of the Faro receiver. (#19180)"],"fileconsumer":["Support \"`compression:auto`\" which automatically detects file compression type and ingests data. Currently, only gzip compressed files are auto detected. This allows for mix of compressed and uncompressed files to be ingested with the same filelogreceiver. (#37772)"],"fluentforwardreceiver":["Unexport AckResponse (#39831)"],"githubreceiver":["üêû fix queue span lengths caused by GitHub event timestamp bug (#39824)"],"golden":["Add a new CLI, golden, to run comparison of expected payloads over OTLP. (#39662)"],"googlecloudexporter":["Updated the exporter.googlecloud.CustomMonitoredResources featuregate to support user defined mapping from OTel resources to Monitored Resources for logging (#40001)"],"googlecloudlogentryencodingextension":["Update stability to alpha. (#37531)"],"googlecloudpubsubreceiver":["Add `ignore_encoding_error` configuration to ignore decoding failures from the configured encoder (#38164)","Add deprecation warning for the build-in encoders (#39371)"],"k8sobjectsreceiver":["k8sobject receiver support leader election (#39054)"],"kafkaexporter":["Add compression level in kafka producer. (#39772)","Make Sarama's ConfigurationError as permanent to prevent retries (#38604)","üêû fix the default topic configuration, and default message partitioning (#39810, #39816)"],"kafkareceiver":["üêû Fix support for built-in text encodings with hyphens in the encoding name (#39793)"],"metricstarttimeprocessor":["Implementation of the subtractinitial strategy (#38379)"],"mongodbatlasreceiver":["Add support for setting custom base URL for the MongoDB Atlas API (#39345)"],"netflowreceiver":["Add `send_raw` option to send logs as a raw string in the log body instead of parsed into attributes. (#38920)"],"oidcauthextension":["Add ignore_audience config option for ignoring oidc audience (#36568)"],"opampsupervisor":["Remnove `agent.health_check_port`. (#39908)","Update supervisor to forward the agent's ComponentHealth message to the server whenever it is received. (#39890)"],"pkg":["Remove the fields from category AzureCdnAccessLog from the body log record and place them as log record attributes. (#39811)","üêû Fix empty resource attributes in the azure logs translator (#39571)"],"pkg/datadog":["Switch feature gate datadog.EnableOperationAndResourceNameV2 to beta. This gate affects exporter/datadog and connector/datadog. It modifies the logic for computing operation names from OTLP spans to produce shorter, more readable names and improve alignment with OpenTelemetry specifications. (#39895)"],"pkg/ottl":["üêû Add support for HasPrefix and HasSuffix functions (#39825)","Add the OTTL function ProfileID() (#39587)","OTTL is now officially considered Beta stability (#39910)"],"pkg/stanza/fileconsumer":["Mute new reader log when the noStateTracker is used (#39855)"],"pkg/winperfcounters":["Add methods to scrape raw values from Windows performance counters. (#39835)"],"postgresqlreceiver":["Reduce component footprint by removing the loading of unnecessary SQL drivers (#39918)","we introduced the top query collection to postgresql receiver. this will collect the queries from `pg_stat_statements` and report the related metrics. this will help the end user to identify which queries are most executed, and resources most used. (#39573)"],"processor/metricstarttime":["Upgrade the stability to `Alpha` (#39857)"],"processor/redaction":["Apply redaction to log.body (#37239)"],"processor/tailsampling":["The invert decisions (InvertSampled and InvertNotSampled) have been deprecated, please make use of drop policy to explicitly not sample select traces. (#39833)","New policy type to explicitly drop traces regardless of other policy decisions. (#39668)"],"processor/transform":["The transformprocessor is now officially considered Beta stability (#39928)"],"prometheusreceiver":["Add 'fallback_scrape_protocol' to entries obtained through Target Allocator, unless already defined. (#39672)","Convert ms to s when setting start time on the metric (#39912)"],"prometheusremotewriteexporter":["Add `exporter.prometheusremotewritexporter.enableSendingRW2` feature gate and configuration to the exporter to send Prometheus remote write 2.0 version. (#33661)","Add `exporter.prometheusremotewritexporter.enableSendingRW2` feature gate and configuration to the exporter to send Prometheus remote write 2.0 version. (#33661)"],"receiver/hostmetricsreceiver":["Migrated `hostmetricsreceiver` to use `pkg/winperfcounters` when retrieving Windows performance counters. (#38858)"],"receiver/k8scluster":["Add node name to pod metadata (#37454)"],"receiver/ntp":["Move ntpreceiver to beta stability (#39897)"],"receiver/prometheus":["Upgrade `receiver.prometheusreceiver.RemoveLegacyResourceAttributes` feature gate to `beta` stability (enabled by default) (#32814)"],"receiver/sqlserver":["Properly parse numbers stored in scientific notation to integers (#39124)"],"signaltometricsconnector":["üêû Fix same metric name, unit, and type with different description ignoring description (#39736)"],"spanmetricsconnector":["Separate Dimensions for calls and duration metrics (#36805)"],"splunkenterprisereceiver":["adds `splunk.indexer.rollingrestart.status` metric (#39023)","Added a new `splunk.search.initiation`, `splunk.search.duration`, `splunk.search.status`, and `splunk.search.success` metrics. (#39566)","Unexport InfoEntry and InfoContent (#39830)"],"sqlserverreceiver":["Update event properties (#39868)"],"stefexporter":["Implement async exporting (#39958)"],"tailsamplingprocessor":["üêû Fix the misleading decision timer latency metric (#38502)"]},"v0.127.0":{"(general)":["sqlserver.total_worker_time","sqlserver.execution_count","sqlserver.total_logical_reads","sqlserver.total_logical_writes","sqlserver.total_physical_reads","sqlserver.total_rows","sqlserver.total_grant_kb","This change only applies to the `top_query_collection` feature.","The default value is `60s`","Splunk responses with a 403 typically indicate an authentication or authorization issue that is not likely to be resolved by retrying.","This change ensures that the error is treated as permanent to avoid unnecessary retries.","This change is applicable to `splunkhecexporter`, `signalfxexporter`."],"awsfirehosereceiver":["Parse encoding as a component ID, not just type, allowing for named encodings. (#39808)","üêû Fix decoding for OTLP-formatted metrics. (#39462)"],"awss3exporter":["Add the retry mode, max attempts and max backoff to the settings (#36264)"],"awss3receiver":["Add SQS support to the awss3receiver component (#36315)"],"azuremonitorreceiver":["Add support for azureauthextension as a token provider for azuremonitorreceiver. (#39048)","use ``metrics`` aggregation filter when ``use_batch_api: true`` (#40079)"],"cloudfoundryreceiver":["Unexport EnvelopeStreamFactory and UAATokenProvider (#40270)"],"cmd/opampsupervisor":["üêû Fix race condition where the Supervisor could report the wrong health status (#40207)"],"coralogixexporter":["Added a mechanism to drop telemetry data when rate limit, quota or authorization errors are encountered. (#40074)","Print metrics causing the partial success response from the backend. (#40199)"],"datadogreceiver":["Address semantic conventions noncompliance and add support for http/db (#36924)"],"datdogexporter, datadogconnector":["Graduate the datadog.EnableReceiveResourceSpansV2 feature gate to beta. (#40083)"],"duration":["is the duration of the rate limit window (default: 1 minute)."],"elasticsearchexporter":["üêû Fix panic when encoding non-string scope attributes. (#37701)"],"enabled":["is a boolean flag to enable the rate limiter mechanism."],"exporter/datadog":["Correctly treat summary counts as cumulative monotonic sums instead of cumulative non-monotonic sums (#40176)"],"faroreceiver, faroexporter":["Stability level changed from development to alpha. (#40000)"],"filelogreceiver":["Introduce `utf8-raw` encoding to avoid replacing invalid bytes with \\uFFFD when reading UTF-8 input. (#39653)"],"fluentforwardreceiver":["Unexport all structs in fluentforward receiver. (#40108)"],"gitlabreceiver":["add GitLab pipeline tracing functionality (#35207)"],"golden":["Return an error on timeout without receiving any data (#40076)"],"googlecloudexporter":["Update the MapMonitoredResource mapping when the exporter.googlecloud.CustomMonitoredResources feature flag is used (#40186)"],"internal/splunk":["Treat HTTP 403 Forbidden as a permanent error. (#39037)"],"k8sattributesprocessor":["Add option to configure automatic service resource attributes (#37114)"],"k8sobserver":["Add namespaces setting for scoping k8s client to specific namespaces (#39677)","Unexport RunningContainer (#40228)"],"kafkaexporter":["Allow kafka exporter to produce to topics based on metadata key values (#39208)"],"kafkareceiver, kafkaexporter":["Add support for named encoding extensions in kafkareceiver and kafkaexporter (#40142)"],"libhoneyreceiver":["Handle paths without slashes at the end by adding them (#40070)"],"lokireceiver":["Add support for structured metadata in lokireceiver (#40095)"],"netflowreceiver":["Unexport OtelLogsProducerWrapper (#40269)"],"opampsupervisor":["üêû Fix bug in order of configuration composition and server start (#39949)","If there is a remote config, the supervisor now reports the remote config as applied and the correct hash on startup. (#40233)"],"otelcol_exporter_prometheusremotewrite_wal_writes":["The total number of WAL writes."],"otelcol_exporter_prometheusremotewrite_wal_writes_failures":["The total number of WAL write failures."],"pkg/experimentalmetricmetadata":["Add missing otel.entity.type field to the delete events (#40279)"],"postgresqlreceiver":["üêû fix too many top query got reported. top query should only report those queries were executed during the query interval (#39942)","Unexport Item (#40265)"],"processor/tailsampling":["Add first policy match decision to tailsampling processor (#36795)"],"prometheusremotewriteexporter":["Adds wal metrics to the Prometheus Remote WRite Exporter. The new metrics are:"],"receiver/k8sclusterreceiver":["Added new resource attributes `k8s.hpa.scaletargetref.kind`, `k8s.hpa.scaletargetref.name`, and `k8s.hpa.scaletargetref.apiversion` to the `k8s.hpa` resource.  These attributes are disabled by default. (#38768)"],"receiver/netflow":["Adds additional common EtherTypes for `network.type`. (#40219)"],"receiver/sqlserver":["Add new metric for disk IO rate on a resource pool (#39977)","Add new metric `sqlserver.lock.wait.count` (#39892)","Add new metric to track OS wait times (#39977)","Enable `sqlserver.page.life_expectancy` metric for all configurations (#39940)"],"receiver/vcenter":["unexport struct DatacenterStats (#40109)"],"signaltometricsconnector":["Add support for parsing gauge metrics from any signal types (#37093)"],"spanmetricsconnector":["üêû Fix bug causing span metrics calls count to be always 0 when using delta temporality (#40139)"],"sqlserverreceiver":["Zero values in delta attributes will be reported in top query collection. (#40041)","Add configuration option `top_query_collection.collection_interval` for top query collection to make the collection less frequent. (#40002)","Use generated structured event functions in mdatagen (#40041)"],"stefreceiver":["Update stability of STEF receiver to Alpha. (#40062)","Correctly handle Shutdown request (#40082)"],"stefreceiver, stefexporter":["üö®‚ö†Ô∏è Updated to STEF 0.0.6, which had a breaking change in the format from 0.0.5 (#40058)"],"sumologicexporter":["Change how infinity bounds are represented in histogram buckets so that the Sumologic backend can properly handle them. (#39904)"],"tcpcheckreceiver":["Unexport TCPConnectionState (#40271)"],"threshold":["is the number of errors to trigger the rate limiter mechanism (default: 10)."],"wavefrontreceiver":["Unexport WavefrontParser struct (#40105)"]},"v0.128.0":{"(general)":["üêû This fixes a bug on Kubernetes daemonset deployments where collector hangs/reboots on startup.","This configuration option already existed but was not available for customer configuration.","exporter/datadogexporter","exporter/signalfxexporter","exporter/syslogexporter","extension/awsproxy","extension/oauth2clientauthextension","extension/opampextension","processor/resourcedetectionprocessor/internal/openshift","receiver/awsfirehosereceiver","receiver/cloudfoundryreceiver","receiver/prometheusreceiver/targetallocator"],"azureauthextension":["üêû Fix the scope retrieval issue for the client authentication of AzureAuthExtension. (#40032)"],"azureblobexporter":["Delete type alias Container (#40268)"],"coralogixexporter":["üêû Fix Authorization header not being set in metadata. (#40330)"],"countconnector":["Upgrade profiles proto to 1.7.0 (#40285)"],"datadogexporter":["Add support for host aliasing via resource attribute `datadog.host.aliases` (#40409)","üêû Fix automatic intial point dropping when converting cumulative monotonic sum metrics (#40426)","Send host metadata on new hosts. (#40409)","config `tls::insecure_skip_verify` is now taken into account in metrics path. (#40507, #40085)"],"elasticsearchexporter":["Upgrade profiles proto to 1.7.0 (#40285)","üêû Fix a bug where unset span status code was being serialized as 'Unset' instead of being ignored (#39498)"],"exporter/datadog":["Adds `hostname_detection_timeout` configuration option for Datadog Exporter and sets default to 25 seconds. (#40373, #40377)"],"filelogreceiver":["The fingerprint of gzip compressed files is created by decompressing and reading the first `fingerprint_size` bytes. (#37772)"],"golden":["Upgrade profiles proto to 1.7.0 (#40285)"],"headersetterextension":["Unexport Header (#40542)"],"intervalprocessor":["Unexport Processor (#40273)"],"k8slogreceiver":["Unexport DockerConfig and CRIConfig (#40274)"],"kafkaexporter":["Add an Alpha feature gate `exporter.kafkaexporter.UseFranzGoClient` to use franz-go in the Kafka exporter for better performance. (#40364)","üêû Fix Snappy compression codec support for the Kafka exporter (#40288)"],"kafkareceiver":["enforce a backoff mechanism on non-permanent errors, such as when the queue is full (#39580)","Don't restart the Kafka consumer on failed errors when message marking is enabled for them. (#39909)"],"libhoneyreceiver":["üêû Fix response encoding for msgpack (#40413)"],"opampsupervisor":["Update passthrough logging to use Error for stderr pipe. (#40491)","Supervisor now persists the remote config status to disk. This allows more accurate reporting of the remote config status. Also reports healthy status when not running the agent due to empty config (previous performance optimization). (#40467)"],"otelarrowexporter":["Configure the combined queue-batch facility, modifies the defaults `sending_queue` settings. (#40211)"],"otelcol_exporter_prometheusremotewrite_wal_reads":["The total number of WAL reads."],"otelcol_exporter_prometheusremotewrite_wal_reads_failures":["The total number of WAL reads failures."],"ottl":["Upgrade profiles proto to 1.7.0 (#40285)"],"pkg":["Remove the fields from category FrontDoorWebApplicationFirewallLog from the body log record and place them as log record attributes. (#39993)"],"pkg/ottl":["Remove access to the profile lookup tables (#40227)","Add `event_name` path to the OTTL Log context (#40230)","Add metric.metadata as a valid OTTL path (#40214)","Add ability to compare slices/pcommon.Slice in OTTL Boolean Expressions (#40370)","Improve time parsing error messages by including the ctime directive instead of the go time layout (#35176)","Add `ottl.ValueComparator` API to allow comparing values using the OTTL comparison rules (#40370)"],"pkg/translator/prometheusremotewrite":["üêû Fix bug where metric metadata was sent with incorrect metric name if configuration includes 'namespace' (#39826)","üêû Fix bug where metric metadata was sent with incorrect metric name if configuration includes 'namespace' (#39826)"],"postgresqlreceiver":["add the ability to obtain query plan for top n queries (#39995)"],"processor/k8sattributes":["Support extracting labels and annotations from k8s Deployments (#37957)"],"processor/resourcedetection":["add `host.interface` resource attribute to `system` detector (#39419)"],"prometheusexporter":["Expose Scope Name, Version, Schema URL, and Attributes as labels. (#40004)"],"prometheusrecevier":["Add feature gate to allow enabling and disabling the Prometheus created timestamp zero ingestion feature flag. (#40245)"],"prometheusremoteexporter":["Delete unused struct `CreatedMetric` (#40266)"],"prometheusremotewriteexporter":["Adds wal metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"prometheusremotewritereceiver":["Improve observability about data ingestion (#37277)","Add LRU cache for resource metrics in prometheusremotewritereceiver. (#37277)","Add a count of all successfully written samples when elements were processed. (#37277)"],"receiver/cloudflare":["Enable the receiver to consume fields from Cloudflare containing a map (#40318)"],"receiver/faro":["Ensure that the Faro receiver waits for http server shutdown to complete before exiting. (#40331)"],"receiver/hostmetrics":["Mark `hostmetrics.process.onWindowsUseNewGetProcesses` feature gate as stable (#32947)"],"receiver/k8s_cluster":["Add onDelete handler to emit the experimental entity delete events (#40278)"],"receivercreator":["Add an option to set default annotations to override the discovery logic (#37436)"],"redisstorageextension":["Add TLS support (#40185)"],"resourcedetectionprocessor":["Add the option to retrieve resource attributes from the K8s API server and EC2 api when the IMDS service is not available. (#39503)","Add additional OS properties to resource detection: `os.build.id` and `os.name` (#39941)"],"several":["Rename fields named `TLSSetting` to `TLS` for consistency with the core repository. (#40452)"],"signalfxexporter":["üêû Fix invalid and missing host metadata when the collector is deployed in a containerized environment and | the host root filesystem is mounted to non-standard location. (#40218)"],"signaltometricsconnector":["Upgrade profiles proto to 1.7.0 (#40285)"],"splunkenterprisereceiver":["Add search artifact size metrics to the existing search dispatch collection, which uses the /services/server/status/dispatch-artifacts API. (#40383)","Unexport Info (#40267)"],"sqlserverreceiver":["Rename flags for enabling top query collection and query sample collection. (#40416)","add one attribute for performance_counter.object_name to deduplicate data (#40359)","üêû Fix incorrect attribute name for database system name in the top query event collection. (#40361)","üêû Fix scraping failure on SQL obfuscation on top query collection and query sample collection. (#40347)"],"sumologicextension":["Be more tolerant of process discovery failures. (#40252)"],"tlscheckreceiver":["Do not crash on target validation \u0026 implement better scrape errors (#40341)"],"windowseventlogreceiver":["Add a boolean option to include the `log.record.original` attribute of each event record. (#40365)"]},"v0.129.0":{"(general)":["kafka_broker_connects","kafka_broker_closed","kafka_broker_throttling_duration","kafka_receiver_bytes","kafka_receiver_bytes_uncompressed","kafka_receiver_latency","This feature allows users to specify dynamic log indices based on attributes.","It supports time-based index name formatting and fallback options."],"alibabacloudlogserviceexporter":["Unexport KeyValues,KeyValue structs (#40644)"],"awslogsencodingextension":["Add support for AWS WAF logs. (#39407)","üêû Fix bug in which concurrent go routines can end up using the same gzip reader (#40838)"],"azuredataexplorerexporter":["Unexport Status, Link, AdxTrace, AdxLog, Event, AdxMetric (#40647)"],"azureeventhubreceiver":["Unexport AzureResourceLogsEventUnmarshaler (#40661)"],"azuremonitorexporter":["Unexport MessagingAttributes,ExceptionAttributes,DatabaseAttributes,RPCAttributes,HTTPAttributes,ConnectionVars,NetworkAttributes (#40648)"],"azuremonitorreceiver":["Add support for azureauth when batch api is enabled. (#40872)","üêû fix unnecessarily exported struct (#40662)","Added new config that sets the number of unique resource IDs to fetch per Batch API call (#40112)"],"bearertokenauthextension":["Unexport BearerAuthRoundTripper,PerRPCAuth,BearerTokenAuth (#40652)"],"clickhouseexporter":["Support JSON type for logs and traces (#40547)"],"collectdreceiver":["Ensure the receiver closes its port when shutting down quickly after starting. (#40406)"],"coralogixexporter":["üêû Fix rate limit error count reset (#40811)"],"datadogconnector":["üêû Use proper syncronization to fix a collector panic when an error occurs (#40845)"],"datadogexporter":["Graduate exporter.datadogexporter.UseLogsAgentExporter feature gate to stable (#40925)","Config `logs::dump_payloads` is no longer supported now that the UseLogsAgentExporter feature gate is stable. (#40925)","Improve accuracy of conversion for single-point exponential histograms (#40867)"],"datadogreceiver":["Implement the `/intake` endpoint (#39787)","Unexport `Endpoint` struct (#40663)"],"elasticsearchexporter":["Add better ECS mapping for traces when using ECS mapping mode. Previously, traces were incorrectly processed by the generic encoder instead of applying ECS-compliant field mappings. (#40807)"],"elasticsearchreceiver":["Add support for ES version 9 (#39929)"],"exporter/datadog":["Adds support for `proxy_url` when using the logs agent exporter (#40640)"],"extension/datadog":["Releases Datadog Extension in alpha. (#39589, #40715)"],"googleclientauthextension":["Promote the googleclientauth extension to beta. (#31412)"],"googlecloudexporter":["Remove the stable exporter.googlecloud.OTLPDirect featuregate (#17192)"],"googlecloudmonitoringreceiver":["Add support for converting Google Cloud monitoring delta distribution metrics to OpenTelemetry histograms. (#39600)"],"hostmetricsreceiver":["Skeleton nfsscraper -- adds Linux nfs and nfsd metrics from /proc (#39978)","üêû Minor fix to the handling of conntrack errors (#40175)","Skeleton nfsscraper -- adds Linux nfs and nfsd metrics from /proc (#39978)"],"k8sattributesprocessor":["Make sure getIdentifiersFromAssoc() can handle container.id (#40745)"],"kafka":["remove broken SASL/AWS_MSK_IAM auth mechanism from Kafka components (#40554)","üêû Fixes a defect introduced in #39115 that prevents MSK IAM auth from working (#40720)"],"kafkaexporter":["Improve kafkaexporter internal metrics telemetry (#40815)"],"kafkareceiver":["Improve kafkareceiver internal metrics telemetry (#40816)","Add an Alpha feature gate `receiver.kafkareceiver.UseFranzGo` to use franz-go in the Kafka receiver for better performance. (#40628)","Refactor Sarama client to pave the way for franz-go `featuregate` opt-in (#40628)","Create the consumer group asynchronously, and report component status (#40516)","Protect partition lost/revoke callback against unassigned groups (#40920)"],"kineticaexporter":["unexport structs (#40680)"],"libhoneyreceiver":["üêû Fix parent id handling in libhoneyreceiver (#40934)","remove unused EnvironmentInfo,AuthInfo,TeamInfo (#40669)"],"logdedupprocessor":["Taught logdedupprocessor not to panic if the dedup field source was not found or not a map (#40204)"],"logzioexporter":["Deprecates `jsonlog` and `logziospan` usage and replace with `plogotlp.ExportRequest` and `ptraceotlp.ExportRequest` accordingly. (#40192)","Support `plogotlp.ExportRequest` struct for logs export, and `ptraceotlp.ExportRequest` struct for traces export. (#40192)"],"mysqlreceiver":["Unexport TableStats,TableIoWaitsStats,StatementEventStats,ReplicaStatusStats,IoWaitsStats,IndexIoWaitsStats,MySQLTestConfig structs from mysqlreceiver (#40671)"],"netflowreceiver":["Add TCP flags attribute to netflow receiver. (#40487)"],"opampextension":["Set the default value of `ReportsAvailableComponents` to `true` (#40485)"],"opensearchexporter":["Add support for dynamic log indexing in OpenSearch exporter (#34746, #38595)"],"otelcol_exporter_prometheusremotewrite_wal_read_latency":["The latency of WAL reads."],"otelcol_exporter_prometheusremotewrite_wal_write_latency":["The latency of WAL writes."],"pkg":["Remove the fields from category FrontDoorAccessLog from the body log record and place them as log record attributes in translator azurelogs. (#40453)"],"pkg/datadog":["Exposes 'SerializerWithForwarder' interface to allow for direct interaction with the underlying forwarder's lifecycle methods. (#40637)","Creates `agentcomponents` package to be used in Datadog components that rely on external dependencies. (#40532, #40556, #40560)"],"pkg/ottl":["Add new ContainsValue converter to check whether a value is present in a slice. (#30420)","Add accessors for profile attributes (#39681)","Add context inference support for OTTL value expressions (#39158)","Add new ContainsValue converter to check whether a value is present in a slice. (#30420)"],"pkg/stanza":["Remove deprecated decode package (#40861)"],"pkg/translator/prometheusremotewrite":["`FromMetricsV2` now supports translating histograms. (#33661)","`FromMetricsV2` now supports translating summaries. (#33661)"],"podmanreceiver":["Deprecate \"ssh-dss\" host key algorithm for SSH connections (#40796)","Unexport ContainerScraper (#40672)"],"postgresqlreceiver":["Adopt mdatagen events for postgresqlreceiver. (#40549)"],"processor/transform":["üêû Introduce optional metric name suffix setup for metric conversion functions (#33850)"],"prometheusexporter, prometheusremotewriteexporter":["Promote the pkg.translator.prometheus.NormalizeName feature gate to stable. (#40603)"],"prometheusreceiver":["Promote the receiver.prometheusreceiver.RemoveLegacyResourceAttributes featuregate to stable (#40572)","üêû Fix invalid metric name validation error in scrape start from target allocator. (#35459, #40788)"],"prometheusremotewriteexporter":["Remove the stable exporter.prometheusremotewriteexporter.deprecateCreatedMetric featuregate (#40570)","Adds WAL latency metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"prometheusremotewritereceiver":["Add exponential histograms datapoints to the prometheusremotewritereceiver (#37277)","Unexport MockConsumer,MetricIdentity structs (#40673)"],"receiver/hostmetrics":["Add `system.paging.faults` metrics on Windows (#40468)"],"receiver/httpcheck":["Always close resp.Body and add timeout (#40552)","üêû Fix resource leak caused by failure to close request body (#40695)"],"receiver/simpleprometheus":["üêû Fix bug that caused the labels configuration option to be ignored (#40722)"],"receivercreator":["Properly handle default endpoint for annotation discovery (#40712)"],"resourcedetectionprocessor":["Promote the processor.resourcedetection.removeGCPFaasID feature gate to beta. (#40601)","Remove the stable processor.resourcedetection.hostCPUSteppingAsString featuregate (#40569)"],"routingconnector":["Copy IsMonotonic and AggregationTemporality when routing metrics on datapoint context. (#37273)"],"sentryexporter":["unexport structs and methods which should be private (#40651)"],"snmpreceiver":["Unexport SNMPData (#40543)"],"snowflakereceiver":["adds a pre-scrape check to see if metrics are enabled. (#40418)","Correct handling of datatypes of Snowflake receiver (#40418)","Rectified datatypes of storagemetrics of Snowflake receiver (#40857)"],"sqlqueryreceiver":["Add SQL connection fields `host`, `port`, `database`, `username`, `password`, and `additional_params`. (#39760)","Add SQL connection fields `host`, `port`, `database`, `username`, `password`, and `additional_params`. (#39760)"],"sqlserverreceiver":["Only empty strings for query texts and query plans when obfuscation failed. (#40527)","add feature gate for removing metrics resource attributes `server.address`, and `server.port` (#40579)","Update obfuscation library to use `mssql` mode. (#40525)","export `host.name` as resource attributes for metrics (#40576)","do not export Item struct (#40676)"],"sumologicextension":["Unexport ErrorAPI (#40655)"],"tinybirdexporter":["Introduce Tinybird Exporter (#40475)"],"transformprocessor":["Create `With*Functions` factory options to provide custom OTTL functions for logs, metrics or traces to the resulting transform processor. (#39698)"],"windowseventlogreceiver":["Added option to prevent collector shutdown due to errors while opening channels (#36237)"]},"v0.130.0":{"(general)":["exporter/carbonexporter","exporter/kineticaexporter","extension/healthcheck","extension/observer/ecstaskobserver","extension/oidcauth","processor/groupbytrace","receiver/awscloudwatchmetricsreceiver","receiver/carbonreceiver","scraper/zookeeperscraper","üêû Due to a [bug](https://github.com/open-telemetry/opentelemetry-go/issues/7039) in the internal telemetry Prometheus exporter, if you are configuring an internal telemetry Prometheus exporter, the collector's internal metrics will be emitted with an unexpected suffix in its name. For example, the metric `otelcol_exporter_sent_spans__spans__total` instead of `otelcol_exporter_sent_spans_total`. The workaround is to manually configure `without_units: true` in your internal telemetry Prometheus exporter config","pull:","\u003cUSER_PROVIDED_CONFIG_FILES\u003e","\"$OWN_TELEMETRY_CONFIG\": configuration to set up the agent's own telemetry (resource, identifying and non-identifying attributes, etc.).","\"$OPAMP_EXTENSION_CONFIG\": configuration for the agent's OpAMP extension to connect to the Supervisor.","\"$REMOTE_CONFIG\": remote configuration received by the Supervisor.","base_config.yaml","$OWN_TELEMETRY_CONFIG","$OPAMP_EXTENSION_CONFIG","$REMOTE_CONFIG","compliance_config.yaml","\u003cUSER_PROVIDED_CONFIG_FILES\u003e"],"awscloudwatchreceiver":["üêû Fixes issue with autodiscovered groups that were deleted preventing logs during that poll (#38940)"],"awslogsencodingextension":["Bump the stability to Alpha, and include it in otelcontribcol. (#38627)","Add support for AWS CloudTrail logs. (#40246)"],"awsxrayexporter":["üêû Fix incorrect http url generation in trace segment when url.path is present (#40809)"],"cgroupruntimeextension":["Promote to alpha stability (#41128)"],"clickhouseexporter":["üêû Fix log `Body` only recording `String` data (#41141)"],"cmd/opampsupervisor":["Remote configuration by default now merges on top of user-provided config files. (#39963)","Allow the Supervisor send a SIGHUP signal to the agent to reload its configuration. (#40410)","Add support for total control of configuration merging through special configuration files (#39963)","Supervisor without remote config capabilities now correctly ignores remote config messages. (#41166)"],"coralogixprocessor":["Add transactions feature (#40863)","Promote traces to alpha stability. (#41061)"],"datadogexporter":["Added ability for Datadog metrics serializer exporter to set proxy variables (#41041)"],"dorisexporter":["üêû fix ddl for doris 3.0.6 and 2.1.10 (#40578, #40827)"],"elasticsearchexporter":["Add telemetry for bulk indexers used to index documents to Elasticsearch. (#38610)","Support profiles variable sampling frequency. (#40115)","Duplicate profiling events with count values larger than 1 (#40946)","Store Sample level `service.name` with each profiling event. (#40967)","Increase metric grouping hash and _metric_names_hash from 32 bit to 64 bit to reduce collisions and chance of consequent data loss. (#41208)","Improve error messages for invalid datapoints by including metric names in error output (#39063)","Fetch `HostID`, `ContainerID`, `K8SPodName` and `K8sNamespaceName` from Resource instead of from Sample. (#40967)","üêû Fix how profiles locations are interpreted and stored. (#40959)","üêû Fix storing of sample attributes. (#40961)","Store process.executable.name as part of profiling events. (#40961)","üêû Fix regression `retry::max_retries` not applying correctly for HTTP request levels retries (#39670)","üêû Fix incorrect retry backoff duration calculation (#41187)","Update 'batcher' config to use internal struct instead of the one removed from the core. (#41225)"],"exporter/datadogexporter":["Ignore APM-related metrics for the running metric for metrics (#41228)"],"faroreceiver":["Ensure that the level is added to all the faro logs. (#40701)"],"filelogreceiver":["Add option `include_file_record_offset` to insert offset as attribute in log records as `log.file.record.offset` (#39684)","üêû Fix `remove`, `copy`, and `move` operator configuration validation. (#40728)"],"geoipprocessor":["Use semantic convention Geo attributes (#34745)"],"githubreceiver":["Added the ability to convert custom repository properties to span attributes (#40878)"],"jsonlogencodingextension":["Add array_mode configuration option and add support to process arbitrary JSON inputs (#40877, #40545)"],"kafka":["The default client ID for Kafka components now honours configuration, and defaults to \"otel-collector\". (#41090)"],"kafkaexporter, kafkatopicsobserver, kafkametricsreceiver, kafkareceiver":["üêû Fix aws_msk configuration in the doc (#41118)"],"kafkareceiver (franz-go client)":["üêû Fix race on lost partition (#41239)"],"kubeletstats":["Move receiver.kubeletstats.enableCPUUsageMetrics feature gate to stable (#39650)"],"loadbalancingexporter":["Use a linear probe to decrease variance caused by hash collisions, which was causing a non-uniform distribution of loadbalancing. (#41200)"],"metricstarttimeprocessor":["Add the start_time_metric, which sets the start time based on another metric in the batch of metrics. (#38383)","Add the start_time_metric, which sets the start time based on another metric in the batch of metrics. (#38383)"],"mysqlreceiver":["Collect 'fsync' log operations. (#41175)","Add mysql.max_used_connections metric (#40626)"],"otelcol_exporter_prometheusremotewrite_wal_bytes_read":["The total number of bytes reads from the WAL."],"otelcol_exporter_prometheusremotewrite_wal_bytes_written":["The total number of bytes written to the WAL."],"pkg/ottl":["Add new `Keys` converter to extract all keys from a given map. (#39256)","Added a new `ParseInt` OTTL Function. (#40758)","üêû Fix OTTL functions by using setters. (#39100)","üêû Fix an issue where the attribute values were amended in the profiles dictionary. (#40738)","üêû Fixes the OTTL nanoseconds formatter to correctly handle 9 digits of nanoseconds, ensuring accurate time formatting and parsing. (#41144)","Add a `GetOr` function to `ottl.Optional` to return a default value when the optional is empty. (#40243)"],"postgresqlreceiver":["Only scrape the query samples that are newer than last scraped (#40622)"],"prometheusremotewriteexporter":["Adds WAL bytes read/write metrics to the Prometheus Remote Write Exporter. The new metrics are:"],"prometheusremotewritereceiver":["Drop summary and classic histogram series as we will not handle them. (#40975)"],"receiver/lokireceiver":["üêû fix parsing of Content-Type header (#41192)"],"receiver/postgresql":["Move receiver.postgresql.connectionPool feature gate to alpha (#30831)"],"receiver/prometheusreceiver":["üêû Fixes masking of authentication credentials in Prometheus receiver, when reloading the Prometheus config. (#40520, #40916)"],"receiver/prometheusremotewrite":["Handle metrics with unspecified types without panicking. (#41005)"],"receivercreator":["üêû Fix incorrect traces consumer filtering in filterConsumerSignals function (#41033)"],"servicegraphconnector":["Remove deprecated field `database_name_attribute` and update the documentation. (#41094)"],"spanmetricsconnector":["Mark dimensions_cache_size as deprecated following the upstream guidelines (#41101)"],"splunkhecexporter":["Deprecate 'batcher' config, use 'sending_queue::batch' instead (#41224)","Update 'batcher' config to use internal deprecated struct instead of the one removed from the core. (#41224)"],"sqlserverreceiver":["Adding 'sqlserver.cpu.count' metric (#41032)","üêû Fix incorrect configuration used in query sample collection. It was intended to retrieve the maximum number of rows per query from config.MaxRowsPerQuery, but it was mistakenly using config.TopQueryCount instead."],"sumologicprocessor":["Types that do not contribute to intended API surface will be unexported (#40660)"],"syslogexporter":["Add support for Unix sockets (#40740)"],"tinybird":["Implement logs propagation for Tinybird exporter (#40475)"],"tinybirdexporter":["Add traces implementation (#40475)"],"transformprocessor":["Add profiles support to transformprocessor. (#39009)"]}}}}
